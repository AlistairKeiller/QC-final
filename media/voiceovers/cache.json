[
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3"
  },
  {
    "input_text": "First let's review the concepts of a classical encoder, and see the motivation for turning it quantum.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical encoder, and see the motivation for turning it quantum.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-a60e07cc.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-a60e07cc.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3"
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-22b428c1.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-22b428c1.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3"
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-b8be6996.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-b8be6996.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3"
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The classical autoencoder is a subclass of deep neural networks in which the network is trained to output its input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-d1ca2c4c.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80399999,
        "text_offset": 117,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87899999,
        "text_offset": 127,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 139,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 142,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99200000,
        "text_offset": 144,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 153,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 156,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109600000,
        "text_offset": 161,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 177,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 180,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123400000,
        "text_offset": 186,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125399999,
        "text_offset": 190,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128600000,
        "text_offset": 198,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 201,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " to.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 213,
        "word_length": 7,
        "text": " Output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149800000,
        "text_offset": 220,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 224,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The classical autoencoder is a subclass of deep neural networks in which the network is trained to. Output its input"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1000000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56200000,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79600000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82000000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112400000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126400000,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166000000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169400000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173600000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 268,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 272,
        "word_length": 10,
        "text": " automatic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 282,
        "word_length": 8,
        "text": " control",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 290,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 293,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192200000,
        "text_offset": 297,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195400000,
        "text_offset": 304,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206800000,
        "text_offset": 311,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209000000,
        "text_offset": 317,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212399999,
        "text_offset": 324,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 328,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217800000,
        "text_offset": 330,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221200000,
        "text_offset": 338,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229200000,
        "text_offset": 353,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234000000,
        "text_offset": 356,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235600000,
        "text_offset": 360,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. The automatic control of the latent space, which allows for a compact representation of the input.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1000000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56200000,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79600000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82000000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112400000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126400000,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166000000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169400000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173600000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 268,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 272,
        "word_length": 10,
        "text": " automatic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 282,
        "word_length": 8,
        "text": " control",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 290,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 293,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192200000,
        "text_offset": 297,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195400000,
        "text_offset": 304,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206800000,
        "text_offset": 311,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209000000,
        "text_offset": 317,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212399999,
        "text_offset": 324,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 328,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217800000,
        "text_offset": 330,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221200000,
        "text_offset": 338,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229200000,
        "text_offset": 353,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234000000,
        "text_offset": 356,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235600000,
        "text_offset": 360,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. The automatic control of the latent space, which allows for a compact representation of the input.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1000000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56200000,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79600000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82000000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112400000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126400000,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166000000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169400000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173600000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 268,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 272,
        "word_length": 10,
        "text": " automatic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 282,
        "word_length": 8,
        "text": " control",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 290,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 293,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192200000,
        "text_offset": 297,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195400000,
        "text_offset": 304,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206800000,
        "text_offset": 311,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209000000,
        "text_offset": 317,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212399999,
        "text_offset": 324,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 328,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217800000,
        "text_offset": 330,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221200000,
        "text_offset": 338,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229200000,
        "text_offset": 353,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234000000,
        "text_offset": 356,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235600000,
        "text_offset": 360,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. The automatic control of the latent space, which allows for a compact representation of the input.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1000000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56200000,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79600000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82000000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112400000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126400000,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166000000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169400000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173600000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 268,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 272,
        "word_length": 10,
        "text": " automatic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 282,
        "word_length": 8,
        "text": " control",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 290,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 293,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192200000,
        "text_offset": 297,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195400000,
        "text_offset": 304,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206800000,
        "text_offset": 311,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209000000,
        "text_offset": 317,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212399999,
        "text_offset": 324,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 328,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217800000,
        "text_offset": 330,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221200000,
        "text_offset": 338,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229200000,
        "text_offset": 353,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234000000,
        "text_offset": 356,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235600000,
        "text_offset": 360,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. The automatic control of the latent space, which allows for a compact representation of the input.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1000000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56200000,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79600000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82000000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112400000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126400000,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166000000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169400000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173600000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 268,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 272,
        "word_length": 10,
        "text": " automatic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 282,
        "word_length": 8,
        "text": " control",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 290,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 293,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192200000,
        "text_offset": 297,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195400000,
        "text_offset": 304,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206800000,
        "text_offset": 311,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209000000,
        "text_offset": 317,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212399999,
        "text_offset": 324,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 328,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217800000,
        "text_offset": 330,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221200000,
        "text_offset": 338,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229200000,
        "text_offset": 353,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234000000,
        "text_offset": 356,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235600000,
        "text_offset": 360,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. The automatic control of the latent space, which allows for a compact representation of the input.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1000000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21200000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35600000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56200000,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79600000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82000000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112400000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126400000,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166000000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169400000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173600000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 268,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 272,
        "word_length": 10,
        "text": " automatic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 282,
        "word_length": 8,
        "text": " control",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 290,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 293,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192200000,
        "text_offset": 297,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195400000,
        "text_offset": 304,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206800000,
        "text_offset": 311,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209000000,
        "text_offset": 317,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212399999,
        "text_offset": 324,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 328,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217800000,
        "text_offset": 330,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221200000,
        "text_offset": 338,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229200000,
        "text_offset": 353,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234000000,
        "text_offset": 356,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235600000,
        "text_offset": 360,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. The automatic control of the latent space, which allows for a compact representation of the input.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-fb647acc.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-0479fa62.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117400000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286200000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300000000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304000000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311800000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316200000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317600000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322400000,
        "text_offset": 474,
        "word_length": 8,
        "text": " content",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-0479fa62.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-0479fa62.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117400000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286200000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300000000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304000000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311800000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316200000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317600000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322400000,
        "text_offset": 474,
        "word_length": 8,
        "text": " content",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-0479fa62.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-0479fa62.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117400000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286200000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300000000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304000000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311800000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316200000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317600000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322400000,
        "text_offset": 474,
        "word_length": 8,
        "text": " content",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-0479fa62.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-93e0dd9b.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163800000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168200000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172000000,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177399999,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188400000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190600000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192800000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195799999,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207399999,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216400000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218600000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221800000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230000000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234800000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236200000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245600000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247399999,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250200000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252800000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254400000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259800000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262800000,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268200000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270800000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285600000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286200000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288000000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291000000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295600000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298200000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299800000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304200000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314200000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318000000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322400000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338600000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357600000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359000000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360800000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365000000,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366200000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373600000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381800000,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384600000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396599999,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398000000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402000000,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404400000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 408000000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 417000000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421400000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425400000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428400000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-93e0dd9b.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-93e0dd9b.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163800000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168200000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172000000,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177399999,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188400000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190600000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192800000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195799999,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207399999,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216400000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218600000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221800000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230000000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234800000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236200000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245600000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247399999,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250200000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252800000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254400000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259800000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262800000,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268200000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270800000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285600000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286200000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288000000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291000000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295600000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298200000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299800000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304200000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314200000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318000000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322400000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338600000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357600000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359000000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360800000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365000000,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366200000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373600000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381800000,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384600000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396599999,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398000000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402000000,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404400000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 408000000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 417000000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421400000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425400000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428400000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-93e0dd9b.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-93e0dd9b.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163800000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168200000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172000000,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177399999,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188400000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190600000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192800000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195799999,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207399999,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216400000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218600000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221800000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230000000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234800000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236200000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245600000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247399999,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250200000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252800000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254400000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259800000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262800000,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268200000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270800000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285600000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286200000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288000000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291000000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295600000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298200000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299800000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304200000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314200000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318000000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322400000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338600000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357600000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359000000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360800000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365000000,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366200000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373600000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381800000,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384600000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396599999,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398000000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402000000,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404400000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 408000000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 417000000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421400000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425400000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428400000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-93e0dd9b.mp3"
  },
  {
    "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt.",
    "input_data": {
      "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challanges-are-f4720120.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19400000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53200000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91800000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108600000,
        "text_offset": 133,
        "word_length": 5,
        "text": " Auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110200000,
        "text_offset": 138,
        "word_length": 9,
        "text": " encoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116800000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122000000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127200000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139600000,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164600000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Auto encoders can solve both at once. And therefore are a very natural architecture to adapt.",
    "final_audio": "in-quantum-computing-two-major-challanges-are-f4720120.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-93e0dd9b.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163800000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168200000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172000000,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177399999,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188400000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190600000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192800000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195799999,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207399999,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216400000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218600000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221800000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230000000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234800000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236200000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245600000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247399999,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250200000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252800000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254400000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259800000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262800000,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268200000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270800000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285600000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286200000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288000000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291000000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295600000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298200000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299800000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304200000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314200000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318000000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322400000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338600000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357600000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359000000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360800000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365000000,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366200000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373600000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381800000,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384600000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396599999,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398000000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402000000,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404400000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 408000000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 417000000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421400000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425400000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428400000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-93e0dd9b.mp3"
  },
  {
    "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt. <bookmark mark='A'/> For the sake of brevity, I will be brief with many explenations in this adaptation processes, so I will try to leave references down on the bottom right for fruther exploration.",
    "input_data": {
      "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt.  For the sake of brevity, I will be brief with many explenations in this adaptation processes, so I will try to leave references down on the bottom right for fruther exploration.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challanges-are-6bb0513e.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19400000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44400000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53200000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91400000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95800000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164600000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 226,
        "word_length": 4,
        "text": " For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175600000,
        "text_offset": 230,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 234,
        "word_length": 5,
        "text": " sake",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 239,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182600000,
        "text_offset": 242,
        "word_length": 9,
        "text": " brevity,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193200000,
        "text_offset": 251,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 253,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 258,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 261,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200400000,
        "text_offset": 267,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203200000,
        "text_offset": 272,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207300000,
        "text_offset": 277,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 214800000,
        "text_offset": 290,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217800000,
        "text_offset": 293,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 219800000,
        "text_offset": 298,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 225300000,
        "text_offset": 309,
        "word_length": 11,
        "text": " processes.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242800000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243600000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244800000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246200000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249200000,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250799999,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253200000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259000000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263000000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265200000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 266600000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272800000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 275400000,
        "text_offset": 383,
        "word_length": 8,
        "text": " Fruther",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279800000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. For the sake of brevity, I will be brief with many explanations in this adaptation processes. So I will try to leave references down on the bottom right for Fruther exploration.",
    "final_audio": "in-quantum-computing-two-major-challanges-are-6bb0513e.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs.",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs.",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-93e0dd9b.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163800000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168200000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172000000,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177399999,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188400000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190600000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192800000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195799999,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207399999,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216400000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218600000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221800000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230000000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234800000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236200000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245600000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247399999,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250200000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252800000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254400000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259800000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262800000,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268200000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270800000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285600000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286200000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288000000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291000000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295600000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298200000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299800000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304200000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314200000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318000000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322400000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338600000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357600000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359000000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360800000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365000000,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366200000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373600000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381800000,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384600000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396599999,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398000000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402000000,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404400000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 408000000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 417000000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421400000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425400000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428400000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-93e0dd9b.mp3"
  },
  {
    "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt. <bookmark mark='A'/> For the sake of brevity, I will be brief with many explenations in this adaptation processes, so I will try to leave references down on the bottom right for fruther exploration.",
    "input_data": {
      "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt.  For the sake of brevity, I will be brief with many explenations in this adaptation processes, so I will try to leave references down on the bottom right for fruther exploration.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challanges-are-6bb0513e.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19400000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44400000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53200000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91400000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95800000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164600000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 226,
        "word_length": 4,
        "text": " For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175600000,
        "text_offset": 230,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 234,
        "word_length": 5,
        "text": " sake",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 239,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182600000,
        "text_offset": 242,
        "word_length": 9,
        "text": " brevity,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193200000,
        "text_offset": 251,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 253,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 258,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 261,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200400000,
        "text_offset": 267,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203200000,
        "text_offset": 272,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207300000,
        "text_offset": 277,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 214800000,
        "text_offset": 290,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217800000,
        "text_offset": 293,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 219800000,
        "text_offset": 298,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 225300000,
        "text_offset": 309,
        "word_length": 11,
        "text": " processes.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242800000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243600000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244800000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246200000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249200000,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250799999,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253200000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259000000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263000000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265200000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 266600000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272800000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 275400000,
        "text_offset": 383,
        "word_length": 8,
        "text": " Fruther",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279800000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. For the sake of brevity, I will be brief with many explanations in this adaptation processes. So I will try to leave references down on the bottom right for Fruther exploration.",
    "final_audio": "in-quantum-computing-two-major-challanges-are-6bb0513e.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt. <bookmark mark='A'/> For the sake of brevity, I will be brief with many explenations in this adaptation processes, so I will try to leave references down on the bottom right for fruther exploration.",
    "input_data": {
      "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt.  For the sake of brevity, I will be brief with many explenations in this adaptation processes, so I will try to leave references down on the bottom right for fruther exploration.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challanges-are-6bb0513e.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19400000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44400000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53200000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91400000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95800000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164600000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 226,
        "word_length": 4,
        "text": " For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175600000,
        "text_offset": 230,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 234,
        "word_length": 5,
        "text": " sake",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 239,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182600000,
        "text_offset": 242,
        "word_length": 9,
        "text": " brevity,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193200000,
        "text_offset": 251,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 253,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 258,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 261,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200400000,
        "text_offset": 267,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203200000,
        "text_offset": 272,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207300000,
        "text_offset": 277,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 214800000,
        "text_offset": 290,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217800000,
        "text_offset": 293,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 219800000,
        "text_offset": 298,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 225300000,
        "text_offset": 309,
        "word_length": 11,
        "text": " processes.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242800000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243600000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244800000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246200000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249200000,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250799999,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253200000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259000000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263000000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265200000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 266600000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272800000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 275400000,
        "text_offset": 383,
        "word_length": 8,
        "text": " Fruther",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279800000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. For the sake of brevity, I will be brief with many explanations in this adaptation processes. So I will try to leave references down on the bottom right for Fruther exploration.",
    "final_audio": "in-quantum-computing-two-major-challanges-are-6bb0513e.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt. <bookmark mark='A'/> For the sake of brevity, I will be brief with many explenations in this adaptation processes, so I will try to leave references down on the bottom right for fruther exploration.",
    "input_data": {
      "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt.  For the sake of brevity, I will be brief with many explenations in this adaptation processes, so I will try to leave references down on the bottom right for fruther exploration.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challanges-are-6bb0513e.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6200000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19400000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44400000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53200000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91400000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95800000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164600000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 226,
        "word_length": 4,
        "text": " For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175600000,
        "text_offset": 230,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 234,
        "word_length": 5,
        "text": " sake",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 239,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182600000,
        "text_offset": 242,
        "word_length": 9,
        "text": " brevity,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193200000,
        "text_offset": 251,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 253,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 258,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 261,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200400000,
        "text_offset": 267,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203200000,
        "text_offset": 272,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207300000,
        "text_offset": 277,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 214800000,
        "text_offset": 290,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217800000,
        "text_offset": 293,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 219800000,
        "text_offset": 298,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 225300000,
        "text_offset": 309,
        "word_length": 11,
        "text": " processes.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242800000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243600000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244800000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246200000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249200000,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250799999,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253200000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259000000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263000000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265200000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 266600000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272800000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 275400000,
        "text_offset": 383,
        "word_length": 8,
        "text": " Fruther",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279800000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. For the sake of brevity, I will be brief with many explanations in this adaptation processes. So I will try to leave references down on the bottom right for Fruther exploration.",
    "final_audio": "in-quantum-computing-two-major-challanges-are-6bb0513e.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt. <bookmark mark='A'/> I will be brief with many explenations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for fruther exploration. <bookmark mark='B'/> There are three key steps for training a usuable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer.",
    "input_data": {
      "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt.  I will be brief with many explenations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for fruther exploration.  There are three key steps for training a usuable autoencoder. The forward pass.  The backpropagation.  And the optimizer.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challanges-are-349bda6e.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19400000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53200000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61600000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95800000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125000000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139400000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147800000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164600000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174200000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175400000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176600000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178400000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181600000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184400000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188000000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196000000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 199200000,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200600000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205200000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211400000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 214800000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 222200000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248000000,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 251600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257800000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264000000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267800000,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 274200000,
        "text_offset": 383,
        "word_length": 8,
        "text": " fruther",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279200000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 297600000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 297600000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304200000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314800000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317000000,
        "text_offset": 445,
        "word_length": 6,
        "text": " usual",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322900000,
        "text_offset": 451,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 337800000,
        "text_offset": 464,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339200000,
        "text_offset": 468,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 476,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 482,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 355400000,
        "text_offset": 486,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 491,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 372400000,
        "text_offset": 504,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373000000,
        "text_offset": 508,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373800000,
        "text_offset": 512,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for fruther exploration. There are three key steps for training a usual autoencoder. The forward pass, the back propagation, and the optimizer.",
    "final_audio": "in-quantum-computing-two-major-challanges-are-349bda6e.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt. <bookmark mark='A'/> I will be brief with many explenations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for fruther exploration. <bookmark mark='B'/> There are three key steps for training a usuable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer.",
    "input_data": {
      "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt.  I will be brief with many explenations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for fruther exploration.  There are three key steps for training a usuable autoencoder. The forward pass.  The backpropagation.  And the optimizer.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challanges-are-349bda6e.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19400000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53200000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61600000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95800000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125000000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139400000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147800000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164600000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174200000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175400000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176600000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178400000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181600000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184400000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188000000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196000000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 199200000,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200600000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205200000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211400000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 214800000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 222200000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248000000,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 251600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257800000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264000000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267800000,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 274200000,
        "text_offset": 383,
        "word_length": 8,
        "text": " fruther",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279200000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 297600000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 297600000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304200000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314800000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317000000,
        "text_offset": 445,
        "word_length": 6,
        "text": " usual",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322900000,
        "text_offset": 451,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 337800000,
        "text_offset": 464,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339200000,
        "text_offset": 468,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 476,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 482,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 355400000,
        "text_offset": 486,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 491,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 372400000,
        "text_offset": 504,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373000000,
        "text_offset": 508,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373800000,
        "text_offset": 512,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for fruther exploration. There are three key steps for training a usual autoencoder. The forward pass, the back propagation, and the optimizer.",
    "final_audio": "in-quantum-computing-two-major-challanges-are-349bda6e.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt. <bookmark mark='A'/> I will be brief with many explenations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for fruther exploration. <bookmark mark='B'/> There are three key steps for training a usuable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for",
    "input_data": {
      "input_text": "In quantum computing, two major challanges are compression of data are efficently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural archecture to adapt.  I will be brief with many explenations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for fruther exploration.  There are three key steps for training a usuable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challanges-are-15a1fb7e.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19400000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23600000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53200000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61600000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95800000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139400000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147800000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164600000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174200000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175400000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176600000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178600000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181800000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184600000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188000000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196000000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 199400000,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200799999,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205200000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211400000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218400000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 222399999,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248000000,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 251600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257800000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264000000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267800000,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 274200000,
        "text_offset": 383,
        "word_length": 8,
        "text": " fruther",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279200000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 297600000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 297600000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304200000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314600000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317000000,
        "text_offset": 445,
        "word_length": 6,
        "text": " usual",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 323200000,
        "text_offset": 451,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338000000,
        "text_offset": 464,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339200000,
        "text_offset": 468,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 476,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 482,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 355400000,
        "text_offset": 486,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 491,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 371000000,
        "text_offset": 504,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 372400000,
        "text_offset": 508,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374200000,
        "text_offset": 512,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386600000,
        "text_offset": 523,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 526,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391400000,
        "text_offset": 534,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394600000,
        "text_offset": 538,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397600000,
        "text_offset": 543,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 399600000,
        "text_offset": 546,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402800000,
        "text_offset": 552,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 406599999,
        "text_offset": 559,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 408600000,
        "text_offset": 562,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 567,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 411599999,
        "text_offset": 569,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 577,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 419799999,
        "text_offset": 585,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438000000,
        "text_offset": 591,
        "word_length": 8,
        "text": " Several",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438000000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 444799999,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 447200000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450200000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 452800000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 629,
        "word_length": 5,
        "text": " for.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for fruther exploration. There are three key steps for training a usual autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Several networks rely on data cloning for.",
    "final_audio": "in-quantum-computing-two-major-challanges-are-15a1fb7e.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141800000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245799999,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318400000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558000000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 810,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 818,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 824,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 827,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 832,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 841,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 844,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 849,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 855,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 858,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617500000,
        "text_offset": 862,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626000000,
        "text_offset": 876,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640000000,
        "text_offset": 883,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641200000,
        "text_offset": 886,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 889,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 893,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648000000,
        "text_offset": 900,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654000000,
        "text_offset": 911,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 914,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661800000,
        "text_offset": 925,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 928,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 942,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 947,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 956,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-f4987504.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates. <bookmark mark='G'/> To change the size of hidden layers, we can",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.  To change the size of hidden layers, we can",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-74b35cce.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 47,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 59,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "text_offset": 62,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 67,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46200000,
        "text_offset": 71,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 83,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 91,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61400000,
        "text_offset": 96,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "text_offset": 99,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 105,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93400000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107200000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137400000,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148200000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152400000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158600000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172399999,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173400000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174800000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176600000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182399999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185400000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193600000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197000000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198200000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202800000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209000000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212600000,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216000000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 219300000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238400000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 239400000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240799999,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242200000,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245200000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246800000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248800000,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255000000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261200000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265200000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271400000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 275600000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294000000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294000000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295600000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298200000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301000000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306800000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308000000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 313800000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 332600000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333800000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349000000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350000000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 353600000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365600000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367000000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 368800000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381400000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382600000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386200000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 389400000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 392400000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394400000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397600000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401400000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404799999,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407399999,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 409600000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414400000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 429200000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 432600000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 439799999,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442000000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445000000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 447600000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 452800000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 455400000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457200000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459600000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464400000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 465600000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469200000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 484799999,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486400000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 488400000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494400000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497000000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501000000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503000000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 505600000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 513600000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519200000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 521800000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 524799999,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529000000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 544800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 546400000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549000000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 550600000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559000000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562600000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 570600000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572400000,
        "text_offset": 806,
        "word_length": 5,
        "text": "-QBIT",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 577600000,
        "text_offset": 811,
        "word_length": 8,
        "text": " Unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 582600000,
        "text_offset": 819,
        "word_length": 6,
        "text": " Gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 591600000,
        "text_offset": 825,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593200000,
        "text_offset": 828,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595800000,
        "text_offset": 833,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 842,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607200000,
        "text_offset": 845,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 850,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 612800000,
        "text_offset": 856,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 615600000,
        "text_offset": 859,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617600000,
        "text_offset": 863,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 625600000,
        "text_offset": 877,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 639800000,
        "text_offset": 884,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641000000,
        "text_offset": 887,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642600000,
        "text_offset": 890,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644200000,
        "text_offset": 894,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 647800000,
        "text_offset": 901,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651000000,
        "text_offset": 905,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 653800000,
        "text_offset": 912,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 915,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661600000,
        "text_offset": 926,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 666000000,
        "text_offset": 929,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674000000,
        "text_offset": 943,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 676800000,
        "text_offset": 948,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681400000,
        "text_offset": 957,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 693400000,
        "text_offset": 964,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698200000,
        "text_offset": 967,
        "word_length": 7,
        "text": " change",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701400000,
        "text_offset": 974,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 703600000,
        "text_offset": 978,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 706200000,
        "text_offset": 983,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708800000,
        "text_offset": 986,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 710800000,
        "text_offset": 993,
        "word_length": 8,
        "text": " layers,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 723199999,
        "text_offset": 1001,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724400000,
        "text_offset": 1004,
        "word_length": 7,
        "text": " can...",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges are compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-QBIT Unitary Gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates. To change the size of hidden layers, we can...",
    "final_audio": "in-quantum-computing-two-major-challenges-are-74b35cce.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. <bookmark mark='E'/> We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='F'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates. <bookmark mark='G'/> To decrease the size of our latent space, we can shop off qbits.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer.  We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.  To decrease the size of our latent space, we can shop off qbits.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-7d6a941e.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43200000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63400000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 104,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90000000,
        "text_offset": 111,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 115,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93600000,
        "text_offset": 121,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 133,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 146,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 150,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 156,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123200000,
        "text_offset": 161,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125200000,
        "text_offset": 164,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 170,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137600000,
        "text_offset": 174,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141600000,
        "text_offset": 184,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144200000,
        "text_offset": 188,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145400000,
        "text_offset": 190,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 195,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152800000,
        "text_offset": 203,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158800000,
        "text_offset": 216,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 219,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 226,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 228,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 233,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 236,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 242,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182800000,
        "text_offset": 247,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186200000,
        "text_offset": 252,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 265,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197399999,
        "text_offset": 268,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198800000,
        "text_offset": 272,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 283,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 286,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 296,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217600000,
        "text_offset": 299,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220400000,
        "text_offset": 307,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 320,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240000000,
        "text_offset": 323,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241600000,
        "text_offset": 325,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 330,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246000000,
        "text_offset": 334,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247600000,
        "text_offset": 337,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 343,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 354,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 359,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261800000,
        "text_offset": 362,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263200000,
        "text_offset": 366,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 373,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269400000,
        "text_offset": 379,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272000000,
        "text_offset": 383,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276900000,
        "text_offset": 391,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 404,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296400000,
        "text_offset": 414,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 420,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 424,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307600000,
        "text_offset": 430,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308800000,
        "text_offset": 434,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 443,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 445,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318600000,
        "text_offset": 452,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333200000,
        "text_offset": 465,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334600000,
        "text_offset": 469,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 339000000,
        "text_offset": 477,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349600000,
        "text_offset": 483,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350800000,
        "text_offset": 487,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354400000,
        "text_offset": 492,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 505,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367800000,
        "text_offset": 509,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369600000,
        "text_offset": 513,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382000000,
        "text_offset": 524,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383200000,
        "text_offset": 527,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 535,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390000000,
        "text_offset": 539,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393000000,
        "text_offset": 544,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 547,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 553,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402200000,
        "text_offset": 560,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404000000,
        "text_offset": 563,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 568,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 570,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410400000,
        "text_offset": 578,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415000000,
        "text_offset": 586,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 592,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 599,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 608,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 613,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445800000,
        "text_offset": 616,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448200000,
        "text_offset": 621,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 629,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 633,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457800000,
        "text_offset": 637,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 645,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 650,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 653,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466200000,
        "text_offset": 657,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 665,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 671,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 674,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 679,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 691,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 695,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 701,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 704,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 711,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 726,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 731,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 739,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 743,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 750,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 759,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 765,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 769,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 772,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556800000,
        "text_offset": 781,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 787,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563200000,
        "text_offset": 789,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571200000,
        "text_offset": 803,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 805,
        "word_length": 6,
        "text": "-cubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 577800000,
        "text_offset": 811,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 819,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592000000,
        "text_offset": 825,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593600000,
        "text_offset": 828,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595400000,
        "text_offset": 833,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606200000,
        "text_offset": 842,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607600000,
        "text_offset": 845,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609000000,
        "text_offset": 850,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613000000,
        "text_offset": 856,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 615800000,
        "text_offset": 859,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 617800000,
        "text_offset": 863,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 625600000,
        "text_offset": 877,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 639800000,
        "text_offset": 884,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641000000,
        "text_offset": 887,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642600000,
        "text_offset": 890,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644200000,
        "text_offset": 894,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 647600000,
        "text_offset": 901,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651000000,
        "text_offset": 905,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 653800000,
        "text_offset": 912,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 656600000,
        "text_offset": 915,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661600000,
        "text_offset": 926,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 666000000,
        "text_offset": 929,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674000000,
        "text_offset": 943,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 676600000,
        "text_offset": 948,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681600000,
        "text_offset": 957,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 693800000,
        "text_offset": 964,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698000000,
        "text_offset": 967,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701800000,
        "text_offset": 976,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705000000,
        "text_offset": 980,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708000000,
        "text_offset": 985,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 710400000,
        "text_offset": 988,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 711600000,
        "text_offset": 992,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 714800000,
        "text_offset": 999,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726400000,
        "text_offset": 1006,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 728600000,
        "text_offset": 1009,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 730600000,
        "text_offset": 1013,
        "word_length": 5,
        "text": " shop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 733199999,
        "text_offset": 1018,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 742600000,
        "text_offset": 1022,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubit unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates. To decrease the size of our latent space, we can shop off QBITs.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-7d6a941e.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can shop off qbits.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qbits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by paramtrising with rotation gates.  To decrease the size of our latent space, we can shop off qbits.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-8f774e34.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 47,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 59,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "text_offset": 62,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 67,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 71,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 83,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 91,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61400000,
        "text_offset": 96,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "text_offset": 99,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 105,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89600000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93400000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115399999,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124800000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137200000,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148200000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158600000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172200000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179800000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183000000,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203000000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209600000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 239800000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242600000,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247399999,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249400000,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 261600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 273000000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276700000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 296200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298600000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306000000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308400000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318200000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 333000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 351000000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 353000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366400000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 369200000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386599999,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 389799999,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 392800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394799999,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 406800000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414799999,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 429799999,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 455800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462200000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463200000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 464799999,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485400000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489000000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490600000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494799999,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 503400000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506000000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514000000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519799999,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522400000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 525200000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529400000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547000000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549400000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551000000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 555000000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 559600000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 562500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572800000,
        "text_offset": 806,
        "word_length": 6,
        "text": "-cubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578200000,
        "text_offset": 812,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583200000,
        "text_offset": 820,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592400000,
        "text_offset": 826,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593800000,
        "text_offset": 829,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 595600000,
        "text_offset": 834,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606200000,
        "text_offset": 843,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 607800000,
        "text_offset": 846,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609400000,
        "text_offset": 851,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 613200000,
        "text_offset": 857,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 616000000,
        "text_offset": 860,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618000000,
        "text_offset": 864,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 625800000,
        "text_offset": 878,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640399999,
        "text_offset": 885,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641400000,
        "text_offset": 888,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 643000000,
        "text_offset": 891,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644800000,
        "text_offset": 895,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648199999,
        "text_offset": 902,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 651600000,
        "text_offset": 906,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654400000,
        "text_offset": 913,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657200000,
        "text_offset": 916,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 662000000,
        "text_offset": 927,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665900000,
        "text_offset": 930,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 944,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677200000,
        "text_offset": 949,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681600000,
        "text_offset": 958,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692600000,
        "text_offset": 965,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698400000,
        "text_offset": 968,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 702200000,
        "text_offset": 977,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705600000,
        "text_offset": 981,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708400000,
        "text_offset": 986,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 711000000,
        "text_offset": 989,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 712000000,
        "text_offset": 993,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 715400000,
        "text_offset": 1000,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 728000000,
        "text_offset": 1007,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 729400000,
        "text_offset": 1010,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 731400000,
        "text_offset": 1014,
        "word_length": 5,
        "text": " shop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 733800000,
        "text_offset": 1019,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 742900000,
        "text_offset": 1023,
        "word_length": 7,
        "text": " QBITs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges are compression of data are efficiently storing data in fewer QBITs. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubit unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parametrizing with rotation gates. To decrease the size of our latent space, we can shop off QBITs.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-8f774e34.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). ",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-6d7c1ad3.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45800000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59000000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134400000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141200000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153200000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478400000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483600000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494400000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515000000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522000000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539600000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551400000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552400000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 570400000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576000000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599000000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611300000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618800000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 630600000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635600000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637200000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640600000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646800000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 659900000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667400000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670200000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674599999,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 689400000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691600000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695400000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698600000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701600000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704000000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705200000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708400000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721000000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722400000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724200000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737500000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750000000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 751800000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 753600000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755400000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756600000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760000000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765000000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 777000000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778199999,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780600000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 782800000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787400000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 800800000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803600000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806200000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811000000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814000000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815600000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818000000,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821000000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825200000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828400000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830200000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832400000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-6d7c1ad3.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-97168111.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45800000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59000000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141200000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153400000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170000000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172800000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176200000,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230799999,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232600000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234200000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235400000,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238400000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240200000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242200000,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248200000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252200000,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254400000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255799999,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258600000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262000000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264600000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268600000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289000000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291600000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294200000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298800000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301200000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304800000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307000000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311000000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 325800000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327200000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331599999,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342200000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343800000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360400000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362000000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374600000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375800000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379400000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382600000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385600000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387600000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390800000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394600000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396599999,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 399600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403000000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422600000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426000000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433200000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435400000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438200000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440800000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446000000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448600000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450400000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 452600000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 455800000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457400000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458800000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462400000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478000000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479400000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481599999,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483200000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487400000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490000000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494000000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496000000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498600000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506599999,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515000000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 517800000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522000000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539600000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542000000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543600000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547600000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556100000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563600000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565400000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 570400000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 575800000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 584600000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586200000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588000000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 598600000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600200000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 601600000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 605600000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608400000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609900000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618000000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632600000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 633800000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635200000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637000000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640200000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 643800000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646600000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654400000,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 659900000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667400000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670200000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674200000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 689200000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691400000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695400000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698600000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701400000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704000000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705000000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708400000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 720800000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722000000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724000000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737500000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 749400000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 751400000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 753400000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755000000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756400000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 759599999,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 764599999,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778000000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780200000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 782400000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787000000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 800800000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803400000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 805800000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 810800000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814000000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815200000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 817800000,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821400000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825000000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828199999,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 829800000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832000000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 847200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 848400000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 853400000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857200000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859400000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 860800000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 862600000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 866800000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 871400000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877400000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880000000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883400000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886000000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 889800000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894000000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 896600000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 899800000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. Our cost function will be the average fidelity between the input and output across the training data.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-97168111.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-97168111.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45800000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59000000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141200000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153400000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170000000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172800000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176200000,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230799999,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232600000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234200000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235400000,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238400000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240200000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242200000,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248200000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252200000,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254400000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255799999,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258600000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262000000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264600000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268600000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289000000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291600000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294200000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298800000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301200000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304800000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307000000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311000000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 325800000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327200000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331599999,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342200000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343800000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360400000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362000000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374600000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375800000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379400000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382600000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385600000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387600000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390800000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394600000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396599999,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 399600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403000000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422600000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426000000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433200000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435400000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438200000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440800000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446000000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448600000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450400000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 452600000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 455800000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457400000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458800000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462400000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478000000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479400000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481599999,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483200000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487400000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490000000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494000000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496000000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498600000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506599999,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515000000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 517800000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522000000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539600000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542000000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543600000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547600000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556100000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563600000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565400000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 570400000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 575800000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 584600000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586200000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588000000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 598600000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600200000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 601600000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 605600000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608400000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609900000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618000000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632600000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 633800000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635200000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637000000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640200000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 643800000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646600000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654400000,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 659900000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667400000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670200000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674200000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 689200000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691400000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695400000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698600000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701400000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704000000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705000000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708400000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 720800000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722000000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724000000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737500000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 749400000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 751400000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 753400000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755000000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756400000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 759599999,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 764599999,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778000000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780200000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 782400000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787000000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 800800000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803400000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 805800000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 810800000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814000000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815200000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 817800000,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821400000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825000000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828199999,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 829800000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832000000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 847200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 848400000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 853400000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857200000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859400000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 860800000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 862600000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 866800000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 871400000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877400000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880000000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883400000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886000000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 889800000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894000000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 896600000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 899800000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. Our cost function will be the average fidelity between the input and output across the training data.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-97168111.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-97168111.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45800000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59000000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84000000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141200000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153400000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170000000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172800000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176200000,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230799999,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232600000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234200000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235400000,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238400000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240200000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242200000,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248200000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252200000,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254400000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255799999,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258600000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262000000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264600000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268600000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289000000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291600000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294200000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298800000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301200000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304800000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307000000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311000000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 325800000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327200000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331599999,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342200000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343800000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360400000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362000000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374600000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375800000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379400000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382600000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385600000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387600000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390800000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394600000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396599999,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398200000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 399600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403000000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422600000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426000000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433200000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435400000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438200000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440800000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446000000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448600000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450400000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 452600000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 455800000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457400000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458800000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462400000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478000000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479400000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481599999,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483200000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487400000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490000000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494000000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496000000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498600000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506599999,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515000000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 517800000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522000000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539600000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542000000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543600000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547600000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556100000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563600000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565400000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 570400000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 575800000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 584600000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586200000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588000000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 598600000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600200000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 601600000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 605600000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608400000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609900000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618000000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632600000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 633800000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635200000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637000000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640200000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 643800000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646600000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654400000,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 659900000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667400000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670200000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674200000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 689200000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691400000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695400000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698600000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701400000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704000000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705000000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708400000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 720800000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722000000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724000000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737500000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 749400000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 751400000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 753400000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755000000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756400000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 759599999,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 764599999,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778000000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780200000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 782400000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787000000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 800800000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803400000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 805800000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 810800000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814000000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815200000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 817800000,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821400000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825000000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828199999,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 829800000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832000000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 847200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 848400000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 853400000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857200000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859400000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 860800000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 862600000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 866800000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 871400000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877400000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880000000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883400000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886000000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 889800000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894000000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 896600000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 899800000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. Our cost function will be the average fidelity between the input and output across the training data.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-97168111.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-66addc69.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45800000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59000000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258600000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269300000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552400000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556300000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563800000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586600000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599000000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602200000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606200000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609000000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 633000000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634200000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 636200000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637600000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640800000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644200000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 647200000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 650200000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 655000000,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660300000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667800000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670800000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674599999,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691000000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692000000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695800000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 699000000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 702000000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704400000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705600000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708800000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721200000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722600000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724599999,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 727000000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752200000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754200000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755800000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 757000000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760400000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765400000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 777200000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778600000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 781000000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783199999,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787800000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801400000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 804000000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806600000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811600000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814599999,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 816000000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818600000,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 822400000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825600000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 829000000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832800000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850200000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 852600000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 858000000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 860000000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861600000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863600000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 868800000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872200000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 878000000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880800000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 884000000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886400000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890600000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894400000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897400000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900400000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913600000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923200000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924800000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926600000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 930200000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933400000,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 936000000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938800000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 942000000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948400000,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951400000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956800000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 960200000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962400000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964599999,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967400000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969800000,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975600000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 994200000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995600000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997600000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002800000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1006000000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008600000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010400000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1018000000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1021000000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027200000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1040200000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041600000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043400000,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054200000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057400000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058600000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063600000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1067000000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1070200000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072800000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075400000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1083600000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094200000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096600000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097800000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101800000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106200000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121600000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123600000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128400000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1132000000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134400000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138800000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140600000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146200000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1602,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1608,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1611,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1615,
        "word_length": 6,
        "text": " unit.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149200000,
        "text_offset": 1621,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150200000,
        "text_offset": 1624,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150200000,
        "text_offset": 1628,
        "word_length": 10,
        "text": " construct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1153200000,
        "text_offset": 1638,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1156400000,
        "text_offset": 1642,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1159800000,
        "text_offset": 1650,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1173000000,
        "text_offset": 1657,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1668,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184400000,
        "text_offset": 1671,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186400000,
        "text_offset": 1675,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190500000,
        "text_offset": 1683,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1197000000,
        "text_offset": 1692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1199800000,
        "text_offset": 1696,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1701,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207800000,
        "text_offset": 1710,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210400000,
        "text_offset": 1713,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1213000000,
        "text_offset": 1719,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216600000,
        "text_offset": 1723,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218400000,
        "text_offset": 1728,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232400000,
        "text_offset": 1734,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234600000,
        "text_offset": 1740,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236400000,
        "text_offset": 1745,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1240000000,
        "text_offset": 1753,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1242000000,
        "text_offset": 1755,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244400000,
        "text_offset": 1761,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1250000000,
        "text_offset": 1767,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252800000,
        "text_offset": 1770,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1254200000,
        "text_offset": 1774,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1262900000,
        "text_offset": 1781,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270000000,
        "text_offset": 1787,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1271000000,
        "text_offset": 1791,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1273000000,
        "text_offset": 1796,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1288000000,
        "text_offset": 1805,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289199999,
        "text_offset": 1808,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290800000,
        "text_offset": 1812,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294199999,
        "text_offset": 1817,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296600000,
        "text_offset": 1820,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1299199999,
        "text_offset": 1824,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1301200000,
        "text_offset": 1827,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1837,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315600000,
        "text_offset": 1844,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1849,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331399999,
        "text_offset": 1861,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1333000000,
        "text_offset": 1867,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334800000,
        "text_offset": 1870,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1338400000,
        "text_offset": 1876,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340200000,
        "text_offset": 1879,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345400000,
        "text_offset": 1891,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349600000,
        "text_offset": 1898,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352200000,
        "text_offset": 1903,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354800000,
        "text_offset": 1911,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1357000000,
        "text_offset": 1915,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1364400000,
        "text_offset": 1922,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367800000,
        "text_offset": 1925,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369400000,
        "text_offset": 1929,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1372600000,
        "text_offset": 1934,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1378000000,
        "text_offset": 1943,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1380800000,
        "text_offset": 1946,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1382200000,
        "text_offset": 1951,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385600000,
        "text_offset": 1959,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387600000,
        "text_offset": 1963,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391800000,
        "text_offset": 1975,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395800000,
        "text_offset": 1981,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398400000,
        "text_offset": 1984,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401399999,
        "text_offset": 1992,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405600000,
        "text_offset": 1994,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1408000000,
        "text_offset": 1997,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409400000,
        "text_offset": 2001,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412600000,
        "text_offset": 2010,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1416000000,
        "text_offset": 2015,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1430000000,
        "text_offset": 2019,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1433000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436800000,
        "text_offset": 2028,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2038,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455600000,
        "text_offset": 2047,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1459199999,
        "text_offset": 2053,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1462200000,
        "text_offset": 2061,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467600000,
        "text_offset": 2066,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471600000,
        "text_offset": 2076,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474400000,
        "text_offset": 2079,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1476399999,
        "text_offset": 2083,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479800000,
        "text_offset": 2091,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1482200000,
        "text_offset": 2093,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1484000000,
        "text_offset": 2097,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1486200000,
        "text_offset": 2101,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1488400000,
        "text_offset": 2106,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1503599999,
        "text_offset": 2119,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504800000,
        "text_offset": 2122,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1506399999,
        "text_offset": 2125,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1509400000,
        "text_offset": 2131,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510800000,
        "text_offset": 2136,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512800000,
        "text_offset": 2140,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1517200000,
        "text_offset": 2151,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1520200000,
        "text_offset": 2154,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521800000,
        "text_offset": 2158,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526800000,
        "text_offset": 2169,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1530600000,
        "text_offset": 2174,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1535000000,
        "text_offset": 2182,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537800000,
        "text_offset": 2185,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1539199999,
        "text_offset": 2189,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1543599999,
        "text_offset": 2194,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556799999,
        "text_offset": 2204,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1562000000,
        "text_offset": 2213,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1568000000,
        "text_offset": 2216,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1570200000,
        "text_offset": 2220,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1572200000,
        "text_offset": 2224,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1574199999,
        "text_offset": 2226,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1579199999,
        "text_offset": 2237,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1584300000,
        "text_offset": 2242,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1598200000,
        "text_offset": 2253,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1607100000,
        "text_offset": 2258,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. Our cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the value of the unit. We can construct the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-66addc69.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-66addc69.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45800000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59000000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258600000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269300000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552400000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556300000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563800000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586600000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599000000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602200000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606200000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609000000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 633000000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634200000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 636200000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637600000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640800000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644200000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 647200000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 650200000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 655000000,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660300000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667800000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670800000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674599999,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691000000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692000000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695800000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 699000000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 702000000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704400000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705600000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708800000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721200000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722600000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724599999,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 727000000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752200000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754200000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755800000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 757000000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760400000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765400000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 777200000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778600000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 781000000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783199999,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787800000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801400000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 804000000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806600000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811600000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814599999,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 816000000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818600000,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 822400000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825600000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 829000000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832800000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850200000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 852600000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 858000000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 860000000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861600000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863600000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 868800000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872200000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 878000000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880800000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 884000000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886400000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890600000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894400000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897400000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900400000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913600000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923200000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924800000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926600000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 930200000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933400000,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 936000000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938800000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 942000000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948400000,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951400000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956800000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 960200000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962400000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964599999,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967400000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969800000,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975600000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 994200000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995600000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997600000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002800000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1006000000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008600000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010400000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1018000000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1021000000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027200000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1040200000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041600000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043400000,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054200000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057400000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058600000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063600000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1067000000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1070200000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072800000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075400000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1083600000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094200000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096600000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097800000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101800000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106200000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121600000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123600000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128400000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1132000000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134400000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138800000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140600000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146200000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1602,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1608,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1611,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1615,
        "word_length": 6,
        "text": " unit.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149200000,
        "text_offset": 1621,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150200000,
        "text_offset": 1624,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150200000,
        "text_offset": 1628,
        "word_length": 10,
        "text": " construct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1153200000,
        "text_offset": 1638,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1156400000,
        "text_offset": 1642,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1159800000,
        "text_offset": 1650,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1173000000,
        "text_offset": 1657,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1668,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184400000,
        "text_offset": 1671,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186400000,
        "text_offset": 1675,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190500000,
        "text_offset": 1683,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1197000000,
        "text_offset": 1692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1199800000,
        "text_offset": 1696,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1701,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207800000,
        "text_offset": 1710,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210400000,
        "text_offset": 1713,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1213000000,
        "text_offset": 1719,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216600000,
        "text_offset": 1723,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218400000,
        "text_offset": 1728,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232400000,
        "text_offset": 1734,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234600000,
        "text_offset": 1740,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236400000,
        "text_offset": 1745,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1240000000,
        "text_offset": 1753,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1242000000,
        "text_offset": 1755,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244400000,
        "text_offset": 1761,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1250000000,
        "text_offset": 1767,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252800000,
        "text_offset": 1770,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1254200000,
        "text_offset": 1774,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1262900000,
        "text_offset": 1781,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270000000,
        "text_offset": 1787,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1271000000,
        "text_offset": 1791,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1273000000,
        "text_offset": 1796,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1288000000,
        "text_offset": 1805,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289199999,
        "text_offset": 1808,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290800000,
        "text_offset": 1812,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294199999,
        "text_offset": 1817,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296600000,
        "text_offset": 1820,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1299199999,
        "text_offset": 1824,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1301200000,
        "text_offset": 1827,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1837,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315600000,
        "text_offset": 1844,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1849,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331399999,
        "text_offset": 1861,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1333000000,
        "text_offset": 1867,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334800000,
        "text_offset": 1870,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1338400000,
        "text_offset": 1876,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340200000,
        "text_offset": 1879,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345400000,
        "text_offset": 1891,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349600000,
        "text_offset": 1898,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352200000,
        "text_offset": 1903,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354800000,
        "text_offset": 1911,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1357000000,
        "text_offset": 1915,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1364400000,
        "text_offset": 1922,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367800000,
        "text_offset": 1925,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369400000,
        "text_offset": 1929,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1372600000,
        "text_offset": 1934,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1378000000,
        "text_offset": 1943,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1380800000,
        "text_offset": 1946,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1382200000,
        "text_offset": 1951,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385600000,
        "text_offset": 1959,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387600000,
        "text_offset": 1963,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391800000,
        "text_offset": 1975,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395800000,
        "text_offset": 1981,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398400000,
        "text_offset": 1984,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401399999,
        "text_offset": 1992,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405600000,
        "text_offset": 1994,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1408000000,
        "text_offset": 1997,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409400000,
        "text_offset": 2001,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412600000,
        "text_offset": 2010,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1416000000,
        "text_offset": 2015,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1430000000,
        "text_offset": 2019,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1433000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436800000,
        "text_offset": 2028,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2038,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455600000,
        "text_offset": 2047,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1459199999,
        "text_offset": 2053,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1462200000,
        "text_offset": 2061,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467600000,
        "text_offset": 2066,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471600000,
        "text_offset": 2076,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474400000,
        "text_offset": 2079,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1476399999,
        "text_offset": 2083,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479800000,
        "text_offset": 2091,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1482200000,
        "text_offset": 2093,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1484000000,
        "text_offset": 2097,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1486200000,
        "text_offset": 2101,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1488400000,
        "text_offset": 2106,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1503599999,
        "text_offset": 2119,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504800000,
        "text_offset": 2122,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1506399999,
        "text_offset": 2125,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1509400000,
        "text_offset": 2131,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510800000,
        "text_offset": 2136,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512800000,
        "text_offset": 2140,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1517200000,
        "text_offset": 2151,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1520200000,
        "text_offset": 2154,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521800000,
        "text_offset": 2158,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526800000,
        "text_offset": 2169,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1530600000,
        "text_offset": 2174,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1535000000,
        "text_offset": 2182,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537800000,
        "text_offset": 2185,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1539199999,
        "text_offset": 2189,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1543599999,
        "text_offset": 2194,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556799999,
        "text_offset": 2204,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1562000000,
        "text_offset": 2213,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1568000000,
        "text_offset": 2216,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1570200000,
        "text_offset": 2220,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1572200000,
        "text_offset": 2224,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1574199999,
        "text_offset": 2226,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1579199999,
        "text_offset": 2237,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1584300000,
        "text_offset": 2242,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1598200000,
        "text_offset": 2253,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1607100000,
        "text_offset": 2258,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. Our cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the value of the unit. We can construct the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-66addc69.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-66addc69.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45800000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59000000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258600000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269300000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552400000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556300000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563800000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586600000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599000000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602200000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606200000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609000000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 633000000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634200000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 636200000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637600000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640800000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644200000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 647200000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 650200000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 655000000,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660300000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667800000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670800000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674599999,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691000000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692000000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695800000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 699000000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 702000000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704400000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705600000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708800000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721200000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722600000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724599999,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 727000000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752200000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754200000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755800000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 757000000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760400000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765400000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 777200000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778600000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 781000000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783199999,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787800000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801400000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 804000000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806600000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811600000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814599999,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 816000000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818600000,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 822400000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825600000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 829000000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832800000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850200000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 852600000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 858000000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 860000000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861600000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863600000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 868800000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872200000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 878000000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880800000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 884000000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886400000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890600000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894400000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897400000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900400000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913600000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923200000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924800000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926600000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 930200000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933400000,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 936000000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938800000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 942000000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948400000,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951400000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956800000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 960200000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962400000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964599999,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967400000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969800000,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975600000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 994200000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995600000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997600000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002800000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1006000000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008600000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010400000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1018000000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1021000000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027200000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1040200000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041600000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043400000,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054200000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057400000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058600000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063600000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1067000000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1070200000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072800000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075400000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1083600000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094200000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096600000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097800000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101800000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106200000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121600000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123600000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128400000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1132000000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134400000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138800000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140600000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146200000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1602,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1608,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1611,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1615,
        "word_length": 6,
        "text": " unit.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149200000,
        "text_offset": 1621,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150200000,
        "text_offset": 1624,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150200000,
        "text_offset": 1628,
        "word_length": 10,
        "text": " construct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1153200000,
        "text_offset": 1638,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1156400000,
        "text_offset": 1642,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1159800000,
        "text_offset": 1650,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1173000000,
        "text_offset": 1657,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1668,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184400000,
        "text_offset": 1671,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186400000,
        "text_offset": 1675,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190500000,
        "text_offset": 1683,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1197000000,
        "text_offset": 1692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1199800000,
        "text_offset": 1696,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1701,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207800000,
        "text_offset": 1710,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210400000,
        "text_offset": 1713,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1213000000,
        "text_offset": 1719,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216600000,
        "text_offset": 1723,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218400000,
        "text_offset": 1728,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232400000,
        "text_offset": 1734,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234600000,
        "text_offset": 1740,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236400000,
        "text_offset": 1745,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1240000000,
        "text_offset": 1753,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1242000000,
        "text_offset": 1755,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244400000,
        "text_offset": 1761,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1250000000,
        "text_offset": 1767,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252800000,
        "text_offset": 1770,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1254200000,
        "text_offset": 1774,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1262900000,
        "text_offset": 1781,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270000000,
        "text_offset": 1787,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1271000000,
        "text_offset": 1791,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1273000000,
        "text_offset": 1796,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1288000000,
        "text_offset": 1805,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289199999,
        "text_offset": 1808,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290800000,
        "text_offset": 1812,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294199999,
        "text_offset": 1817,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296600000,
        "text_offset": 1820,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1299199999,
        "text_offset": 1824,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1301200000,
        "text_offset": 1827,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1837,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315600000,
        "text_offset": 1844,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1849,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331399999,
        "text_offset": 1861,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1333000000,
        "text_offset": 1867,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334800000,
        "text_offset": 1870,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1338400000,
        "text_offset": 1876,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340200000,
        "text_offset": 1879,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345400000,
        "text_offset": 1891,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349600000,
        "text_offset": 1898,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352200000,
        "text_offset": 1903,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354800000,
        "text_offset": 1911,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1357000000,
        "text_offset": 1915,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1364400000,
        "text_offset": 1922,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367800000,
        "text_offset": 1925,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369400000,
        "text_offset": 1929,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1372600000,
        "text_offset": 1934,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1378000000,
        "text_offset": 1943,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1380800000,
        "text_offset": 1946,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1382200000,
        "text_offset": 1951,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385600000,
        "text_offset": 1959,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387600000,
        "text_offset": 1963,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391800000,
        "text_offset": 1975,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395800000,
        "text_offset": 1981,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398400000,
        "text_offset": 1984,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401399999,
        "text_offset": 1992,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405600000,
        "text_offset": 1994,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1408000000,
        "text_offset": 1997,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409400000,
        "text_offset": 2001,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412600000,
        "text_offset": 2010,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1416000000,
        "text_offset": 2015,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1430000000,
        "text_offset": 2019,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1433000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436800000,
        "text_offset": 2028,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2038,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455600000,
        "text_offset": 2047,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1459199999,
        "text_offset": 2053,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1462200000,
        "text_offset": 2061,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467600000,
        "text_offset": 2066,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471600000,
        "text_offset": 2076,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474400000,
        "text_offset": 2079,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1476399999,
        "text_offset": 2083,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479800000,
        "text_offset": 2091,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1482200000,
        "text_offset": 2093,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1484000000,
        "text_offset": 2097,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1486200000,
        "text_offset": 2101,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1488400000,
        "text_offset": 2106,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1503599999,
        "text_offset": 2119,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504800000,
        "text_offset": 2122,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1506399999,
        "text_offset": 2125,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1509400000,
        "text_offset": 2131,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510800000,
        "text_offset": 2136,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512800000,
        "text_offset": 2140,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1517200000,
        "text_offset": 2151,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1520200000,
        "text_offset": 2154,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521800000,
        "text_offset": 2158,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526800000,
        "text_offset": 2169,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1530600000,
        "text_offset": 2174,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1535000000,
        "text_offset": 2182,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537800000,
        "text_offset": 2185,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1539199999,
        "text_offset": 2189,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1543599999,
        "text_offset": 2194,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556799999,
        "text_offset": 2204,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1562000000,
        "text_offset": 2213,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1568000000,
        "text_offset": 2216,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1570200000,
        "text_offset": 2220,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1572200000,
        "text_offset": 2224,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1574199999,
        "text_offset": 2226,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1579199999,
        "text_offset": 2237,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1584300000,
        "text_offset": 2242,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1598200000,
        "text_offset": 2253,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1607100000,
        "text_offset": 2258,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. Our cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the value of the unit. We can construct the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-66addc69.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-66addc69.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45800000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59000000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258600000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269300000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552400000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556300000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563800000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586600000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599000000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602200000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606200000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609000000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 633000000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634200000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 636200000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637600000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640800000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644200000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 647200000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 650200000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 655000000,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660300000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667800000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670800000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674599999,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691000000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692000000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695800000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 699000000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 702000000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704400000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705600000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708800000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721200000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722600000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724599999,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 727000000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752200000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754200000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755800000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 757000000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760400000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765400000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 777200000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778600000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 781000000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783199999,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787800000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801400000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 804000000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806600000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811600000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814599999,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 816000000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818600000,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 822400000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825600000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 829000000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832800000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850200000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 852600000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 858000000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 860000000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861600000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863600000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 868800000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872200000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 878000000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880800000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 884000000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886400000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890600000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894400000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897400000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900400000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913600000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923200000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924800000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926600000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 930200000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933400000,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 936000000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938800000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 942000000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948400000,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951400000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956800000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 960200000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962400000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964599999,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967400000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969800000,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975600000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 994200000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995600000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997600000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002800000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1006000000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008600000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010400000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1018000000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1021000000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027200000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1040200000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041600000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043400000,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054200000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057400000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058600000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063600000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1067000000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1070200000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072800000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075400000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1083600000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094200000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096600000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097800000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101800000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106200000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121600000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123600000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128400000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1132000000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134400000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138800000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140600000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146200000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1602,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1608,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1611,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1615,
        "word_length": 6,
        "text": " unit.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149200000,
        "text_offset": 1621,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150200000,
        "text_offset": 1624,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150200000,
        "text_offset": 1628,
        "word_length": 10,
        "text": " construct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1153200000,
        "text_offset": 1638,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1156400000,
        "text_offset": 1642,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1159800000,
        "text_offset": 1650,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1173000000,
        "text_offset": 1657,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1668,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184400000,
        "text_offset": 1671,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186400000,
        "text_offset": 1675,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190500000,
        "text_offset": 1683,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1197000000,
        "text_offset": 1692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1199800000,
        "text_offset": 1696,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1701,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207800000,
        "text_offset": 1710,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210400000,
        "text_offset": 1713,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1213000000,
        "text_offset": 1719,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216600000,
        "text_offset": 1723,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218400000,
        "text_offset": 1728,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232400000,
        "text_offset": 1734,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234600000,
        "text_offset": 1740,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236400000,
        "text_offset": 1745,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1240000000,
        "text_offset": 1753,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1242000000,
        "text_offset": 1755,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244400000,
        "text_offset": 1761,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1250000000,
        "text_offset": 1767,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252800000,
        "text_offset": 1770,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1254200000,
        "text_offset": 1774,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1262900000,
        "text_offset": 1781,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270000000,
        "text_offset": 1787,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1271000000,
        "text_offset": 1791,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1273000000,
        "text_offset": 1796,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1288000000,
        "text_offset": 1805,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289199999,
        "text_offset": 1808,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290800000,
        "text_offset": 1812,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294199999,
        "text_offset": 1817,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296600000,
        "text_offset": 1820,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1299199999,
        "text_offset": 1824,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1301200000,
        "text_offset": 1827,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1837,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315600000,
        "text_offset": 1844,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1849,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331399999,
        "text_offset": 1861,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1333000000,
        "text_offset": 1867,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334800000,
        "text_offset": 1870,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1338400000,
        "text_offset": 1876,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340200000,
        "text_offset": 1879,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345400000,
        "text_offset": 1891,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349600000,
        "text_offset": 1898,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352200000,
        "text_offset": 1903,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354800000,
        "text_offset": 1911,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1357000000,
        "text_offset": 1915,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1364400000,
        "text_offset": 1922,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367800000,
        "text_offset": 1925,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369400000,
        "text_offset": 1929,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1372600000,
        "text_offset": 1934,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1378000000,
        "text_offset": 1943,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1380800000,
        "text_offset": 1946,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1382200000,
        "text_offset": 1951,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385600000,
        "text_offset": 1959,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387600000,
        "text_offset": 1963,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391800000,
        "text_offset": 1975,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395800000,
        "text_offset": 1981,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398400000,
        "text_offset": 1984,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401399999,
        "text_offset": 1992,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405600000,
        "text_offset": 1994,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1408000000,
        "text_offset": 1997,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409400000,
        "text_offset": 2001,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412600000,
        "text_offset": 2010,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1416000000,
        "text_offset": 2015,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1430000000,
        "text_offset": 2019,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1433000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436800000,
        "text_offset": 2028,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2038,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455600000,
        "text_offset": 2047,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1459199999,
        "text_offset": 2053,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1462200000,
        "text_offset": 2061,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467600000,
        "text_offset": 2066,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471600000,
        "text_offset": 2076,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474400000,
        "text_offset": 2079,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1476399999,
        "text_offset": 2083,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479800000,
        "text_offset": 2091,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1482200000,
        "text_offset": 2093,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1484000000,
        "text_offset": 2097,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1486200000,
        "text_offset": 2101,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1488400000,
        "text_offset": 2106,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1503599999,
        "text_offset": 2119,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504800000,
        "text_offset": 2122,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1506399999,
        "text_offset": 2125,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1509400000,
        "text_offset": 2131,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510800000,
        "text_offset": 2136,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512800000,
        "text_offset": 2140,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1517200000,
        "text_offset": 2151,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1520200000,
        "text_offset": 2154,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521800000,
        "text_offset": 2158,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526800000,
        "text_offset": 2169,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1530600000,
        "text_offset": 2174,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1535000000,
        "text_offset": 2182,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537800000,
        "text_offset": 2185,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1539199999,
        "text_offset": 2189,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1543599999,
        "text_offset": 2194,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556799999,
        "text_offset": 2204,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1562000000,
        "text_offset": 2213,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1568000000,
        "text_offset": 2216,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1570200000,
        "text_offset": 2220,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1572200000,
        "text_offset": 2224,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1574199999,
        "text_offset": 2226,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1579199999,
        "text_offset": 2237,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1584300000,
        "text_offset": 2242,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1598200000,
        "text_offset": 2253,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1607100000,
        "text_offset": 2258,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. Our cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the value of the unit. We can construct the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-66addc69.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA.",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA.",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-66addc69.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33200000,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45800000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59000000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258600000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269300000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552400000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556300000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563800000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586600000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599000000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602200000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606200000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609000000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 633000000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634200000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 636200000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637600000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640800000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644200000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 647200000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 650200000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 655000000,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660300000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667800000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670800000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674599999,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691000000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692000000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695800000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 699000000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 702000000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704400000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705600000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708800000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721200000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722600000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724599999,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 727000000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752200000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754200000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755800000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 757000000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760400000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765400000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 777200000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778600000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 781000000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783199999,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787800000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801400000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 804000000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806600000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811600000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814599999,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 816000000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818600000,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 822400000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825600000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 829000000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832800000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850200000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 852600000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 858000000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 860000000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861600000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863600000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 868800000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872200000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 878000000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880800000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 884000000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886400000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890600000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894400000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897400000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900400000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913600000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923200000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924800000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926600000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 930200000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933400000,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 936000000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938800000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 942000000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948400000,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951400000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956800000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 960200000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962400000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964599999,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967400000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969800000,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975600000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 994200000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995600000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997600000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002800000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1006000000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008600000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010400000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1018000000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1021000000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027200000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1040200000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041600000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043400000,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054200000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057400000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058600000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063600000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1067000000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1070200000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072800000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075400000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1083600000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094200000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096600000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097800000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101800000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106200000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121600000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123600000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128400000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1132000000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134400000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138800000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140600000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146200000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1602,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1608,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1611,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1615,
        "word_length": 6,
        "text": " unit.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149200000,
        "text_offset": 1621,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150200000,
        "text_offset": 1624,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150200000,
        "text_offset": 1628,
        "word_length": 10,
        "text": " construct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1153200000,
        "text_offset": 1638,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1156400000,
        "text_offset": 1642,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1159800000,
        "text_offset": 1650,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1173000000,
        "text_offset": 1657,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1668,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184400000,
        "text_offset": 1671,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186400000,
        "text_offset": 1675,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190500000,
        "text_offset": 1683,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1197000000,
        "text_offset": 1692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1199800000,
        "text_offset": 1696,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1701,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207800000,
        "text_offset": 1710,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210400000,
        "text_offset": 1713,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1213000000,
        "text_offset": 1719,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216600000,
        "text_offset": 1723,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218400000,
        "text_offset": 1728,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232400000,
        "text_offset": 1734,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234600000,
        "text_offset": 1740,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236400000,
        "text_offset": 1745,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1240000000,
        "text_offset": 1753,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1242000000,
        "text_offset": 1755,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244400000,
        "text_offset": 1761,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1250000000,
        "text_offset": 1767,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252800000,
        "text_offset": 1770,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1254200000,
        "text_offset": 1774,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1262900000,
        "text_offset": 1781,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270000000,
        "text_offset": 1787,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1271000000,
        "text_offset": 1791,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1273000000,
        "text_offset": 1796,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1288000000,
        "text_offset": 1805,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289199999,
        "text_offset": 1808,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290800000,
        "text_offset": 1812,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294199999,
        "text_offset": 1817,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296600000,
        "text_offset": 1820,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1299199999,
        "text_offset": 1824,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1301200000,
        "text_offset": 1827,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1837,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315600000,
        "text_offset": 1844,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1849,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331399999,
        "text_offset": 1861,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1333000000,
        "text_offset": 1867,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334800000,
        "text_offset": 1870,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1338400000,
        "text_offset": 1876,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340200000,
        "text_offset": 1879,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345400000,
        "text_offset": 1891,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349600000,
        "text_offset": 1898,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352200000,
        "text_offset": 1903,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354800000,
        "text_offset": 1911,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1357000000,
        "text_offset": 1915,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1364400000,
        "text_offset": 1922,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367800000,
        "text_offset": 1925,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369400000,
        "text_offset": 1929,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1372600000,
        "text_offset": 1934,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1378000000,
        "text_offset": 1943,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1380800000,
        "text_offset": 1946,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1382200000,
        "text_offset": 1951,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385600000,
        "text_offset": 1959,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387600000,
        "text_offset": 1963,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391800000,
        "text_offset": 1975,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395800000,
        "text_offset": 1981,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398400000,
        "text_offset": 1984,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401399999,
        "text_offset": 1992,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405600000,
        "text_offset": 1994,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1408000000,
        "text_offset": 1997,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409400000,
        "text_offset": 2001,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412600000,
        "text_offset": 2010,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1416000000,
        "text_offset": 2015,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1430000000,
        "text_offset": 2019,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1433000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436800000,
        "text_offset": 2028,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2038,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455600000,
        "text_offset": 2047,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1459199999,
        "text_offset": 2053,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1462200000,
        "text_offset": 2061,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467600000,
        "text_offset": 2066,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471600000,
        "text_offset": 2076,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474400000,
        "text_offset": 2079,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1476399999,
        "text_offset": 2083,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479800000,
        "text_offset": 2091,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1482200000,
        "text_offset": 2093,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1484000000,
        "text_offset": 2097,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1486200000,
        "text_offset": 2101,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1488400000,
        "text_offset": 2106,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1503599999,
        "text_offset": 2119,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504800000,
        "text_offset": 2122,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1506399999,
        "text_offset": 2125,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1509400000,
        "text_offset": 2131,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510800000,
        "text_offset": 2136,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512800000,
        "text_offset": 2140,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1517200000,
        "text_offset": 2151,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1520200000,
        "text_offset": 2154,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521800000,
        "text_offset": 2158,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526800000,
        "text_offset": 2169,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1530600000,
        "text_offset": 2174,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1535000000,
        "text_offset": 2182,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537800000,
        "text_offset": 2185,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1539199999,
        "text_offset": 2189,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1543599999,
        "text_offset": 2194,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556799999,
        "text_offset": 2204,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1562000000,
        "text_offset": 2213,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1568000000,
        "text_offset": 2216,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1570200000,
        "text_offset": 2220,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1572200000,
        "text_offset": 2224,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1574199999,
        "text_offset": 2226,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1579199999,
        "text_offset": 2237,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1584300000,
        "text_offset": 2242,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1598200000,
        "text_offset": 2253,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1607100000,
        "text_offset": 2258,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. Our cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the value of the unit. We can construct the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-66addc69.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599200000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632800000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635600000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637200000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640600000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646800000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660100000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667600000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670400000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674800000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 690800000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691800000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695600000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698800000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701800000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704200000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705400000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708600000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721000000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722400000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724400000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754000000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755600000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756800000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760200000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765200000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778400000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780800000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783000000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787600000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801000000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803800000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806400000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811400000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814400000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815800000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818199999,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821200000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825400000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828800000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832600000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850000000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851800000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857800000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859800000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861400000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863400000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 867000000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872000000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880600000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883800000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886200000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890200000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894200000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897200000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900200000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913400000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923000000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924400000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926400000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 929800000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933199999,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 935600000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938600000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 941800000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951600000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956600000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959800000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962200000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964400000,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967200000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969599999,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975400000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993800000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997200000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002600000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1005800000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008400000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1017800000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1020800000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027000000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1039800000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041400000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043199999,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054000000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057200000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058400000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063400000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1066600000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1069800000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072400000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075200000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1082300000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094000000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096200000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097600000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101400000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106000000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121400000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123400000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128200000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1131800000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134200000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138600000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140400000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146000000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1151000000,
        "text_offset": 1602,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1157400000,
        "text_offset": 1610,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1172800000,
        "text_offset": 1617,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1628,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184200000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186000000,
        "text_offset": 1635,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190800000,
        "text_offset": 1643,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1196800000,
        "text_offset": 1652,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1200200000,
        "text_offset": 1656,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1661,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1670,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210200000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212800000,
        "text_offset": 1679,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216400000,
        "text_offset": 1683,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218000000,
        "text_offset": 1688,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232600000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234400000,
        "text_offset": 1700,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236200000,
        "text_offset": 1705,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1239600000,
        "text_offset": 1713,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1241800000,
        "text_offset": 1715,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244200000,
        "text_offset": 1721,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1249800000,
        "text_offset": 1727,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252600000,
        "text_offset": 1730,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1253800000,
        "text_offset": 1734,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1263800000,
        "text_offset": 1741,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1269800000,
        "text_offset": 1747,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270800000,
        "text_offset": 1751,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1272600000,
        "text_offset": 1756,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287600000,
        "text_offset": 1765,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289400000,
        "text_offset": 1768,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290600000,
        "text_offset": 1772,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294000000,
        "text_offset": 1777,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296399999,
        "text_offset": 1780,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1298800000,
        "text_offset": 1784,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1300800000,
        "text_offset": 1787,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1797,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315400000,
        "text_offset": 1804,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1809,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331200000,
        "text_offset": 1821,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1332800000,
        "text_offset": 1827,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334400000,
        "text_offset": 1830,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336600000,
        "text_offset": 1836,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340000000,
        "text_offset": 1839,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345200000,
        "text_offset": 1851,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349199999,
        "text_offset": 1858,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352000000,
        "text_offset": 1863,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354600000,
        "text_offset": 1871,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356800000,
        "text_offset": 1875,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1366399999,
        "text_offset": 1882,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367600000,
        "text_offset": 1885,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369199999,
        "text_offset": 1889,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1374200000,
        "text_offset": 1894,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1377800000,
        "text_offset": 1903,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1379800000,
        "text_offset": 1906,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381800000,
        "text_offset": 1911,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385200000,
        "text_offset": 1919,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387400000,
        "text_offset": 1923,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391600000,
        "text_offset": 1935,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395400000,
        "text_offset": 1941,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398000000,
        "text_offset": 1944,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401000000,
        "text_offset": 1952,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405200000,
        "text_offset": 1954,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1407600000,
        "text_offset": 1957,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409000000,
        "text_offset": 1961,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412200000,
        "text_offset": 1970,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415600000,
        "text_offset": 1975,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1429400000,
        "text_offset": 1979,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1432400000,
        "text_offset": 1985,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436000000,
        "text_offset": 1988,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445600000,
        "text_offset": 1998,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2007,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2011,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2016,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2028,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2032,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2036,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2041,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2044,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2048,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2053,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2063,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455000000,
        "text_offset": 2072,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457400000,
        "text_offset": 2078,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1461600000,
        "text_offset": 2086,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467000000,
        "text_offset": 2091,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471200000,
        "text_offset": 2101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2104,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1475800000,
        "text_offset": 2108,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2116,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1481600000,
        "text_offset": 2118,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1483400000,
        "text_offset": 2122,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1485600000,
        "text_offset": 2126,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1487800000,
        "text_offset": 2131,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1502999999,
        "text_offset": 2144,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504000000,
        "text_offset": 2147,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505600000,
        "text_offset": 2150,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1508600000,
        "text_offset": 2156,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510000000,
        "text_offset": 2161,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512000000,
        "text_offset": 2165,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516399999,
        "text_offset": 2176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1519600000,
        "text_offset": 2179,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521000000,
        "text_offset": 2183,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526000000,
        "text_offset": 2194,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529800000,
        "text_offset": 2199,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1534199999,
        "text_offset": 2207,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537200000,
        "text_offset": 2210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1538400000,
        "text_offset": 2214,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1541399999,
        "text_offset": 2219,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556000000,
        "text_offset": 2229,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1561200000,
        "text_offset": 2238,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567200000,
        "text_offset": 2241,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569400000,
        "text_offset": 2245,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1571399999,
        "text_offset": 2249,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1573600000,
        "text_offset": 2251,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578600000,
        "text_offset": 2262,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1583500000,
        "text_offset": 2267,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1597399999,
        "text_offset": 2278,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1606300000,
        "text_offset": 2283,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. The cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, the cost function is not the same as the cost function. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!",
      "service": "gtts"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-9d3596b2.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2400000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3800000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8800000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23800000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25600000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199999,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48700000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59400000,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 95,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 97,
        "word_length": 5,
        "text": "-NIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73200000,
        "text_offset": 102,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on M-NIST digits.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-9d3596b2.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599200000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632800000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635600000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637200000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640600000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646800000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660100000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667600000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670400000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674800000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 690800000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691800000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695600000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698800000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701800000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704200000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705400000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708600000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721000000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722400000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724400000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754000000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755600000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756800000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760200000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765200000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778400000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780800000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783000000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787600000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801000000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803800000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806400000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811400000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814400000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815800000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818199999,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821200000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825400000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828800000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832600000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850000000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851800000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857800000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859800000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861400000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863400000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 867000000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872000000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880600000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883800000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886200000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890200000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894200000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897200000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900200000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913400000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923000000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924400000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926400000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 929800000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933199999,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 935600000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938600000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 941800000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951600000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956600000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959800000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962200000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964400000,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967200000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969599999,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975400000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993800000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997200000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002600000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1005800000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008400000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1017800000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1020800000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027000000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1039800000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041400000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043199999,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054000000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057200000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058400000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063400000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1066600000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1069800000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072400000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075200000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1082300000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094000000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096200000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097600000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101400000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106000000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121400000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123400000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128200000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1131800000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134200000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138600000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140400000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146000000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1151000000,
        "text_offset": 1602,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1157400000,
        "text_offset": 1610,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1172800000,
        "text_offset": 1617,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1628,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184200000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186000000,
        "text_offset": 1635,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190800000,
        "text_offset": 1643,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1196800000,
        "text_offset": 1652,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1200200000,
        "text_offset": 1656,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1661,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1670,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210200000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212800000,
        "text_offset": 1679,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216400000,
        "text_offset": 1683,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218000000,
        "text_offset": 1688,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232600000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234400000,
        "text_offset": 1700,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236200000,
        "text_offset": 1705,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1239600000,
        "text_offset": 1713,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1241800000,
        "text_offset": 1715,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244200000,
        "text_offset": 1721,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1249800000,
        "text_offset": 1727,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252600000,
        "text_offset": 1730,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1253800000,
        "text_offset": 1734,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1263800000,
        "text_offset": 1741,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1269800000,
        "text_offset": 1747,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270800000,
        "text_offset": 1751,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1272600000,
        "text_offset": 1756,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287600000,
        "text_offset": 1765,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289400000,
        "text_offset": 1768,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290600000,
        "text_offset": 1772,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294000000,
        "text_offset": 1777,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296399999,
        "text_offset": 1780,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1298800000,
        "text_offset": 1784,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1300800000,
        "text_offset": 1787,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1797,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315400000,
        "text_offset": 1804,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1809,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331200000,
        "text_offset": 1821,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1332800000,
        "text_offset": 1827,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334400000,
        "text_offset": 1830,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336600000,
        "text_offset": 1836,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340000000,
        "text_offset": 1839,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345200000,
        "text_offset": 1851,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349199999,
        "text_offset": 1858,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352000000,
        "text_offset": 1863,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354600000,
        "text_offset": 1871,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356800000,
        "text_offset": 1875,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1366399999,
        "text_offset": 1882,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367600000,
        "text_offset": 1885,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369199999,
        "text_offset": 1889,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1374200000,
        "text_offset": 1894,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1377800000,
        "text_offset": 1903,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1379800000,
        "text_offset": 1906,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381800000,
        "text_offset": 1911,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385200000,
        "text_offset": 1919,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387400000,
        "text_offset": 1923,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391600000,
        "text_offset": 1935,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395400000,
        "text_offset": 1941,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398000000,
        "text_offset": 1944,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401000000,
        "text_offset": 1952,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405200000,
        "text_offset": 1954,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1407600000,
        "text_offset": 1957,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409000000,
        "text_offset": 1961,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412200000,
        "text_offset": 1970,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415600000,
        "text_offset": 1975,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1429400000,
        "text_offset": 1979,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1432400000,
        "text_offset": 1985,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436000000,
        "text_offset": 1988,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445600000,
        "text_offset": 1998,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2007,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2011,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2016,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2028,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2032,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2036,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2041,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2044,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2048,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2053,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2063,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455000000,
        "text_offset": 2072,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457400000,
        "text_offset": 2078,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1461600000,
        "text_offset": 2086,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467000000,
        "text_offset": 2091,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471200000,
        "text_offset": 2101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2104,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1475800000,
        "text_offset": 2108,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2116,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1481600000,
        "text_offset": 2118,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1483400000,
        "text_offset": 2122,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1485600000,
        "text_offset": 2126,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1487800000,
        "text_offset": 2131,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1502999999,
        "text_offset": 2144,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504000000,
        "text_offset": 2147,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505600000,
        "text_offset": 2150,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1508600000,
        "text_offset": 2156,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510000000,
        "text_offset": 2161,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512000000,
        "text_offset": 2165,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516399999,
        "text_offset": 2176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1519600000,
        "text_offset": 2179,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521000000,
        "text_offset": 2183,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526000000,
        "text_offset": 2194,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529800000,
        "text_offset": 2199,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1534199999,
        "text_offset": 2207,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537200000,
        "text_offset": 2210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1538400000,
        "text_offset": 2214,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1541399999,
        "text_offset": 2219,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556000000,
        "text_offset": 2229,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1561200000,
        "text_offset": 2238,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567200000,
        "text_offset": 2241,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569400000,
        "text_offset": 2245,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1571399999,
        "text_offset": 2249,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1573600000,
        "text_offset": 2251,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578600000,
        "text_offset": 2262,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1583500000,
        "text_offset": 2267,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1597399999,
        "text_offset": 2278,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1606300000,
        "text_offset": 2283,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. The cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, the cost function is not the same as the cost function. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!",
      "service": "gtts"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-9d3596b2.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2400000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3800000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8800000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23800000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25600000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199999,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48700000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59400000,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 95,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 97,
        "word_length": 5,
        "text": "-NIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73200000,
        "text_offset": 102,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on M-NIST digits.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-9d3596b2.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599200000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632800000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635600000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637200000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640600000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646800000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660100000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667600000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670400000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674800000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 690800000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691800000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695600000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698800000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701800000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704200000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705400000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708600000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721000000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722400000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724400000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754000000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755600000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756800000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760200000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765200000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778400000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780800000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783000000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787600000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801000000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803800000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806400000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811400000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814400000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815800000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818199999,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821200000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825400000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828800000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832600000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850000000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851800000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857800000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859800000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861400000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863400000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 867000000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872000000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880600000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883800000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886200000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890200000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894200000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897200000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900200000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913400000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923000000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924400000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926400000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 929800000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933199999,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 935600000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938600000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 941800000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951600000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956600000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959800000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962200000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964400000,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967200000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969599999,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975400000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993800000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997200000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002600000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1005800000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008400000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1017800000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1020800000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027000000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1039800000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041400000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043199999,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054000000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057200000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058400000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063400000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1066600000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1069800000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072400000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075200000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1082300000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094000000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096200000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097600000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101400000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106000000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121400000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123400000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128200000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1131800000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134200000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138600000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140400000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146000000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1151000000,
        "text_offset": 1602,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1157400000,
        "text_offset": 1610,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1172800000,
        "text_offset": 1617,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1628,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184200000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186000000,
        "text_offset": 1635,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190800000,
        "text_offset": 1643,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1196800000,
        "text_offset": 1652,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1200200000,
        "text_offset": 1656,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1661,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1670,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210200000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212800000,
        "text_offset": 1679,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216400000,
        "text_offset": 1683,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218000000,
        "text_offset": 1688,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232600000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234400000,
        "text_offset": 1700,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236200000,
        "text_offset": 1705,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1239600000,
        "text_offset": 1713,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1241800000,
        "text_offset": 1715,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244200000,
        "text_offset": 1721,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1249800000,
        "text_offset": 1727,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252600000,
        "text_offset": 1730,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1253800000,
        "text_offset": 1734,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1263800000,
        "text_offset": 1741,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1269800000,
        "text_offset": 1747,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270800000,
        "text_offset": 1751,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1272600000,
        "text_offset": 1756,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287600000,
        "text_offset": 1765,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289400000,
        "text_offset": 1768,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290600000,
        "text_offset": 1772,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294000000,
        "text_offset": 1777,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296399999,
        "text_offset": 1780,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1298800000,
        "text_offset": 1784,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1300800000,
        "text_offset": 1787,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1797,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315400000,
        "text_offset": 1804,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1809,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331200000,
        "text_offset": 1821,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1332800000,
        "text_offset": 1827,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334400000,
        "text_offset": 1830,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336600000,
        "text_offset": 1836,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340000000,
        "text_offset": 1839,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345200000,
        "text_offset": 1851,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349199999,
        "text_offset": 1858,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352000000,
        "text_offset": 1863,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354600000,
        "text_offset": 1871,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356800000,
        "text_offset": 1875,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1366399999,
        "text_offset": 1882,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367600000,
        "text_offset": 1885,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369199999,
        "text_offset": 1889,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1374200000,
        "text_offset": 1894,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1377800000,
        "text_offset": 1903,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1379800000,
        "text_offset": 1906,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381800000,
        "text_offset": 1911,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385200000,
        "text_offset": 1919,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387400000,
        "text_offset": 1923,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391600000,
        "text_offset": 1935,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395400000,
        "text_offset": 1941,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398000000,
        "text_offset": 1944,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401000000,
        "text_offset": 1952,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405200000,
        "text_offset": 1954,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1407600000,
        "text_offset": 1957,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409000000,
        "text_offset": 1961,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412200000,
        "text_offset": 1970,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415600000,
        "text_offset": 1975,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1429400000,
        "text_offset": 1979,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1432400000,
        "text_offset": 1985,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436000000,
        "text_offset": 1988,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445600000,
        "text_offset": 1998,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2007,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2011,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2016,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2028,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2032,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2036,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2041,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2044,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2048,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2053,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2063,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455000000,
        "text_offset": 2072,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457400000,
        "text_offset": 2078,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1461600000,
        "text_offset": 2086,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467000000,
        "text_offset": 2091,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471200000,
        "text_offset": 2101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2104,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1475800000,
        "text_offset": 2108,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2116,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1481600000,
        "text_offset": 2118,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1483400000,
        "text_offset": 2122,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1485600000,
        "text_offset": 2126,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1487800000,
        "text_offset": 2131,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1502999999,
        "text_offset": 2144,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504000000,
        "text_offset": 2147,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505600000,
        "text_offset": 2150,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1508600000,
        "text_offset": 2156,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510000000,
        "text_offset": 2161,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512000000,
        "text_offset": 2165,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516399999,
        "text_offset": 2176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1519600000,
        "text_offset": 2179,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521000000,
        "text_offset": 2183,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526000000,
        "text_offset": 2194,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529800000,
        "text_offset": 2199,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1534199999,
        "text_offset": 2207,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537200000,
        "text_offset": 2210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1538400000,
        "text_offset": 2214,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1541399999,
        "text_offset": 2219,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556000000,
        "text_offset": 2229,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1561200000,
        "text_offset": 2238,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567200000,
        "text_offset": 2241,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569400000,
        "text_offset": 2245,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1571399999,
        "text_offset": 2249,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1573600000,
        "text_offset": 2251,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578600000,
        "text_offset": 2262,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1583500000,
        "text_offset": 2267,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1597399999,
        "text_offset": 2278,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1606300000,
        "text_offset": 2283,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. The cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, the cost function is not the same as the cost function. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!",
      "service": "gtts"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-9d3596b2.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2400000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3800000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8800000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23800000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25600000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40199999,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42400000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48700000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59400000,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 95,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 97,
        "word_length": 5,
        "text": "-NIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73200000,
        "text_offset": 102,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on M-NIST digits.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-9d3596b2.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599200000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632800000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635600000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637200000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640600000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646800000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660100000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667600000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670400000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674800000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 690800000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691800000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695600000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698800000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701800000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704200000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705400000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708600000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721000000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722400000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724400000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754000000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755600000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756800000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760200000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765200000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778400000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780800000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783000000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787600000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801000000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803800000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806400000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811400000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814400000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815800000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818199999,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821200000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825400000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828800000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832600000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850000000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851800000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857800000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859800000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861400000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863400000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 867000000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872000000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880600000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883800000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886200000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890200000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894200000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897200000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900200000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913400000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923000000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924400000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926400000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 929800000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933199999,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 935600000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938600000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 941800000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951600000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956600000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959800000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962200000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964400000,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967200000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969599999,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975400000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993800000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997200000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002600000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1005800000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008400000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1017800000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1020800000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027000000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1039800000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041400000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043199999,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054000000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057200000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058400000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063400000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1066600000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1069800000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072400000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075200000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1082300000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094000000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096200000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097600000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101400000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106000000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121400000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123400000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128200000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1131800000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134200000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138600000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140400000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146000000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1151000000,
        "text_offset": 1602,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1157400000,
        "text_offset": 1610,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1172800000,
        "text_offset": 1617,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1628,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184200000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186000000,
        "text_offset": 1635,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190800000,
        "text_offset": 1643,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1196800000,
        "text_offset": 1652,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1200200000,
        "text_offset": 1656,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1661,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1670,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210200000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212800000,
        "text_offset": 1679,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216400000,
        "text_offset": 1683,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218000000,
        "text_offset": 1688,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232600000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234400000,
        "text_offset": 1700,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236200000,
        "text_offset": 1705,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1239600000,
        "text_offset": 1713,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1241800000,
        "text_offset": 1715,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244200000,
        "text_offset": 1721,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1249800000,
        "text_offset": 1727,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252600000,
        "text_offset": 1730,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1253800000,
        "text_offset": 1734,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1263800000,
        "text_offset": 1741,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1269800000,
        "text_offset": 1747,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270800000,
        "text_offset": 1751,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1272600000,
        "text_offset": 1756,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287600000,
        "text_offset": 1765,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289400000,
        "text_offset": 1768,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290600000,
        "text_offset": 1772,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294000000,
        "text_offset": 1777,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296399999,
        "text_offset": 1780,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1298800000,
        "text_offset": 1784,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1300800000,
        "text_offset": 1787,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1797,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315400000,
        "text_offset": 1804,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1809,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331200000,
        "text_offset": 1821,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1332800000,
        "text_offset": 1827,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334400000,
        "text_offset": 1830,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336600000,
        "text_offset": 1836,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340000000,
        "text_offset": 1839,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345200000,
        "text_offset": 1851,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349199999,
        "text_offset": 1858,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352000000,
        "text_offset": 1863,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354600000,
        "text_offset": 1871,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356800000,
        "text_offset": 1875,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1366399999,
        "text_offset": 1882,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367600000,
        "text_offset": 1885,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369199999,
        "text_offset": 1889,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1374200000,
        "text_offset": 1894,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1377800000,
        "text_offset": 1903,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1379800000,
        "text_offset": 1906,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381800000,
        "text_offset": 1911,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385200000,
        "text_offset": 1919,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387400000,
        "text_offset": 1923,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391600000,
        "text_offset": 1935,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395400000,
        "text_offset": 1941,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398000000,
        "text_offset": 1944,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401000000,
        "text_offset": 1952,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405200000,
        "text_offset": 1954,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1407600000,
        "text_offset": 1957,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409000000,
        "text_offset": 1961,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412200000,
        "text_offset": 1970,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415600000,
        "text_offset": 1975,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1429400000,
        "text_offset": 1979,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1432400000,
        "text_offset": 1985,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436000000,
        "text_offset": 1988,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445600000,
        "text_offset": 1998,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2007,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2011,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2016,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2028,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2032,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2036,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2041,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2044,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2048,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2053,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2063,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455000000,
        "text_offset": 2072,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457400000,
        "text_offset": 2078,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1461600000,
        "text_offset": 2086,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467000000,
        "text_offset": 2091,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471200000,
        "text_offset": 2101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2104,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1475800000,
        "text_offset": 2108,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2116,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1481600000,
        "text_offset": 2118,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1483400000,
        "text_offset": 2122,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1485600000,
        "text_offset": 2126,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1487800000,
        "text_offset": 2131,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1502999999,
        "text_offset": 2144,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504000000,
        "text_offset": 2147,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505600000,
        "text_offset": 2150,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1508600000,
        "text_offset": 2156,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510000000,
        "text_offset": 2161,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512000000,
        "text_offset": 2165,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516399999,
        "text_offset": 2176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1519600000,
        "text_offset": 2179,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521000000,
        "text_offset": 2183,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526000000,
        "text_offset": 2194,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529800000,
        "text_offset": 2199,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1534199999,
        "text_offset": 2207,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537200000,
        "text_offset": 2210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1538400000,
        "text_offset": 2214,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1541399999,
        "text_offset": 2219,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556000000,
        "text_offset": 2229,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1561200000,
        "text_offset": 2238,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567200000,
        "text_offset": 2241,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569400000,
        "text_offset": 2245,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1571399999,
        "text_offset": 2249,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1573600000,
        "text_offset": 2251,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578600000,
        "text_offset": 2262,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1583500000,
        "text_offset": 2267,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1597399999,
        "text_offset": 2278,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1606300000,
        "text_offset": 2283,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. The cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, the cost function is not the same as the cost function. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits! <bookmark mark='A'/> Training goes increadibly smoothly on both Domain Wall and MNIST datasets. <bookmark mark='B'/> So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actualy provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders.",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!  Training goes increadibly smoothly on both Domain Wall and MNIST datasets.  So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actualy provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders.",
      "service": "gtts"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-2239f692.mp3",
    "word_boundaries": [
      {
        "audio_offset": 400000,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3800000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8600000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16600000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19800000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22400000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23800000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26400000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28800000,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48200000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62800000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 95,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73000000,
        "text_offset": 101,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85399999,
        "text_offset": 109,
        "word_length": 9,
        "text": " Training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87800000,
        "text_offset": 118,
        "word_length": 5,
        "text": " goes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "text_offset": 123,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " smoothly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104600000,
        "text_offset": 143,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000000,
        "text_offset": 146,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111800000,
        "text_offset": 151,
        "word_length": 7,
        "text": " domain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114800000,
        "text_offset": 158,
        "word_length": 5,
        "text": " wall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 163,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121199999,
        "text_offset": 167,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126000000,
        "text_offset": 173,
        "word_length": 10,
        "text": " datasets.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139800000,
        "text_offset": 183,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141000000,
        "text_offset": 186,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 142800000,
        "text_offset": 189,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144400000,
        "text_offset": 194,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146000000,
        "text_offset": 196,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149600000,
        "text_offset": 203,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154700000,
        "text_offset": 211,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163200000,
        "text_offset": 223,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 167000000,
        "text_offset": 231,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170000000,
        "text_offset": 234,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171600000,
        "text_offset": 239,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174200000,
        "text_offset": 242,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 244,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178600000,
        "text_offset": 251,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185100000,
        "text_offset": 261,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202800000,
        "text_offset": 274,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204400000,
        "text_offset": 278,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205600000,
        "text_offset": 281,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 210799999,
        "text_offset": 290,
        "word_length": 9,
        "text": " provides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 299,
        "word_length": 12,
        "text": " significant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224600000,
        "text_offset": 311,
        "word_length": 11,
        "text": " advantages",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 322,
        "word_length": 4,
        "text": " due",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235600000,
        "text_offset": 326,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 237000000,
        "text_offset": 329,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238800000,
        "text_offset": 333,
        "word_length": 10,
        "text": " unitarian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244600000,
        "text_offset": 343,
        "word_length": 7,
        "text": " coder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257800000,
        "text_offset": 350,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259000000,
        "text_offset": 353,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 260400000,
        "text_offset": 357,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262000000,
        "text_offset": 360,
        "word_length": 6,
        "text": " done?",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 366,
        "word_length": 4,
        "text": " No.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 277400000,
        "text_offset": 370,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 278600000,
        "text_offset": 373,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281600000,
        "text_offset": 379,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284400000,
        "text_offset": 384,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286400000,
        "text_offset": 390,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 292800000,
        "text_offset": 401,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 297200000,
        "text_offset": 409,
        "word_length": 14,
        "text": " autoencoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on MNIST digits. Training goes incredibly smoothly on both domain wall and MNIST datasets. So we have a simple quantum autoencoder working as well as a simple classical autoencoder. And it actually provides significant advantages due to the unitarian coder. So are we done? No. We still have error correcting quantum autoencoders.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-2239f692.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599200000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632800000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635600000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637200000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640600000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646800000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660100000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667600000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670400000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674800000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 690800000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691800000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695600000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698800000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701800000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704200000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705400000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708600000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721000000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722400000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724400000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754000000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755600000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756800000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760200000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765200000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778400000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780800000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783000000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787600000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801000000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803800000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806400000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811400000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814400000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815800000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818199999,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821200000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825400000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828800000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832600000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850000000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851800000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857800000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859800000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861400000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863400000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 867000000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872000000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880600000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883800000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886200000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890200000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894200000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897200000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900200000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913400000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923000000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924400000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926400000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 929800000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933199999,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 935600000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938600000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 941800000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951600000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956600000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959800000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962200000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964400000,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967200000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969599999,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975400000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993800000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997200000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002600000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1005800000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008400000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1017800000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1020800000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027000000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1039800000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041400000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043199999,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054000000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057200000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058400000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063400000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1066600000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1069800000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072400000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075200000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1082300000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094000000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096200000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097600000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101400000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106000000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121400000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123400000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128200000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1131800000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134200000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138600000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140400000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146000000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1151000000,
        "text_offset": 1602,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1157400000,
        "text_offset": 1610,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1172800000,
        "text_offset": 1617,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1628,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184200000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186000000,
        "text_offset": 1635,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190800000,
        "text_offset": 1643,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1196800000,
        "text_offset": 1652,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1200200000,
        "text_offset": 1656,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1661,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1670,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210200000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212800000,
        "text_offset": 1679,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216400000,
        "text_offset": 1683,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218000000,
        "text_offset": 1688,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232600000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234400000,
        "text_offset": 1700,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236200000,
        "text_offset": 1705,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1239600000,
        "text_offset": 1713,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1241800000,
        "text_offset": 1715,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244200000,
        "text_offset": 1721,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1249800000,
        "text_offset": 1727,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252600000,
        "text_offset": 1730,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1253800000,
        "text_offset": 1734,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1263800000,
        "text_offset": 1741,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1269800000,
        "text_offset": 1747,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270800000,
        "text_offset": 1751,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1272600000,
        "text_offset": 1756,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287600000,
        "text_offset": 1765,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289400000,
        "text_offset": 1768,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290600000,
        "text_offset": 1772,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294000000,
        "text_offset": 1777,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296399999,
        "text_offset": 1780,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1298800000,
        "text_offset": 1784,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1300800000,
        "text_offset": 1787,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1797,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315400000,
        "text_offset": 1804,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1809,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331200000,
        "text_offset": 1821,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1332800000,
        "text_offset": 1827,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334400000,
        "text_offset": 1830,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336600000,
        "text_offset": 1836,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340000000,
        "text_offset": 1839,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345200000,
        "text_offset": 1851,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349199999,
        "text_offset": 1858,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352000000,
        "text_offset": 1863,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354600000,
        "text_offset": 1871,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356800000,
        "text_offset": 1875,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1366399999,
        "text_offset": 1882,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367600000,
        "text_offset": 1885,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369199999,
        "text_offset": 1889,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1374200000,
        "text_offset": 1894,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1377800000,
        "text_offset": 1903,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1379800000,
        "text_offset": 1906,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381800000,
        "text_offset": 1911,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385200000,
        "text_offset": 1919,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387400000,
        "text_offset": 1923,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391600000,
        "text_offset": 1935,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395400000,
        "text_offset": 1941,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398000000,
        "text_offset": 1944,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401000000,
        "text_offset": 1952,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405200000,
        "text_offset": 1954,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1407600000,
        "text_offset": 1957,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409000000,
        "text_offset": 1961,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412200000,
        "text_offset": 1970,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415600000,
        "text_offset": 1975,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1429400000,
        "text_offset": 1979,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1432400000,
        "text_offset": 1985,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436000000,
        "text_offset": 1988,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445600000,
        "text_offset": 1998,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2007,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2011,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2016,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2028,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2032,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2036,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2041,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2044,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2048,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2053,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2063,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455000000,
        "text_offset": 2072,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457400000,
        "text_offset": 2078,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1461600000,
        "text_offset": 2086,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467000000,
        "text_offset": 2091,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471200000,
        "text_offset": 2101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2104,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1475800000,
        "text_offset": 2108,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2116,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1481600000,
        "text_offset": 2118,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1483400000,
        "text_offset": 2122,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1485600000,
        "text_offset": 2126,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1487800000,
        "text_offset": 2131,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1502999999,
        "text_offset": 2144,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504000000,
        "text_offset": 2147,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505600000,
        "text_offset": 2150,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1508600000,
        "text_offset": 2156,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510000000,
        "text_offset": 2161,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512000000,
        "text_offset": 2165,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516399999,
        "text_offset": 2176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1519600000,
        "text_offset": 2179,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521000000,
        "text_offset": 2183,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526000000,
        "text_offset": 2194,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529800000,
        "text_offset": 2199,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1534199999,
        "text_offset": 2207,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537200000,
        "text_offset": 2210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1538400000,
        "text_offset": 2214,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1541399999,
        "text_offset": 2219,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556000000,
        "text_offset": 2229,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1561200000,
        "text_offset": 2238,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567200000,
        "text_offset": 2241,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569400000,
        "text_offset": 2245,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1571399999,
        "text_offset": 2249,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1573600000,
        "text_offset": 2251,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578600000,
        "text_offset": 2262,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1583500000,
        "text_offset": 2267,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1597399999,
        "text_offset": 2278,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1606300000,
        "text_offset": 2283,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. The cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, the cost function is not the same as the cost function. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits! <bookmark mark='A'/> Training goes increadibly smoothly on both Domain Wall and MNIST datasets. <bookmark mark='B'/> So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actualy provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! <bookmark mark='C'/>",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!  Training goes increadibly smoothly on both Domain Wall and MNIST datasets.  So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actualy provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! ",
      "service": "gtts"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-684c9470.mp3",
    "word_boundaries": [
      {
        "audio_offset": 400000,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3800000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8600000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16600000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19800000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22400000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23800000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26400000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28800000,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48200000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199999,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62800000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 95,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73000000,
        "text_offset": 101,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 109,
        "word_length": 9,
        "text": " Training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87800000,
        "text_offset": 118,
        "word_length": 5,
        "text": " goes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 123,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " smoothly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111600000,
        "text_offset": 151,
        "word_length": 7,
        "text": " domain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115000000,
        "text_offset": 158,
        "word_length": 5,
        "text": " wall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 163,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 167,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126000000,
        "text_offset": 173,
        "word_length": 10,
        "text": " datasets.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140000000,
        "text_offset": 183,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141200000,
        "text_offset": 186,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "text_offset": 189,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144800000,
        "text_offset": 194,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 196,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150000000,
        "text_offset": 203,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154900000,
        "text_offset": 211,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163400000,
        "text_offset": 223,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 167200000,
        "text_offset": 231,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170000000,
        "text_offset": 234,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171800000,
        "text_offset": 239,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174400000,
        "text_offset": 242,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175400000,
        "text_offset": 244,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178800000,
        "text_offset": 251,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185300000,
        "text_offset": 261,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203200000,
        "text_offset": 274,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204600000,
        "text_offset": 278,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 281,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211000000,
        "text_offset": 290,
        "word_length": 9,
        "text": " provides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 299,
        "word_length": 12,
        "text": " significant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224800000,
        "text_offset": 311,
        "word_length": 11,
        "text": " advantages",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232200000,
        "text_offset": 322,
        "word_length": 4,
        "text": " due",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 326,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 237200000,
        "text_offset": 329,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 239000000,
        "text_offset": 333,
        "word_length": 10,
        "text": " unitarian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244800000,
        "text_offset": 343,
        "word_length": 7,
        "text": " coder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258200000,
        "text_offset": 350,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259200000,
        "text_offset": 353,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 260600000,
        "text_offset": 357,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 360,
        "word_length": 6,
        "text": " done?",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 366,
        "word_length": 4,
        "text": " No,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 277600000,
        "text_offset": 370,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 278800000,
        "text_offset": 373,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281800000,
        "text_offset": 379,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284800000,
        "text_offset": 384,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286800000,
        "text_offset": 390,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 293200000,
        "text_offset": 401,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 409,
        "word_length": 14,
        "text": " autoencoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on MNIST digits. Training goes incredibly smoothly on both domain wall and MNIST datasets. So we have a simple quantum autoencoder working as well as a simple classical autoencoder. And it actually provides significant advantages due to the unitarian coder. So are we done? No, we still have error correcting quantum autoencoders.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-684c9470.mp3"
  },
  {
    "input_text": "We need to make a couple of minor modifications to support error correction. Here is our current training circut. First we need to change it to a 1-3-1-3 archecture.",
    "input_data": {
      "input_text": "We need to make a couple of minor modifications to support error correction. Here is our current training circut. First we need to change it to a 1-3-1-3 archecture.",
      "service": "gtts"
    },
    "original_audio": "we-need-to-make-a-couple-of-minor-modifications-to-fa308d09.mp3",
    "word_boundaries": [
      {
        "audio_offset": 400000,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 3,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7600000,
        "text_offset": 16,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9800000,
        "text_offset": 18,
        "word_length": 7,
        "text": " couple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12200000,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14600000,
        "text_offset": 28,
        "word_length": 6,
        "text": " minor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18400000,
        "text_offset": 34,
        "word_length": 14,
        "text": " modifications",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 48,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30200000,
        "text_offset": 51,
        "word_length": 8,
        "text": " support",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34200000,
        "text_offset": 59,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37400000,
        "text_offset": 65,
        "word_length": 12,
        "text": " correction.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54000000,
        "text_offset": 77,
        "word_length": 5,
        "text": " Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55800000,
        "text_offset": 82,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57600000,
        "text_offset": 85,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 89,
        "word_length": 8,
        "text": " current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61800000,
        "text_offset": 97,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66400000,
        "text_offset": 106,
        "word_length": 9,
        "text": " circuit.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77800000,
        "text_offset": 115,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81000000,
        "text_offset": 121,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 124,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84400000,
        "text_offset": 129,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85800000,
        "text_offset": 132,
        "word_length": 7,
        "text": " change",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89200000,
        "text_offset": 139,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "text_offset": 142,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "text_offset": 145,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "text_offset": 147,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "text_offset": 149,
        "word_length": 2,
        "text": "-3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100200000,
        "text_offset": 151,
        "word_length": 2,
        "text": "-1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104200000,
        "text_offset": 153,
        "word_length": 2,
        "text": "-3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107400000,
        "text_offset": 155,
        "word_length": 2,
        "text": "-R",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110399999,
        "text_offset": 157,
        "word_length": 9,
        "text": " texture.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We need to make a couple of minor modifications to support error correction. Here is our current training circuit. First we need to change it to a 1-3-1-3-R texture.",
    "final_audio": "we-need-to-make-a-couple-of-minor-modifications-to-fa308d09.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599200000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632800000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635600000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637200000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640600000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646800000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660100000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667600000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670400000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674800000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 690800000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691800000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695600000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698800000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701800000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704200000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705400000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708600000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721000000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722400000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724400000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754000000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755600000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756800000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760200000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765200000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778400000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780800000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783000000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787600000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801000000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803800000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806400000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811400000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814400000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815800000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818199999,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821200000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825400000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828800000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832600000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850000000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851800000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857800000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859800000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861400000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863400000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 867000000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872000000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880600000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883800000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886200000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890200000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894200000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897200000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900200000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913400000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923000000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924400000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926400000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 929800000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933199999,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 935600000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938600000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 941800000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951600000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956600000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959800000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962200000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964400000,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967200000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969599999,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975400000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993800000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997200000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002600000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1005800000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008400000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1017800000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1020800000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027000000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1039800000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041400000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043199999,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054000000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057200000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058400000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063400000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1066600000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1069800000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072400000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075200000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1082300000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094000000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096200000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097600000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101400000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106000000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121400000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123400000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128200000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1131800000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134200000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138600000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140400000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146000000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1151000000,
        "text_offset": 1602,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1157400000,
        "text_offset": 1610,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1172800000,
        "text_offset": 1617,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1628,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184200000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186000000,
        "text_offset": 1635,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190800000,
        "text_offset": 1643,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1196800000,
        "text_offset": 1652,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1200200000,
        "text_offset": 1656,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1661,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1670,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210200000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212800000,
        "text_offset": 1679,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216400000,
        "text_offset": 1683,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218000000,
        "text_offset": 1688,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232600000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234400000,
        "text_offset": 1700,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236200000,
        "text_offset": 1705,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1239600000,
        "text_offset": 1713,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1241800000,
        "text_offset": 1715,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244200000,
        "text_offset": 1721,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1249800000,
        "text_offset": 1727,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252600000,
        "text_offset": 1730,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1253800000,
        "text_offset": 1734,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1263800000,
        "text_offset": 1741,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1269800000,
        "text_offset": 1747,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270800000,
        "text_offset": 1751,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1272600000,
        "text_offset": 1756,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287600000,
        "text_offset": 1765,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289400000,
        "text_offset": 1768,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290600000,
        "text_offset": 1772,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294000000,
        "text_offset": 1777,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296399999,
        "text_offset": 1780,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1298800000,
        "text_offset": 1784,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1300800000,
        "text_offset": 1787,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1797,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315400000,
        "text_offset": 1804,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1809,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331200000,
        "text_offset": 1821,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1332800000,
        "text_offset": 1827,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334400000,
        "text_offset": 1830,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336600000,
        "text_offset": 1836,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340000000,
        "text_offset": 1839,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345200000,
        "text_offset": 1851,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349199999,
        "text_offset": 1858,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352000000,
        "text_offset": 1863,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354600000,
        "text_offset": 1871,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356800000,
        "text_offset": 1875,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1366399999,
        "text_offset": 1882,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367600000,
        "text_offset": 1885,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369199999,
        "text_offset": 1889,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1374200000,
        "text_offset": 1894,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1377800000,
        "text_offset": 1903,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1379800000,
        "text_offset": 1906,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381800000,
        "text_offset": 1911,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385200000,
        "text_offset": 1919,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387400000,
        "text_offset": 1923,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391600000,
        "text_offset": 1935,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395400000,
        "text_offset": 1941,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398000000,
        "text_offset": 1944,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401000000,
        "text_offset": 1952,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405200000,
        "text_offset": 1954,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1407600000,
        "text_offset": 1957,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409000000,
        "text_offset": 1961,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412200000,
        "text_offset": 1970,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415600000,
        "text_offset": 1975,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1429400000,
        "text_offset": 1979,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1432400000,
        "text_offset": 1985,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436000000,
        "text_offset": 1988,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445600000,
        "text_offset": 1998,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2007,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2011,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2016,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2028,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2032,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2036,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2041,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2044,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2048,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2053,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2063,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455000000,
        "text_offset": 2072,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457400000,
        "text_offset": 2078,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1461600000,
        "text_offset": 2086,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467000000,
        "text_offset": 2091,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471200000,
        "text_offset": 2101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2104,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1475800000,
        "text_offset": 2108,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2116,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1481600000,
        "text_offset": 2118,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1483400000,
        "text_offset": 2122,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1485600000,
        "text_offset": 2126,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1487800000,
        "text_offset": 2131,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1502999999,
        "text_offset": 2144,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504000000,
        "text_offset": 2147,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505600000,
        "text_offset": 2150,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1508600000,
        "text_offset": 2156,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510000000,
        "text_offset": 2161,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512000000,
        "text_offset": 2165,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516399999,
        "text_offset": 2176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1519600000,
        "text_offset": 2179,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521000000,
        "text_offset": 2183,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526000000,
        "text_offset": 2194,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529800000,
        "text_offset": 2199,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1534199999,
        "text_offset": 2207,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537200000,
        "text_offset": 2210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1538400000,
        "text_offset": 2214,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1541399999,
        "text_offset": 2219,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556000000,
        "text_offset": 2229,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1561200000,
        "text_offset": 2238,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567200000,
        "text_offset": 2241,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569400000,
        "text_offset": 2245,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1571399999,
        "text_offset": 2249,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1573600000,
        "text_offset": 2251,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578600000,
        "text_offset": 2262,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1583500000,
        "text_offset": 2267,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1597399999,
        "text_offset": 2278,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1606300000,
        "text_offset": 2283,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. The cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, the cost function is not the same as the cost function. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits! <bookmark mark='A'/> Training goes increadibly smoothly on both Domain Wall and MNIST datasets. <bookmark mark='B'/> So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actualy provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! <bookmark mark='C'/>",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!  Training goes increadibly smoothly on both Domain Wall and MNIST datasets.  So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actualy provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! ",
      "service": "gtts"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-684c9470.mp3",
    "word_boundaries": [
      {
        "audio_offset": 400000,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3800000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8600000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16600000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19800000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22400000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23800000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26400000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28800000,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48200000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199999,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62800000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 95,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73000000,
        "text_offset": 101,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 109,
        "word_length": 9,
        "text": " Training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87800000,
        "text_offset": 118,
        "word_length": 5,
        "text": " goes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 123,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " smoothly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111600000,
        "text_offset": 151,
        "word_length": 7,
        "text": " domain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115000000,
        "text_offset": 158,
        "word_length": 5,
        "text": " wall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 163,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 167,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126000000,
        "text_offset": 173,
        "word_length": 10,
        "text": " datasets.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140000000,
        "text_offset": 183,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141200000,
        "text_offset": 186,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "text_offset": 189,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144800000,
        "text_offset": 194,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 196,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150000000,
        "text_offset": 203,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154900000,
        "text_offset": 211,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163400000,
        "text_offset": 223,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 167200000,
        "text_offset": 231,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170000000,
        "text_offset": 234,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171800000,
        "text_offset": 239,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174400000,
        "text_offset": 242,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175400000,
        "text_offset": 244,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178800000,
        "text_offset": 251,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185300000,
        "text_offset": 261,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203200000,
        "text_offset": 274,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204600000,
        "text_offset": 278,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 281,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211000000,
        "text_offset": 290,
        "word_length": 9,
        "text": " provides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 299,
        "word_length": 12,
        "text": " significant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224800000,
        "text_offset": 311,
        "word_length": 11,
        "text": " advantages",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232200000,
        "text_offset": 322,
        "word_length": 4,
        "text": " due",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 326,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 237200000,
        "text_offset": 329,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 239000000,
        "text_offset": 333,
        "word_length": 10,
        "text": " unitarian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244800000,
        "text_offset": 343,
        "word_length": 7,
        "text": " coder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258200000,
        "text_offset": 350,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259200000,
        "text_offset": 353,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 260600000,
        "text_offset": 357,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 360,
        "word_length": 6,
        "text": " done?",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 366,
        "word_length": 4,
        "text": " No,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 277600000,
        "text_offset": 370,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 278800000,
        "text_offset": 373,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281800000,
        "text_offset": 379,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284800000,
        "text_offset": 384,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286800000,
        "text_offset": 390,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 293200000,
        "text_offset": 401,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 409,
        "word_length": 14,
        "text": " autoencoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on MNIST digits. Training goes incredibly smoothly on both domain wall and MNIST datasets. So we have a simple quantum autoencoder working as well as a simple classical autoencoder. And it actually provides significant advantages due to the unitarian coder. So are we done? No, we still have error correcting quantum autoencoders.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-684c9470.mp3"
  },
  {
    "input_text": "We need to make a couple of minor modifications to our current training circut to support error correction. <bookmark mark='A'/> Since we intend to change the data, we need to go back to training using <bookmark mark='B'/> fidelity instead of the SWAP test. <bookmark mark='C'/>We also need to encode our singular input qbit into a logical codespace, represented by |0_L\u27e9 = |000\u27e9 and |1_L\u27e9 = |111\u27e9. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to arifically induce errors, as the autoencoder will simply train on the errors that occor the quanutm hardware. This adaptibility makes quantum autoencoders an incredibly powerful error correcting tool. <bookmark mark='D'/> Running with a simulated p=0.05 bit flip error on each qbit, we get the following optimizer graph",
    "input_data": {
      "input_text": "We need to make a couple of minor modifications to our current training circut to support error correction.  Since we intend to change the data, we need to go back to training using  fidelity instead of the SWAP test. We also need to encode our singular input qbit into a logical codespace, represented by |0_L\u27e9 = |000\u27e9 and |1_L\u27e9 = |111\u27e9. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to arifically induce errors, as the autoencoder will simply train on the errors that occor the quanutm hardware. This adaptibility makes quantum autoencoders an incredibly powerful error correcting tool.  Running with a simulated p=0.05 bit flip error on each qbit, we get the following optimizer graph",
      "service": "gtts"
    },
    "original_audio": "we-need-to-make-a-couple-of-minor-modifications-to-0c59e56e.mp3",
    "word_boundaries": [
      {
        "audio_offset": 400000,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7600000,
        "text_offset": 16,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9400000,
        "text_offset": 18,
        "word_length": 7,
        "text": " couple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12200000,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14600000,
        "text_offset": 28,
        "word_length": 6,
        "text": " minor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19800000,
        "text_offset": 34,
        "word_length": 14,
        "text": " modifications",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26800000,
        "text_offset": 48,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 51,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "text_offset": 55,
        "word_length": 8,
        "text": " current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 63,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39200000,
        "text_offset": 72,
        "word_length": 8,
        "text": " circuit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43800000,
        "text_offset": 80,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 83,
        "word_length": 8,
        "text": " support",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "text_offset": 91,
        "word_length": 7,
        "text": " error.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 98,
        "word_length": 12,
        "text": " Correction.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76200000,
        "text_offset": 110,
        "word_length": 6,
        "text": " Since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77800000,
        "text_offset": 116,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79800000,
        "text_offset": 119,
        "word_length": 7,
        "text": " intend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82800000,
        "text_offset": 126,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "text_offset": 129,
        "word_length": 7,
        "text": " change",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000000,
        "text_offset": 136,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90600000,
        "text_offset": 140,
        "word_length": 6,
        "text": " data,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 146,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100399999,
        "text_offset": 149,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102600000,
        "text_offset": 154,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104600000,
        "text_offset": 157,
        "word_length": 3,
        "text": " go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 160,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 165,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110600000,
        "text_offset": 168,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114200000,
        "text_offset": 177,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 183,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123300000,
        "text_offset": 192,
        "word_length": 8,
        "text": " instead",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129800000,
        "text_offset": 200,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 203,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 207,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 212,
        "word_length": 5,
        "text": " test",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 142000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "text_offset": 220,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 225,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 230,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150200000,
        "text_offset": 233,
        "word_length": 7,
        "text": " encode",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154000000,
        "text_offset": 240,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 244,
        "word_length": 9,
        "text": " singular",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169000000,
        "text_offset": 253,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174600000,
        "text_offset": 259,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 265,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183600000,
        "text_offset": 270,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185400000,
        "text_offset": 272,
        "word_length": 8,
        "text": " logical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 280,
        "word_length": 5,
        "text": " code",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193800000,
        "text_offset": 285,
        "word_length": 7,
        "text": " space.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207800000,
        "text_offset": 292,
        "word_length": 12,
        "text": " Represented",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 304,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215600000,
        "text_offset": 307,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220799999,
        "text_offset": 309,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228000000,
        "text_offset": 320,
        "word_length": 2,
        "text": " L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231400000,
        "text_offset": 322,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 329,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242800000,
        "text_offset": 331,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 335,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252800000,
        "text_offset": 337,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 348,
        "word_length": 2,
        "text": " L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263400000,
        "text_offset": 350,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268400000,
        "text_offset": 357,
        "word_length": 5,
        "text": " 111.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 362,
        "word_length": 9,
        "text": " Finally,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298200000,
        "text_offset": 371,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299400000,
        "text_offset": 374,
        "word_length": 8,
        "text": " include",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304600000,
        "text_offset": 382,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306000000,
        "text_offset": 384,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308200000,
        "text_offset": 390,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311600000,
        "text_offset": 395,
        "word_length": 11,
        "text": " introduces",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317400000,
        "text_offset": 406,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 321800000,
        "text_offset": 413,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 325600000,
        "text_offset": 418,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 328400000,
        "text_offset": 422,
        "word_length": 10,
        "text": " training.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 432,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 441,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349400000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350400000,
        "text_offset": 446,
        "word_length": 6,
        "text": " note,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357000000,
        "text_offset": 452,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358600000,
        "text_offset": 455,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360000000,
        "text_offset": 458,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 361400000,
        "text_offset": 462,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365000000,
        "text_offset": 471,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 368000000,
        "text_offset": 474,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 370600000,
        "text_offset": 479,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374600000,
        "text_offset": 487,
        "word_length": 9,
        "text": " hardware",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 380200000,
        "text_offset": 496,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383400000,
        "text_offset": 499,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386400000,
        "text_offset": 505,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 388000000,
        "text_offset": 510,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 389799999,
        "text_offset": 513,
        "word_length": 13,
        "text": " horrifically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395800000,
        "text_offset": 526,
        "word_length": 7,
        "text": " induce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 399200000,
        "text_offset": 533,
        "word_length": 8,
        "text": " errors.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416000000,
        "text_offset": 541,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 418000000,
        "text_offset": 544,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 419400000,
        "text_offset": 548,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 427000000,
        "text_offset": 560,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 429600000,
        "text_offset": 565,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433800000,
        "text_offset": 572,
        "word_length": 6,
        "text": " train",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 437600000,
        "text_offset": 578,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 439799999,
        "text_offset": 581,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441800000,
        "text_offset": 585,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 444799999,
        "text_offset": 592,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448600000,
        "text_offset": 597,
        "word_length": 6,
        "text": " occur",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 451800000,
        "text_offset": 603,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 454799999,
        "text_offset": 607,
        "word_length": 7,
        "text": " Quenut",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458000000,
        "text_offset": 614,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460400000,
        "text_offset": 616,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 475199999,
        "text_offset": 626,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478800000,
        "text_offset": 631,
        "word_length": 13,
        "text": " adaptability",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 644,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 650,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498200000,
        "text_offset": 658,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506599999,
        "text_offset": 671,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 508000000,
        "text_offset": 674,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512000000,
        "text_offset": 685,
        "word_length": 9,
        "text": " powerful",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519000000,
        "text_offset": 694,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522600000,
        "text_offset": 700,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 528400000,
        "text_offset": 711,
        "word_length": 6,
        "text": " tool.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 717,
        "word_length": 8,
        "text": " Running",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 725,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547400000,
        "text_offset": 730,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 548400000,
        "text_offset": 732,
        "word_length": 10,
        "text": " simulated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 553600000,
        "text_offset": 742,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558400000,
        "text_offset": 744,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563000000,
        "text_offset": 751,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 567000000,
        "text_offset": 753,
        "word_length": 3,
        "text": ".05",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 574800000,
        "text_offset": 756,
        "word_length": 4,
        "text": " bit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 580400000,
        "text_offset": 760,
        "word_length": 5,
        "text": " flip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583600000,
        "text_offset": 765,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 771,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 589000000,
        "text_offset": 774,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593200000,
        "text_offset": 779,
        "word_length": 7,
        "text": " qubit.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602800000,
        "text_offset": 786,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 789,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608600000,
        "text_offset": 793,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 610400000,
        "text_offset": 797,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 615000000,
        "text_offset": 807,
        "word_length": 10,
        "text": " optimizer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 622800000,
        "text_offset": 817,
        "word_length": 7,
        "text": " graph.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We need to make a couple of minor modifications to our current training circuit to support error. Correction. Since we intend to change the data, we need to go back to training using fidelity instead of the swap test we also need to encode our singular input qubit into a logical code space. Represented by 0 underscore L equals 0 and 1 underscore L equals 111. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to horrifically induce errors. As the autoencoder will simply train on the errors that occur the Quenut M hardware. This adaptability makes quantum autoencoders an incredibly powerful error correcting tool. Running with a simulated P equals 0.05 bit flip error on each qubit. We get the following optimizer graph.",
    "final_audio": "we-need-to-make-a-couple-of-minor-modifications-to-0c59e56e.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599200000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632800000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635600000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637200000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640600000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646800000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660100000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667600000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670400000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674800000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 690800000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691800000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695600000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698800000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701800000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704200000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705400000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708600000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721000000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722400000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724400000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754000000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755600000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756800000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760200000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765200000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778400000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780800000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783000000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787600000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801000000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803800000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806400000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811400000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814400000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815800000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818199999,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821200000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825400000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828800000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832600000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850000000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851800000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857800000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859800000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861400000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863400000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 867000000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872000000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880600000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883800000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886200000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890200000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894200000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897200000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900200000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913400000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923000000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924400000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926400000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 929800000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933199999,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 935600000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938600000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 941800000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951600000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956600000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959800000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962200000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964400000,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967200000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969599999,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975400000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993800000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997200000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002600000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1005800000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008400000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1017800000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1020800000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027000000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1039800000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041400000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043199999,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054000000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057200000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058400000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063400000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1066600000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1069800000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072400000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075200000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1082300000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094000000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096200000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097600000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101400000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106000000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121400000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123400000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128200000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1131800000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134200000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138600000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140400000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146000000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1151000000,
        "text_offset": 1602,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1157400000,
        "text_offset": 1610,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1172800000,
        "text_offset": 1617,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1628,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184200000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186000000,
        "text_offset": 1635,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190800000,
        "text_offset": 1643,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1196800000,
        "text_offset": 1652,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1200200000,
        "text_offset": 1656,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1661,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1670,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210200000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212800000,
        "text_offset": 1679,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216400000,
        "text_offset": 1683,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218000000,
        "text_offset": 1688,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232600000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234400000,
        "text_offset": 1700,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236200000,
        "text_offset": 1705,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1239600000,
        "text_offset": 1713,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1241800000,
        "text_offset": 1715,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244200000,
        "text_offset": 1721,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1249800000,
        "text_offset": 1727,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252600000,
        "text_offset": 1730,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1253800000,
        "text_offset": 1734,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1263800000,
        "text_offset": 1741,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1269800000,
        "text_offset": 1747,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270800000,
        "text_offset": 1751,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1272600000,
        "text_offset": 1756,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287600000,
        "text_offset": 1765,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289400000,
        "text_offset": 1768,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290600000,
        "text_offset": 1772,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294000000,
        "text_offset": 1777,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296399999,
        "text_offset": 1780,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1298800000,
        "text_offset": 1784,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1300800000,
        "text_offset": 1787,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1797,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315400000,
        "text_offset": 1804,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1809,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331200000,
        "text_offset": 1821,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1332800000,
        "text_offset": 1827,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334400000,
        "text_offset": 1830,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336600000,
        "text_offset": 1836,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340000000,
        "text_offset": 1839,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345200000,
        "text_offset": 1851,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349199999,
        "text_offset": 1858,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352000000,
        "text_offset": 1863,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354600000,
        "text_offset": 1871,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356800000,
        "text_offset": 1875,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1366399999,
        "text_offset": 1882,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367600000,
        "text_offset": 1885,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369199999,
        "text_offset": 1889,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1374200000,
        "text_offset": 1894,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1377800000,
        "text_offset": 1903,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1379800000,
        "text_offset": 1906,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381800000,
        "text_offset": 1911,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385200000,
        "text_offset": 1919,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387400000,
        "text_offset": 1923,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391600000,
        "text_offset": 1935,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395400000,
        "text_offset": 1941,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398000000,
        "text_offset": 1944,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401000000,
        "text_offset": 1952,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405200000,
        "text_offset": 1954,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1407600000,
        "text_offset": 1957,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409000000,
        "text_offset": 1961,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412200000,
        "text_offset": 1970,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415600000,
        "text_offset": 1975,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1429400000,
        "text_offset": 1979,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1432400000,
        "text_offset": 1985,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436000000,
        "text_offset": 1988,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445600000,
        "text_offset": 1998,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2007,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2011,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2016,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2028,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2032,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2036,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2041,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2044,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2048,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2053,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2063,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455000000,
        "text_offset": 2072,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457400000,
        "text_offset": 2078,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1461600000,
        "text_offset": 2086,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467000000,
        "text_offset": 2091,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471200000,
        "text_offset": 2101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2104,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1475800000,
        "text_offset": 2108,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2116,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1481600000,
        "text_offset": 2118,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1483400000,
        "text_offset": 2122,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1485600000,
        "text_offset": 2126,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1487800000,
        "text_offset": 2131,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1502999999,
        "text_offset": 2144,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504000000,
        "text_offset": 2147,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505600000,
        "text_offset": 2150,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1508600000,
        "text_offset": 2156,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510000000,
        "text_offset": 2161,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512000000,
        "text_offset": 2165,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516399999,
        "text_offset": 2176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1519600000,
        "text_offset": 2179,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521000000,
        "text_offset": 2183,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526000000,
        "text_offset": 2194,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529800000,
        "text_offset": 2199,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1534199999,
        "text_offset": 2207,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537200000,
        "text_offset": 2210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1538400000,
        "text_offset": 2214,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1541399999,
        "text_offset": 2219,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556000000,
        "text_offset": 2229,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1561200000,
        "text_offset": 2238,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567200000,
        "text_offset": 2241,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569400000,
        "text_offset": 2245,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1571399999,
        "text_offset": 2249,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1573600000,
        "text_offset": 2251,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578600000,
        "text_offset": 2262,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1583500000,
        "text_offset": 2267,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1597399999,
        "text_offset": 2278,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1606300000,
        "text_offset": 2283,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. The cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, the cost function is not the same as the cost function. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits! <bookmark mark='A'/> Training goes increadibly smoothly on both Domain Wall and MNIST datasets. <bookmark mark='B'/> So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actualy provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! <bookmark mark='C'/>",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!  Training goes increadibly smoothly on both Domain Wall and MNIST datasets.  So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actualy provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! ",
      "service": "gtts"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-684c9470.mp3",
    "word_boundaries": [
      {
        "audio_offset": 400000,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3800000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8600000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16600000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19800000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22400000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23800000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26400000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28800000,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48200000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199999,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62800000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 95,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73000000,
        "text_offset": 101,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 109,
        "word_length": 9,
        "text": " Training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87800000,
        "text_offset": 118,
        "word_length": 5,
        "text": " goes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 123,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " smoothly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111600000,
        "text_offset": 151,
        "word_length": 7,
        "text": " domain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115000000,
        "text_offset": 158,
        "word_length": 5,
        "text": " wall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 163,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 167,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126000000,
        "text_offset": 173,
        "word_length": 10,
        "text": " datasets.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140000000,
        "text_offset": 183,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141200000,
        "text_offset": 186,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "text_offset": 189,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144800000,
        "text_offset": 194,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 196,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150000000,
        "text_offset": 203,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154900000,
        "text_offset": 211,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163400000,
        "text_offset": 223,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 167200000,
        "text_offset": 231,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170000000,
        "text_offset": 234,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171800000,
        "text_offset": 239,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174400000,
        "text_offset": 242,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175400000,
        "text_offset": 244,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178800000,
        "text_offset": 251,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185300000,
        "text_offset": 261,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203200000,
        "text_offset": 274,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204600000,
        "text_offset": 278,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 281,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211000000,
        "text_offset": 290,
        "word_length": 9,
        "text": " provides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 299,
        "word_length": 12,
        "text": " significant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224800000,
        "text_offset": 311,
        "word_length": 11,
        "text": " advantages",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232200000,
        "text_offset": 322,
        "word_length": 4,
        "text": " due",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 326,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 237200000,
        "text_offset": 329,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 239000000,
        "text_offset": 333,
        "word_length": 10,
        "text": " unitarian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244800000,
        "text_offset": 343,
        "word_length": 7,
        "text": " coder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258200000,
        "text_offset": 350,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259200000,
        "text_offset": 353,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 260600000,
        "text_offset": 357,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 360,
        "word_length": 6,
        "text": " done?",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 366,
        "word_length": 4,
        "text": " No,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 277600000,
        "text_offset": 370,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 278800000,
        "text_offset": 373,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281800000,
        "text_offset": 379,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284800000,
        "text_offset": 384,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286800000,
        "text_offset": 390,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 293200000,
        "text_offset": 401,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 409,
        "word_length": 14,
        "text": " autoencoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on MNIST digits. Training goes incredibly smoothly on both domain wall and MNIST datasets. So we have a simple quantum autoencoder working as well as a simple classical autoencoder. And it actually provides significant advantages due to the unitarian coder. So are we done? No, we still have error correcting quantum autoencoders.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-684c9470.mp3"
  },
  {
    "input_text": "We need to make a couple of minor modifications to our current training circut to support error correction. <bookmark mark='A'/> Since we intend to change the data, we need to go back to training using <bookmark mark='B'/> fidelity instead of the SWAP test. <bookmark mark='C'/>We also need to encode our singular input qbit into a logical codespace, represented by |0_L\u27e9 = |000\u27e9 and |1_L\u27e9 = |111\u27e9. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to arifically induce errors, as the autoencoder will simply train on the errors that occor the quanutm hardware. This adaptibility makes quantum autoencoders an incredibly powerful error correcting tool. <bookmark mark='D'/> Running with a simulated p=0.05 bit flip error on each qbit, we get the following optimizer graph",
    "input_data": {
      "input_text": "We need to make a couple of minor modifications to our current training circut to support error correction.  Since we intend to change the data, we need to go back to training using  fidelity instead of the SWAP test. We also need to encode our singular input qbit into a logical codespace, represented by |0_L\u27e9 = |000\u27e9 and |1_L\u27e9 = |111\u27e9. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to arifically induce errors, as the autoencoder will simply train on the errors that occor the quanutm hardware. This adaptibility makes quantum autoencoders an incredibly powerful error correcting tool.  Running with a simulated p=0.05 bit flip error on each qbit, we get the following optimizer graph",
      "service": "gtts"
    },
    "original_audio": "we-need-to-make-a-couple-of-minor-modifications-to-0c59e56e.mp3",
    "word_boundaries": [
      {
        "audio_offset": 400000,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7600000,
        "text_offset": 16,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9400000,
        "text_offset": 18,
        "word_length": 7,
        "text": " couple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12200000,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14600000,
        "text_offset": 28,
        "word_length": 6,
        "text": " minor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19800000,
        "text_offset": 34,
        "word_length": 14,
        "text": " modifications",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26800000,
        "text_offset": 48,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 51,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "text_offset": 55,
        "word_length": 8,
        "text": " current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 63,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39200000,
        "text_offset": 72,
        "word_length": 8,
        "text": " circuit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43800000,
        "text_offset": 80,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47400000,
        "text_offset": 83,
        "word_length": 8,
        "text": " support",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "text_offset": 91,
        "word_length": 7,
        "text": " error.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 98,
        "word_length": 12,
        "text": " Correction.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76200000,
        "text_offset": 110,
        "word_length": 6,
        "text": " Since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77800000,
        "text_offset": 116,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79800000,
        "text_offset": 119,
        "word_length": 7,
        "text": " intend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82800000,
        "text_offset": 126,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "text_offset": 129,
        "word_length": 7,
        "text": " change",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000000,
        "text_offset": 136,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90600000,
        "text_offset": 140,
        "word_length": 6,
        "text": " data,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 146,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100399999,
        "text_offset": 149,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102600000,
        "text_offset": 154,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104600000,
        "text_offset": 157,
        "word_length": 3,
        "text": " go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 160,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 165,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110600000,
        "text_offset": 168,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114200000,
        "text_offset": 177,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118400000,
        "text_offset": 183,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123300000,
        "text_offset": 192,
        "word_length": 8,
        "text": " instead",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129800000,
        "text_offset": 200,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132400000,
        "text_offset": 203,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 207,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136400000,
        "text_offset": 212,
        "word_length": 5,
        "text": " test",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 142000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "text_offset": 220,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 225,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148400000,
        "text_offset": 230,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150200000,
        "text_offset": 233,
        "word_length": 7,
        "text": " encode",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154000000,
        "text_offset": 240,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 244,
        "word_length": 9,
        "text": " singular",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169000000,
        "text_offset": 253,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174600000,
        "text_offset": 259,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 265,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183600000,
        "text_offset": 270,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185400000,
        "text_offset": 272,
        "word_length": 8,
        "text": " logical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 280,
        "word_length": 5,
        "text": " code",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193800000,
        "text_offset": 285,
        "word_length": 7,
        "text": " space.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207800000,
        "text_offset": 292,
        "word_length": 12,
        "text": " Represented",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 304,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215600000,
        "text_offset": 307,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220799999,
        "text_offset": 309,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228000000,
        "text_offset": 320,
        "word_length": 2,
        "text": " L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231400000,
        "text_offset": 322,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 329,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242800000,
        "text_offset": 331,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249600000,
        "text_offset": 335,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252800000,
        "text_offset": 337,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259600000,
        "text_offset": 348,
        "word_length": 2,
        "text": " L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263400000,
        "text_offset": 350,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268400000,
        "text_offset": 357,
        "word_length": 5,
        "text": " 111.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 362,
        "word_length": 9,
        "text": " Finally,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298200000,
        "text_offset": 371,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299400000,
        "text_offset": 374,
        "word_length": 8,
        "text": " include",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304600000,
        "text_offset": 382,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306000000,
        "text_offset": 384,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308200000,
        "text_offset": 390,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311600000,
        "text_offset": 395,
        "word_length": 11,
        "text": " introduces",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317400000,
        "text_offset": 406,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 321800000,
        "text_offset": 413,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 325600000,
        "text_offset": 418,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 328400000,
        "text_offset": 422,
        "word_length": 10,
        "text": " training.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 432,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347200000,
        "text_offset": 441,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349400000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350400000,
        "text_offset": 446,
        "word_length": 6,
        "text": " note,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357000000,
        "text_offset": 452,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358600000,
        "text_offset": 455,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360000000,
        "text_offset": 458,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 361400000,
        "text_offset": 462,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365000000,
        "text_offset": 471,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 368000000,
        "text_offset": 474,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 370600000,
        "text_offset": 479,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374600000,
        "text_offset": 487,
        "word_length": 9,
        "text": " hardware",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 380200000,
        "text_offset": 496,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383400000,
        "text_offset": 499,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386400000,
        "text_offset": 505,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 388000000,
        "text_offset": 510,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 389799999,
        "text_offset": 513,
        "word_length": 13,
        "text": " horrifically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395800000,
        "text_offset": 526,
        "word_length": 7,
        "text": " induce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 399200000,
        "text_offset": 533,
        "word_length": 8,
        "text": " errors.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416000000,
        "text_offset": 541,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 418000000,
        "text_offset": 544,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 419400000,
        "text_offset": 548,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 427000000,
        "text_offset": 560,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 429600000,
        "text_offset": 565,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433800000,
        "text_offset": 572,
        "word_length": 6,
        "text": " train",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 437600000,
        "text_offset": 578,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 439799999,
        "text_offset": 581,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441800000,
        "text_offset": 585,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 444799999,
        "text_offset": 592,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448600000,
        "text_offset": 597,
        "word_length": 6,
        "text": " occur",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 451800000,
        "text_offset": 603,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 454799999,
        "text_offset": 607,
        "word_length": 7,
        "text": " Quenut",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458000000,
        "text_offset": 614,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460400000,
        "text_offset": 616,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 475199999,
        "text_offset": 626,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478800000,
        "text_offset": 631,
        "word_length": 13,
        "text": " adaptability",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 486800000,
        "text_offset": 644,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 650,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498200000,
        "text_offset": 658,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506599999,
        "text_offset": 671,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 508000000,
        "text_offset": 674,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512000000,
        "text_offset": 685,
        "word_length": 9,
        "text": " powerful",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519000000,
        "text_offset": 694,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522600000,
        "text_offset": 700,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 528400000,
        "text_offset": 711,
        "word_length": 6,
        "text": " tool.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 717,
        "word_length": 8,
        "text": " Running",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 725,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547400000,
        "text_offset": 730,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 548400000,
        "text_offset": 732,
        "word_length": 10,
        "text": " simulated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 553600000,
        "text_offset": 742,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558400000,
        "text_offset": 744,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563000000,
        "text_offset": 751,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 567000000,
        "text_offset": 753,
        "word_length": 3,
        "text": ".05",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 574800000,
        "text_offset": 756,
        "word_length": 4,
        "text": " bit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 580400000,
        "text_offset": 760,
        "word_length": 5,
        "text": " flip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583600000,
        "text_offset": 765,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 771,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 589000000,
        "text_offset": 774,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 593200000,
        "text_offset": 779,
        "word_length": 7,
        "text": " qubit.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602800000,
        "text_offset": 786,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606400000,
        "text_offset": 789,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608600000,
        "text_offset": 793,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 610400000,
        "text_offset": 797,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 615000000,
        "text_offset": 807,
        "word_length": 10,
        "text": " optimizer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 622800000,
        "text_offset": 817,
        "word_length": 7,
        "text": " graph.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We need to make a couple of minor modifications to our current training circuit to support error. Correction. Since we intend to change the data, we need to go back to training using fidelity instead of the swap test we also need to encode our singular input qubit into a logical code space. Represented by 0 underscore L equals 0 and 1 underscore L equals 111. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to horrifically induce errors. As the autoencoder will simply train on the errors that occur the Quenut M hardware. This adaptability makes quantum autoencoders an incredibly powerful error correcting tool. Running with a simulated P equals 0.05 bit flip error on each qubit. We get the following optimizer graph.",
    "final_audio": "we-need-to-make-a-couple-of-minor-modifications-to-0c59e56e.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599200000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632800000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635600000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637200000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640600000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646800000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660100000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667600000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670400000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674800000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 690800000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691800000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695600000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698800000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701800000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704200000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705400000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708600000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721000000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722400000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724400000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754000000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755600000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756800000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760200000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765200000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778400000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780800000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783000000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787600000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801000000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803800000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806400000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811400000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814400000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815800000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818199999,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821200000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825400000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828800000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832600000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850000000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851800000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857800000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859800000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861400000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863400000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 867000000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872000000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880600000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883800000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886200000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890200000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894200000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897200000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900200000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913400000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923000000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924400000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926400000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 929800000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933199999,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 935600000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938600000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 941800000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951600000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956600000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959800000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962200000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964400000,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967200000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969599999,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975400000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993800000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997200000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002600000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1005800000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008400000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1017800000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1020800000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027000000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1039800000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041400000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043199999,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054000000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057200000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058400000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063400000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1066600000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1069800000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072400000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075200000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1082300000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094000000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096200000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097600000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101400000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106000000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121400000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123400000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128200000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1131800000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134200000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138600000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140400000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146000000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1151000000,
        "text_offset": 1602,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1157400000,
        "text_offset": 1610,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1172800000,
        "text_offset": 1617,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1628,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184200000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186000000,
        "text_offset": 1635,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190800000,
        "text_offset": 1643,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1196800000,
        "text_offset": 1652,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1200200000,
        "text_offset": 1656,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1661,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1670,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210200000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212800000,
        "text_offset": 1679,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216400000,
        "text_offset": 1683,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218000000,
        "text_offset": 1688,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232600000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234400000,
        "text_offset": 1700,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236200000,
        "text_offset": 1705,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1239600000,
        "text_offset": 1713,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1241800000,
        "text_offset": 1715,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244200000,
        "text_offset": 1721,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1249800000,
        "text_offset": 1727,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252600000,
        "text_offset": 1730,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1253800000,
        "text_offset": 1734,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1263800000,
        "text_offset": 1741,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1269800000,
        "text_offset": 1747,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270800000,
        "text_offset": 1751,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1272600000,
        "text_offset": 1756,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287600000,
        "text_offset": 1765,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289400000,
        "text_offset": 1768,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290600000,
        "text_offset": 1772,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294000000,
        "text_offset": 1777,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296399999,
        "text_offset": 1780,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1298800000,
        "text_offset": 1784,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1300800000,
        "text_offset": 1787,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1797,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315400000,
        "text_offset": 1804,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1809,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331200000,
        "text_offset": 1821,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1332800000,
        "text_offset": 1827,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334400000,
        "text_offset": 1830,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336600000,
        "text_offset": 1836,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340000000,
        "text_offset": 1839,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345200000,
        "text_offset": 1851,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349199999,
        "text_offset": 1858,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352000000,
        "text_offset": 1863,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354600000,
        "text_offset": 1871,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356800000,
        "text_offset": 1875,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1366399999,
        "text_offset": 1882,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367600000,
        "text_offset": 1885,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369199999,
        "text_offset": 1889,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1374200000,
        "text_offset": 1894,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1377800000,
        "text_offset": 1903,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1379800000,
        "text_offset": 1906,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381800000,
        "text_offset": 1911,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385200000,
        "text_offset": 1919,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387400000,
        "text_offset": 1923,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391600000,
        "text_offset": 1935,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395400000,
        "text_offset": 1941,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398000000,
        "text_offset": 1944,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401000000,
        "text_offset": 1952,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405200000,
        "text_offset": 1954,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1407600000,
        "text_offset": 1957,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409000000,
        "text_offset": 1961,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412200000,
        "text_offset": 1970,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415600000,
        "text_offset": 1975,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1429400000,
        "text_offset": 1979,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1432400000,
        "text_offset": 1985,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436000000,
        "text_offset": 1988,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445600000,
        "text_offset": 1998,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2007,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2011,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2016,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2028,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2032,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2036,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2041,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2044,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2048,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2053,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2063,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455000000,
        "text_offset": 2072,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457400000,
        "text_offset": 2078,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1461600000,
        "text_offset": 2086,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467000000,
        "text_offset": 2091,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471200000,
        "text_offset": 2101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2104,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1475800000,
        "text_offset": 2108,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2116,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1481600000,
        "text_offset": 2118,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1483400000,
        "text_offset": 2122,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1485600000,
        "text_offset": 2126,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1487800000,
        "text_offset": 2131,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1502999999,
        "text_offset": 2144,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504000000,
        "text_offset": 2147,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505600000,
        "text_offset": 2150,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1508600000,
        "text_offset": 2156,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510000000,
        "text_offset": 2161,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512000000,
        "text_offset": 2165,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516399999,
        "text_offset": 2176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1519600000,
        "text_offset": 2179,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521000000,
        "text_offset": 2183,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526000000,
        "text_offset": 2194,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529800000,
        "text_offset": 2199,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1534199999,
        "text_offset": 2207,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537200000,
        "text_offset": 2210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1538400000,
        "text_offset": 2214,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1541399999,
        "text_offset": 2219,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556000000,
        "text_offset": 2229,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1561200000,
        "text_offset": 2238,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567200000,
        "text_offset": 2241,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569400000,
        "text_offset": 2245,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1571399999,
        "text_offset": 2249,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1573600000,
        "text_offset": 2251,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578600000,
        "text_offset": 2262,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1583500000,
        "text_offset": 2267,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1597399999,
        "text_offset": 2278,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1606300000,
        "text_offset": 2283,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. The cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, the cost function is not the same as the cost function. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits! <bookmark mark='A'/> Training goes increadibly smoothly on both Domain Wall and MNIST datasets. <bookmark mark='B'/> So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actualy provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! <bookmark mark='C'/>",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!  Training goes increadibly smoothly on both Domain Wall and MNIST datasets.  So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actualy provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! ",
      "service": "gtts"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-684c9470.mp3",
    "word_boundaries": [
      {
        "audio_offset": 400000,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3800000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8600000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16600000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19800000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22400000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23800000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26400000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28800000,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41600000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48200000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60199999,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62800000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 95,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73000000,
        "text_offset": 101,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 109,
        "word_length": 9,
        "text": " Training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87800000,
        "text_offset": 118,
        "word_length": 5,
        "text": " goes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91199999,
        "text_offset": 123,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " smoothly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111600000,
        "text_offset": 151,
        "word_length": 7,
        "text": " domain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115000000,
        "text_offset": 158,
        "word_length": 5,
        "text": " wall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 163,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121400000,
        "text_offset": 167,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126000000,
        "text_offset": 173,
        "word_length": 10,
        "text": " datasets.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140000000,
        "text_offset": 183,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141200000,
        "text_offset": 186,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "text_offset": 189,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144800000,
        "text_offset": 194,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 196,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150000000,
        "text_offset": 203,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154900000,
        "text_offset": 211,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163400000,
        "text_offset": 223,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 167200000,
        "text_offset": 231,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170000000,
        "text_offset": 234,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171800000,
        "text_offset": 239,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174400000,
        "text_offset": 242,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175400000,
        "text_offset": 244,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178800000,
        "text_offset": 251,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185300000,
        "text_offset": 261,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203200000,
        "text_offset": 274,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204600000,
        "text_offset": 278,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 281,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211000000,
        "text_offset": 290,
        "word_length": 9,
        "text": " provides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 299,
        "word_length": 12,
        "text": " significant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224800000,
        "text_offset": 311,
        "word_length": 11,
        "text": " advantages",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232200000,
        "text_offset": 322,
        "word_length": 4,
        "text": " due",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 326,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 237200000,
        "text_offset": 329,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 239000000,
        "text_offset": 333,
        "word_length": 10,
        "text": " unitarian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244800000,
        "text_offset": 343,
        "word_length": 7,
        "text": " coder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258200000,
        "text_offset": 350,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259200000,
        "text_offset": 353,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 260600000,
        "text_offset": 357,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 360,
        "word_length": 6,
        "text": " done?",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 366,
        "word_length": 4,
        "text": " No,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 277600000,
        "text_offset": 370,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 278800000,
        "text_offset": 373,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281800000,
        "text_offset": 379,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284800000,
        "text_offset": 384,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 286800000,
        "text_offset": 390,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 293200000,
        "text_offset": 401,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299000000,
        "text_offset": 409,
        "word_length": 14,
        "text": " autoencoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on MNIST digits. Training goes incredibly smoothly on both domain wall and MNIST datasets. So we have a simple quantum autoencoder working as well as a simple classical autoencoder. And it actually provides significant advantages due to the unitarian coder. So are we done? No, we still have error correcting quantum autoencoders.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-684c9470.mp3"
  },
  {
    "input_text": "We need to make a couple of minor modifications to our current training circut to support error correction. <bookmark mark='A'/> Since we intend to change the data, we need to go back to training using <bookmark mark='B'/> fidelity instead of the SWAP test. <bookmark mark='C'/>We also need to encode our singular input qbit into a logical codespace, represented by |0_L\u27e9 = |000\u27e9 and |1_L\u27e9 = |111\u27e9. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to arifically induce errors, as the autoencoder will simply train on the errors that occor the quanutm hardware. This adaptibility makes quantum autoencoders an incredibly powerful error correcting tool. <bookmark mark='D'/> Running with a simulated p=0.05 bit flip error on each qbit, we get the following optimizer graph. By simply training on the |0_L\u27e9, |1_L\u27e9, and |+_L\u27e9 inputs, the Quantum Autoencoder learns perfect single qbit bit flip error correction, and can",
    "input_data": {
      "input_text": "We need to make a couple of minor modifications to our current training circut to support error correction.  Since we intend to change the data, we need to go back to training using  fidelity instead of the SWAP test. We also need to encode our singular input qbit into a logical codespace, represented by |0_L\u27e9 = |000\u27e9 and |1_L\u27e9 = |111\u27e9. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to arifically induce errors, as the autoencoder will simply train on the errors that occor the quanutm hardware. This adaptibility makes quantum autoencoders an incredibly powerful error correcting tool.  Running with a simulated p=0.05 bit flip error on each qbit, we get the following optimizer graph. By simply training on the |0_L\u27e9, |1_L\u27e9, and |+_L\u27e9 inputs, the Quantum Autoencoder learns perfect single qbit bit flip error correction, and can",
      "service": "gtts"
    },
    "original_audio": "we-need-to-make-a-couple-of-minor-modifications-to-e31739df.mp3",
    "word_boundaries": [
      {
        "audio_offset": 400000,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4200000,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7600000,
        "text_offset": 16,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9200000,
        "text_offset": 18,
        "word_length": 7,
        "text": " couple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12200000,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14600000,
        "text_offset": 28,
        "word_length": 6,
        "text": " minor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19100000,
        "text_offset": 34,
        "word_length": 14,
        "text": " modifications",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26600000,
        "text_offset": 48,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 51,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 55,
        "word_length": 8,
        "text": " current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35200000,
        "text_offset": 63,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39200000,
        "text_offset": 72,
        "word_length": 8,
        "text": " circuit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "text_offset": 80,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47600000,
        "text_offset": 83,
        "word_length": 8,
        "text": " support",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 91,
        "word_length": 7,
        "text": " error.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 98,
        "word_length": 12,
        "text": " Correction.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76600000,
        "text_offset": 110,
        "word_length": 6,
        "text": " Since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78000000,
        "text_offset": 116,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 119,
        "word_length": 7,
        "text": " intend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83200000,
        "text_offset": 126,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86199999,
        "text_offset": 129,
        "word_length": 7,
        "text": " change",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88800000,
        "text_offset": 136,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 140,
        "word_length": 6,
        "text": " data,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 146,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100600000,
        "text_offset": 149,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102800000,
        "text_offset": 154,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104800000,
        "text_offset": 157,
        "word_length": 3,
        "text": " go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106400000,
        "text_offset": 160,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108600000,
        "text_offset": 165,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 177,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118800000,
        "text_offset": 183,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124000000,
        "text_offset": 192,
        "word_length": 8,
        "text": " instead",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130000000,
        "text_offset": 200,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132600000,
        "text_offset": 203,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133800000,
        "text_offset": 207,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136600000,
        "text_offset": 212,
        "word_length": 5,
        "text": " test",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140600000,
        "text_offset": 217,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143200000,
        "text_offset": 220,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 225,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148600000,
        "text_offset": 230,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150600000,
        "text_offset": 233,
        "word_length": 7,
        "text": " encode",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154400000,
        "text_offset": 240,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166000000,
        "text_offset": 244,
        "word_length": 9,
        "text": " singular",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169400000,
        "text_offset": 253,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175000000,
        "text_offset": 259,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180400000,
        "text_offset": 265,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184000000,
        "text_offset": 270,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185799999,
        "text_offset": 272,
        "word_length": 8,
        "text": " logical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190600000,
        "text_offset": 280,
        "word_length": 5,
        "text": " code",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194400000,
        "text_offset": 285,
        "word_length": 7,
        "text": " space.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207800000,
        "text_offset": 292,
        "word_length": 12,
        "text": " Represented",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 304,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 307,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221400000,
        "text_offset": 309,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228400000,
        "text_offset": 320,
        "word_length": 2,
        "text": " L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231800000,
        "text_offset": 322,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236200000,
        "text_offset": 329,
        "word_length": 2,
        "text": " o",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243000000,
        "text_offset": 331,
        "word_length": 2,
        "text": " o",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246200000,
        "text_offset": 333,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250400000,
        "text_offset": 337,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253400000,
        "text_offset": 339,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 260200000,
        "text_offset": 350,
        "word_length": 2,
        "text": " L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263800000,
        "text_offset": 352,
        "word_length": 8,
        "text": " equals,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270800000,
        "text_offset": 360,
        "word_length": 5,
        "text": " 111.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289800000,
        "text_offset": 365,
        "word_length": 9,
        "text": " Finally,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298600000,
        "text_offset": 374,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300000000,
        "text_offset": 377,
        "word_length": 8,
        "text": " include",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 385,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306600000,
        "text_offset": 387,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 309000000,
        "text_offset": 393,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312200000,
        "text_offset": 398,
        "word_length": 11,
        "text": " introduces",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 318000000,
        "text_offset": 409,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 416,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326200000,
        "text_offset": 421,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 328200000,
        "text_offset": 425,
        "word_length": 10,
        "text": " training.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338399999,
        "text_offset": 435,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347800000,
        "text_offset": 444,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 350000000,
        "text_offset": 447,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 351200000,
        "text_offset": 449,
        "word_length": 6,
        "text": " note,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357800000,
        "text_offset": 455,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359600000,
        "text_offset": 458,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360800000,
        "text_offset": 461,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362000000,
        "text_offset": 465,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365800000,
        "text_offset": 474,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 368800000,
        "text_offset": 477,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 371200000,
        "text_offset": 482,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375400000,
        "text_offset": 490,
        "word_length": 9,
        "text": " hardware",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 380800000,
        "text_offset": 499,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384200000,
        "text_offset": 502,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387200000,
        "text_offset": 508,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 388600000,
        "text_offset": 513,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390400000,
        "text_offset": 516,
        "word_length": 13,
        "text": " horrifically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396400000,
        "text_offset": 529,
        "word_length": 7,
        "text": " induce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400000000,
        "text_offset": 536,
        "word_length": 8,
        "text": " errors.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416400000,
        "text_offset": 544,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 418600000,
        "text_offset": 547,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 419799999,
        "text_offset": 551,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 427600000,
        "text_offset": 563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430000000,
        "text_offset": 568,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 434200000,
        "text_offset": 575,
        "word_length": 6,
        "text": " train",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438000000,
        "text_offset": 581,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440200000,
        "text_offset": 584,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442200000,
        "text_offset": 588,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445000000,
        "text_offset": 595,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 600,
        "word_length": 6,
        "text": " occur",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 452200000,
        "text_offset": 606,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 455600000,
        "text_offset": 610,
        "word_length": 7,
        "text": " Quenut",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458600000,
        "text_offset": 617,
        "word_length": 2,
        "text": " M",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 461000000,
        "text_offset": 619,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 475600000,
        "text_offset": 629,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478700000,
        "text_offset": 634,
        "word_length": 13,
        "text": " adaptability",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487200000,
        "text_offset": 647,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490800000,
        "text_offset": 653,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498500000,
        "text_offset": 661,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 507000000,
        "text_offset": 674,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 508400000,
        "text_offset": 677,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512800000,
        "text_offset": 688,
        "word_length": 9,
        "text": " powerful",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519600000,
        "text_offset": 697,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 523200000,
        "text_offset": 703,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529000000,
        "text_offset": 714,
        "word_length": 6,
        "text": " tool.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542600000,
        "text_offset": 720,
        "word_length": 8,
        "text": " Running",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545400000,
        "text_offset": 728,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 547800000,
        "text_offset": 733,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549000000,
        "text_offset": 735,
        "word_length": 10,
        "text": " simulated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 554200000,
        "text_offset": 745,
        "word_length": 2,
        "text": " P",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 558800000,
        "text_offset": 747,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563400000,
        "text_offset": 754,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 567600000,
        "text_offset": 756,
        "word_length": 3,
        "text": ".05",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 575400000,
        "text_offset": 759,
        "word_length": 4,
        "text": " bit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 580800000,
        "text_offset": 763,
        "word_length": 5,
        "text": " flip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 584000000,
        "text_offset": 768,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588800000,
        "text_offset": 774,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 590200000,
        "text_offset": 777,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 594000000,
        "text_offset": 782,
        "word_length": 7,
        "text": " qubit.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 605600000,
        "text_offset": 789,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606800000,
        "text_offset": 792,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 609000000,
        "text_offset": 796,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 610800000,
        "text_offset": 800,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 615600000,
        "text_offset": 810,
        "word_length": 10,
        "text": " optimizer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 623200000,
        "text_offset": 820,
        "word_length": 7,
        "text": " graph.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 827,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635400000,
        "text_offset": 830,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 639800000,
        "text_offset": 837,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644599999,
        "text_offset": 846,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 647000000,
        "text_offset": 849,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 648199999,
        "text_offset": 853,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 652200000,
        "text_offset": 855,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 659200000,
        "text_offset": 866,
        "word_length": 3,
        "text": " L,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 668600000,
        "text_offset": 869,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 671000000,
        "text_offset": 871,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677400000,
        "text_offset": 882,
        "word_length": 3,
        "text": " L,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 685000000,
        "text_offset": 885,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 686800000,
        "text_offset": 889,
        "word_length": 5,
        "text": " plus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 689599999,
        "text_offset": 894,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 697200000,
        "text_offset": 905,
        "word_length": 3,
        "text": " L,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 706400000,
        "text_offset": 908,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 717200000,
        "text_offset": 916,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 718400000,
        "text_offset": 920,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721800000,
        "text_offset": 928,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 731200000,
        "text_offset": 940,
        "word_length": 7,
        "text": " learns",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 734400000,
        "text_offset": 947,
        "word_length": 8,
        "text": " perfect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 739599999,
        "text_offset": 955,
        "word_length": 7,
        "text": " single",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 744599999,
        "text_offset": 962,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 749800000,
        "text_offset": 968,
        "word_length": 4,
        "text": " bit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 751800000,
        "text_offset": 972,
        "word_length": 5,
        "text": " flip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754800000,
        "text_offset": 977,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 757800000,
        "text_offset": 983,
        "word_length": 11,
        "text": " correction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 763800000,
        "text_offset": 994,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 772400000,
        "text_offset": 998,
        "word_length": 7,
        "text": " can...",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We need to make a couple of minor modifications to our current training circuit to support error. Correction. Since we intend to change the data, we need to go back to training using fidelity instead of the swap test we also need to encode our singular input qubit into a logical code space. Represented by 0 underscore L equals o o and 1 underscore L equals, 111. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to horrifically induce errors. As the autoencoder will simply train on the errors that occur the Quenut M hardware. This adaptability makes quantum autoencoders an incredibly powerful error correcting tool. Running with a simulated P equals 0.05 bit flip error on each qubit. We get the following optimizer graph. By simply training on the 0 underscore L, 1 underscore L, and plus underscore L, inputs. The quantum autoencoder learns perfect single qubit bit flip error correction and can...",
    "final_audio": "we-need-to-make-a-couple-of-minor-modifications-to-e31739df.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "service": "gtts"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-6f71af28.mp3",
    "word_boundaries": [
      {
        "audio_offset": 1600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2600000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4400000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5800000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16800000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24400000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30400000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders."
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "service": "gtts"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3",
    "word_boundaries": [
      {
        "audio_offset": 800000,
        "text_offset": 0,
        "word_length": 6,
        "text": " First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2800000,
        "text_offset": 6,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7200000,
        "text_offset": 12,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10400000,
        "text_offset": 19,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13600000,
        "text_offset": 23,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17800000,
        "text_offset": 32,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21400000,
        "text_offset": 35,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23400000,
        "text_offset": 37,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35400000,
        "text_offset": 59,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38200000,
        "text_offset": 62,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43600000,
        "text_offset": 73,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 77,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "text_offset": 88,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 92,
        "word_length": 9,
        "text": " turning.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "text_offset": 101,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69400000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101600000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 151,
        "word_length": 7,
        "text": " neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106199999,
        "text_offset": 158,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 167,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115200000,
        "text_offset": 170,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117200000,
        "text_offset": 176,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119200000,
        "text_offset": 180,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122400000,
        "text_offset": 188,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126199999,
        "text_offset": 191,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 202,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 209,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 213,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155100000,
        "text_offset": 220,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165000000,
        "text_offset": 233,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 238,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 241,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169600000,
        "text_offset": 246,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170799999,
        "text_offset": 248,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173800000,
        "text_offset": 254,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177200000,
        "text_offset": 261,
        "word_length": 7,
        "text": " layer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 268,
        "word_length": 7,
        "text": " Called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 275,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192600000,
        "text_offset": 279,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195600000,
        "text_offset": 286,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207200000,
        "text_offset": 293,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208800000,
        "text_offset": 299,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212800000,
        "text_offset": 306,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216200000,
        "text_offset": 310,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218200000,
        "text_offset": 312,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221600000,
        "text_offset": 320,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229800000,
        "text_offset": 335,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 338,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 342,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 245400000,
        "text_offset": 349,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247200000,
        "text_offset": 354,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 360,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 364,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 368,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259400000,
        "text_offset": 377,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 381,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 389,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 393,
        "word_length": 9,
        "text": " decoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285200000,
        "text_offset": 402,
        "word_length": 8,
        "text": " Turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 285800000,
        "text_offset": 410,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287800000,
        "text_offset": 414,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 290800000,
        "text_offset": 421,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295400000,
        "text_offset": 427,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298000000,
        "text_offset": 430,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300200000,
        "text_offset": 432,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305500000,
        "text_offset": 443,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314000000,
        "text_offset": 458,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 461,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317800000,
        "text_offset": 465,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322200000,
        "text_offset": 474,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 483,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 348300000,
        "text_offset": 492,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357200000,
        "text_offset": 505,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358800000,
        "text_offset": 509,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 512,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364799999,
        "text_offset": 517,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366000000,
        "text_offset": 521,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373400000,
        "text_offset": 534,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 544,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384400000,
        "text_offset": 548,
        "word_length": 13,
        "text": " compression.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 561,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397800000,
        "text_offset": 564,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 401599999,
        "text_offset": 573,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 404200000,
        "text_offset": 577,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 583,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410200000,
        "text_offset": 586,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 593,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 598,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 605,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425200000,
        "text_offset": 610,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 428000000,
        "text_offset": 615,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 431000000,
        "text_offset": 621,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First let's review the concepts of a classical autoencoder to understand the motivation for turning. It quantum. The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer. Called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder. Turning the latent space is a compressed representation of the original content. Further, autoencoders can be used for simultaneous denoising and compression. By training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-3f35b95f.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are compression of data are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "service": "gtts"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29600000,
        "text_offset": 43,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32599999,
        "text_offset": 46,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "text_offset": 58,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40800000,
        "text_offset": 61,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "text_offset": 66,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 70,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 82,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 90,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 95,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63200000,
        "text_offset": 98,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 104,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82400000,
        "text_offset": 112,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83800000,
        "text_offset": 116,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86600000,
        "text_offset": 122,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "text_offset": 134,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107600000,
        "text_offset": 147,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109400000,
        "text_offset": 151,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112800000,
        "text_offset": 157,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 162,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 165,
        "word_length": 6,
        "text": " once.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 171,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130399999,
        "text_offset": 175,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 185,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137000000,
        "text_offset": 189,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 191,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141400000,
        "text_offset": 196,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 204,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 217,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156000000,
        "text_offset": 220,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165600000,
        "text_offset": 227,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 229,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 234,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 237,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175799999,
        "text_offset": 248,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179000000,
        "text_offset": 253,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187000000,
        "text_offset": 266,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190200000,
        "text_offset": 269,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191600000,
        "text_offset": 273,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196200000,
        "text_offset": 284,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202200000,
        "text_offset": 287,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 297,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209200000,
        "text_offset": 300,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213200000,
        "text_offset": 308,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 321,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233000000,
        "text_offset": 324,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 326,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235799999,
        "text_offset": 331,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238600000,
        "text_offset": 335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 338,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242399999,
        "text_offset": 344,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248400000,
        "text_offset": 355,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 360,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 363,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256000000,
        "text_offset": 367,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262200000,
        "text_offset": 380,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 264800000,
        "text_offset": 384,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268800000,
        "text_offset": 392,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 405,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287600000,
        "text_offset": 411,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289200000,
        "text_offset": 415,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291800000,
        "text_offset": 421,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 294400000,
        "text_offset": 425,
        "word_length": 6,
        "text": " steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300400000,
        "text_offset": 431,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301600000,
        "text_offset": 435,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305000000,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307200000,
        "text_offset": 446,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311400000,
        "text_offset": 453,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 466,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327400000,
        "text_offset": 470,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 478,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342400000,
        "text_offset": 484,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 343600000,
        "text_offset": 488,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347000000,
        "text_offset": 493,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359200000,
        "text_offset": 506,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 510,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 362400000,
        "text_offset": 514,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 374800000,
        "text_offset": 525,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 376000000,
        "text_offset": 528,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 379600000,
        "text_offset": 536,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 382800000,
        "text_offset": 540,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385800000,
        "text_offset": 545,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387800000,
        "text_offset": 548,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391000000,
        "text_offset": 554,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395000000,
        "text_offset": 561,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396800000,
        "text_offset": 564,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 569,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 400600000,
        "text_offset": 571,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403200000,
        "text_offset": 579,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407800000,
        "text_offset": 587,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422800000,
        "text_offset": 593,
        "word_length": 7,
        "text": " Neural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426200000,
        "text_offset": 600,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433400000,
        "text_offset": 609,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435600000,
        "text_offset": 614,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 617,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 622,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446200000,
        "text_offset": 630,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448800000,
        "text_offset": 634,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450600000,
        "text_offset": 638,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453000000,
        "text_offset": 646,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456000000,
        "text_offset": 651,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 654,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 459000000,
        "text_offset": 658,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 462600000,
        "text_offset": 666,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 478200000,
        "text_offset": 672,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 675,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481800000,
        "text_offset": 680,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 483400000,
        "text_offset": 683,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487600000,
        "text_offset": 692,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490200000,
        "text_offset": 696,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 702,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496200000,
        "text_offset": 705,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 498800000,
        "text_offset": 712,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 506800000,
        "text_offset": 727,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 512400000,
        "text_offset": 732,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515200000,
        "text_offset": 740,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 518000000,
        "text_offset": 744,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 522200000,
        "text_offset": 751,
        "word_length": 9,
        "text": " provide.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537800000,
        "text_offset": 760,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539800000,
        "text_offset": 766,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542200000,
        "text_offset": 770,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 543800000,
        "text_offset": 773,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 552200000,
        "text_offset": 788,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556500000,
        "text_offset": 790,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564000000,
        "text_offset": 804,
        "word_length": 2,
        "text": " N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565600000,
        "text_offset": 806,
        "word_length": 7,
        "text": "-cubate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 571000000,
        "text_offset": 813,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576200000,
        "text_offset": 821,
        "word_length": 6,
        "text": " gate.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 585200000,
        "text_offset": 827,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 830,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588400000,
        "text_offset": 835,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 599200000,
        "text_offset": 844,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600600000,
        "text_offset": 847,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 602000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 858,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608800000,
        "text_offset": 861,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611100000,
        "text_offset": 865,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618600000,
        "text_offset": 879,
        "word_length": 7,
        "text": " basis.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632800000,
        "text_offset": 886,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 634000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635600000,
        "text_offset": 892,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637200000,
        "text_offset": 896,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 640600000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 907,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 646800000,
        "text_offset": 914,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649600000,
        "text_offset": 917,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 928,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 660100000,
        "text_offset": 931,
        "word_length": 15,
        "text": " parameterizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667600000,
        "text_offset": 946,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670400000,
        "text_offset": 951,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674800000,
        "text_offset": 960,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 690800000,
        "text_offset": 967,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 691800000,
        "text_offset": 970,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695600000,
        "text_offset": 979,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698800000,
        "text_offset": 983,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701800000,
        "text_offset": 988,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704200000,
        "text_offset": 991,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705400000,
        "text_offset": 995,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708600000,
        "text_offset": 1002,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 721000000,
        "text_offset": 1009,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 722400000,
        "text_offset": 1012,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724400000,
        "text_offset": 1016,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 726600000,
        "text_offset": 1021,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 737700000,
        "text_offset": 1025,
        "word_length": 7,
        "text": " QBITS.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 1032,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 1036,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754000000,
        "text_offset": 1039,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755600000,
        "text_offset": 1044,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 756800000,
        "text_offset": 1046,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 760200000,
        "text_offset": 1054,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 765200000,
        "text_offset": 1062,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 776800000,
        "text_offset": 1068,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778400000,
        "text_offset": 1071,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780800000,
        "text_offset": 1076,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 783000000,
        "text_offset": 1080,
        "word_length": 10,
        "text": " backwards",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 787600000,
        "text_offset": 1090,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801000000,
        "text_offset": 1096,
        "word_length": 8,
        "text": " Finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803800000,
        "text_offset": 1104,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 806400000,
        "text_offset": 1108,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 811400000,
        "text_offset": 1119,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 814400000,
        "text_offset": 1122,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 815800000,
        "text_offset": 1126,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 818199999,
        "text_offset": 1134,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 821200000,
        "text_offset": 1139,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825400000,
        "text_offset": 1147,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 828800000,
        "text_offset": 1150,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 830600000,
        "text_offset": 1152,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 832600000,
        "text_offset": 1157,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 849200000,
        "text_offset": 1167,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 850000000,
        "text_offset": 1171,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851800000,
        "text_offset": 1176,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 857800000,
        "text_offset": 1185,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 859800000,
        "text_offset": 1190,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 861400000,
        "text_offset": 1193,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 863400000,
        "text_offset": 1197,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 867000000,
        "text_offset": 1205,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 872000000,
        "text_offset": 1214,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1222,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 880600000,
        "text_offset": 1226,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 883800000,
        "text_offset": 1232,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886200000,
        "text_offset": 1236,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 890200000,
        "text_offset": 1243,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894200000,
        "text_offset": 1250,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 897200000,
        "text_offset": 1254,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 900200000,
        "text_offset": 1263,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 913400000,
        "text_offset": 1269,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 923000000,
        "text_offset": 1278,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 924400000,
        "text_offset": 1281,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 926400000,
        "text_offset": 1285,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 929800000,
        "text_offset": 1294,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 933199999,
        "text_offset": 1298,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 935600000,
        "text_offset": 1303,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 938600000,
        "text_offset": 1308,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 941800000,
        "text_offset": 1313,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1324,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951600000,
        "text_offset": 1327,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956600000,
        "text_offset": 1335,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959800000,
        "text_offset": 1338,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 962200000,
        "text_offset": 1343,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 964400000,
        "text_offset": 1347,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 967200000,
        "text_offset": 1354,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 969599999,
        "text_offset": 1357,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 975400000,
        "text_offset": 1367,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993800000,
        "text_offset": 1379,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1382,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 997200000,
        "text_offset": 1386,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1000000000,
        "text_offset": 1390,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1002600000,
        "text_offset": 1394,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1005800000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1008400000,
        "text_offset": 1405,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1010200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014599999,
        "text_offset": 1417,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1017800000,
        "text_offset": 1423,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1020800000,
        "text_offset": 1426,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1430,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027000000,
        "text_offset": 1438,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1039800000,
        "text_offset": 1445,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041400000,
        "text_offset": 1448,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1043199999,
        "text_offset": 1453,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1054000000,
        "text_offset": 1463,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1057200000,
        "text_offset": 1466,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058400000,
        "text_offset": 1470,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1063400000,
        "text_offset": 1478,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1066600000,
        "text_offset": 1484,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1069800000,
        "text_offset": 1490,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1072400000,
        "text_offset": 1494,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075200000,
        "text_offset": 1501,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1082300000,
        "text_offset": 1505,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1091200000,
        "text_offset": 1511,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1094000000,
        "text_offset": 1517,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096200000,
        "text_offset": 1520,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1097600000,
        "text_offset": 1524,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1101400000,
        "text_offset": 1526,
        "word_length": 8,
        "text": " greater",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106000000,
        "text_offset": 1534,
        "word_length": 6,
        "text": " than,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120000000,
        "text_offset": 1540,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1121400000,
        "text_offset": 1545,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123400000,
        "text_offset": 1549,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1128200000,
        "text_offset": 1557,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1131800000,
        "text_offset": 1563,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1134200000,
        "text_offset": 1568,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136200000,
        "text_offset": 1571,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138600000,
        "text_offset": 1576,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140400000,
        "text_offset": 1579,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1146000000,
        "text_offset": 1589,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1149000000,
        "text_offset": 1598,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1151000000,
        "text_offset": 1602,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1157400000,
        "text_offset": 1610,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1172800000,
        "text_offset": 1617,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1182800000,
        "text_offset": 1628,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184200000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1186000000,
        "text_offset": 1635,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1190800000,
        "text_offset": 1643,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1196800000,
        "text_offset": 1652,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1200200000,
        "text_offset": 1656,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1204000000,
        "text_offset": 1661,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1670,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210200000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212800000,
        "text_offset": 1679,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1216400000,
        "text_offset": 1683,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1218000000,
        "text_offset": 1688,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1232600000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1234400000,
        "text_offset": 1700,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1236200000,
        "text_offset": 1705,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1239600000,
        "text_offset": 1713,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1241800000,
        "text_offset": 1715,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1244200000,
        "text_offset": 1721,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1249800000,
        "text_offset": 1727,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252600000,
        "text_offset": 1730,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1253800000,
        "text_offset": 1734,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1263800000,
        "text_offset": 1741,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1269800000,
        "text_offset": 1747,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1270800000,
        "text_offset": 1751,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1272600000,
        "text_offset": 1756,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287600000,
        "text_offset": 1765,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289400000,
        "text_offset": 1768,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1290600000,
        "text_offset": 1772,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294000000,
        "text_offset": 1777,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1296399999,
        "text_offset": 1780,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1298800000,
        "text_offset": 1784,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1300800000,
        "text_offset": 1787,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1312200000,
        "text_offset": 1797,
        "word_length": 7,
        "text": " Rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1315400000,
        "text_offset": 1804,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1318400000,
        "text_offset": 1809,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1331200000,
        "text_offset": 1821,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1332800000,
        "text_offset": 1827,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334400000,
        "text_offset": 1830,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336600000,
        "text_offset": 1836,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340000000,
        "text_offset": 1839,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1345200000,
        "text_offset": 1851,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1349199999,
        "text_offset": 1858,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1352000000,
        "text_offset": 1863,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1354600000,
        "text_offset": 1871,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356800000,
        "text_offset": 1875,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1366399999,
        "text_offset": 1882,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1367600000,
        "text_offset": 1885,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1369199999,
        "text_offset": 1889,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1374200000,
        "text_offset": 1894,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1377800000,
        "text_offset": 1903,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1379800000,
        "text_offset": 1906,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381800000,
        "text_offset": 1911,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1385200000,
        "text_offset": 1919,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1387400000,
        "text_offset": 1923,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1391600000,
        "text_offset": 1935,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395400000,
        "text_offset": 1941,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1398000000,
        "text_offset": 1944,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1401000000,
        "text_offset": 1952,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1405200000,
        "text_offset": 1954,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1407600000,
        "text_offset": 1957,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1409000000,
        "text_offset": 1961,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1412200000,
        "text_offset": 1970,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415600000,
        "text_offset": 1975,
        "word_length": 4,
        "text": " as.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1429400000,
        "text_offset": 1979,
        "word_length": 6,
        "text": " Often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1432400000,
        "text_offset": 1985,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1436000000,
        "text_offset": 1988,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445600000,
        "text_offset": 1998,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2007,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2011,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2016,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2025,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2028,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2032,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2036,
        "word_length": 5,
        "text": " same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2041,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2044,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2048,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449000000,
        "text_offset": 2053,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1449199999,
        "text_offset": 2063,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1455000000,
        "text_offset": 2072,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457400000,
        "text_offset": 2078,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1461600000,
        "text_offset": 2086,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1467000000,
        "text_offset": 2091,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1471200000,
        "text_offset": 2101,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2104,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1475800000,
        "text_offset": 2108,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2116,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1481600000,
        "text_offset": 2118,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1483400000,
        "text_offset": 2122,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1485600000,
        "text_offset": 2126,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1487800000,
        "text_offset": 2131,
        "word_length": 13,
        "text": " propagation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1502999999,
        "text_offset": 2144,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504000000,
        "text_offset": 2147,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505600000,
        "text_offset": 2150,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1508600000,
        "text_offset": 2156,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1510000000,
        "text_offset": 2161,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1512000000,
        "text_offset": 2165,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516399999,
        "text_offset": 2176,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1519600000,
        "text_offset": 2179,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521000000,
        "text_offset": 2183,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1526000000,
        "text_offset": 2194,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529800000,
        "text_offset": 2199,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1534199999,
        "text_offset": 2207,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1537200000,
        "text_offset": 2210,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1538400000,
        "text_offset": 2214,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1541399999,
        "text_offset": 2219,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1556000000,
        "text_offset": 2229,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1561200000,
        "text_offset": 2238,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567200000,
        "text_offset": 2241,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569400000,
        "text_offset": 2245,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1571399999,
        "text_offset": 2249,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1573600000,
        "text_offset": 2251,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578600000,
        "text_offset": 2262,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1583500000,
        "text_offset": 2267,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1597399999,
        "text_offset": 2278,
        "word_length": 5,
        "text": " Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1606300000,
        "text_offset": 2283,
        "word_length": 8,
        "text": " COBYLA.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges or compression of data are efficiently storing data in fewer qubits. And error correcting. Autoencoders can solve both at once. And therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder. So I will try to leave references down on the bottom right for further exploration. There are three key steps for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide. Which can be achieved using a parameterized N-cubate unitary gate. In this example, we will focus on the computational basis. So we can reduce the number of parameters by parameterizing with rotation gates. To decrease the size of our latent space, we can chop off QBITS. Now we have a working forward pass. We need our backwards pass. Finding the derivative of the weights with respect to a cost function. The cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two QBITS equal to the 0 greater than, then the decoder block will be able to perfectly recreate the initial state. Therefore, we can greatly simplify the cost function by using the swap test. Which will measure a lower value if the bottom QBITS are more similar. It can also be run in hardware. Rather than simulation, since it works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure 0 on the training data as. Often as possible. However, the cost function is not the same as the cost function. However, these quantum cost functions do not provide a way for back propagation. So we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer. Like COBYLA.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-fe6347fc.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits! <bookmark mark='A'/> Training goes incredibly smoothly on both Domain Wall and MNIST datasets. <bookmark mark='B'/> So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actually provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! <bookmark mark='C'/>",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!  Training goes incredibly smoothly on both Domain Wall and MNIST datasets.  So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actually provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! ",
      "service": "gtts"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-c30c17ff.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3800000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9100000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16600000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19800000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22400000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23800000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26400000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28600000,
        "text_offset": 51,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40400000,
        "text_offset": 57,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41800000,
        "text_offset": 61,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48200000,
        "text_offset": 74,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59800000,
        "text_offset": 80,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62800000,
        "text_offset": 86,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64400000,
        "text_offset": 90,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66200000,
        "text_offset": 93,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67800000,
        "text_offset": 96,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73000000,
        "text_offset": 102,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87000000,
        "text_offset": 110,
        "word_length": 9,
        "text": " Training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000000,
        "text_offset": 119,
        "word_length": 5,
        "text": " goes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "text_offset": 124,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96199999,
        "text_offset": 135,
        "word_length": 9,
        "text": " smoothly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103400000,
        "text_offset": 144,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106400000,
        "text_offset": 147,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109800000,
        "text_offset": 152,
        "word_length": 7,
        "text": " domain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113200000,
        "text_offset": 159,
        "word_length": 5,
        "text": " wall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116600000,
        "text_offset": 164,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119600000,
        "text_offset": 168,
        "word_length": 6,
        "text": " MNIST",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124200000,
        "text_offset": 174,
        "word_length": 10,
        "text": " datasets.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138000000,
        "text_offset": 184,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139200000,
        "text_offset": 187,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141000000,
        "text_offset": 190,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 142800000,
        "text_offset": 195,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144400000,
        "text_offset": 197,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148000000,
        "text_offset": 204,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153400000,
        "text_offset": 212,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 161400000,
        "text_offset": 224,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165200000,
        "text_offset": 232,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168000000,
        "text_offset": 235,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169800000,
        "text_offset": 240,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172399999,
        "text_offset": 243,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173400000,
        "text_offset": 245,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 252,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183600000,
        "text_offset": 262,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 201600000,
        "text_offset": 275,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202600000,
        "text_offset": 279,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203800000,
        "text_offset": 282,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207600000,
        "text_offset": 291,
        "word_length": 9,
        "text": " provides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212399999,
        "text_offset": 300,
        "word_length": 12,
        "text": " significant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220600000,
        "text_offset": 312,
        "word_length": 11,
        "text": " advantages",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228200000,
        "text_offset": 323,
        "word_length": 4,
        "text": " due",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232000000,
        "text_offset": 327,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233200000,
        "text_offset": 330,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235000000,
        "text_offset": 334,
        "word_length": 10,
        "text": " unitarian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 241000000,
        "text_offset": 344,
        "word_length": 7,
        "text": " coder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254000000,
        "text_offset": 351,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255000000,
        "text_offset": 354,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256600000,
        "text_offset": 358,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 258200000,
        "text_offset": 361,
        "word_length": 6,
        "text": " done?",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 267600000,
        "text_offset": 367,
        "word_length": 4,
        "text": " So,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 273400000,
        "text_offset": 371,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 274800000,
        "text_offset": 374,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 277800000,
        "text_offset": 380,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 280400000,
        "text_offset": 385,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282600000,
        "text_offset": 391,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289000000,
        "text_offset": 402,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295000000,
        "text_offset": 410,
        "word_length": 14,
        "text": " autoencoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits. Training goes incredibly smoothly on both domain wall and MNIST datasets. So we have a simple quantum autoencoder working as well as a simple classical autoencoder. And it actually provides significant advantages due to the unitarian coder. So are we done? So, we still have error correcting quantum autoencoders.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-c30c17ff.mp3"
  },
  {
    "input_text": "We need to make a couple of minor modifications to our current training circut to support error correction. <bookmark mark='A'/> Since we intend to change the data, we need to go back to training using <bookmark mark='B'/> fidelity instead of the SWAP test. <bookmark mark='C'/>We also need to encode our singular input qbit into a logical codespace, represented by |0_L\u27e9 = |000\u27e9 and |1_L\u27e9 = |111\u27e9. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to arifically induce errors, as the autoencoder will simply train on the errors that occur the quantum hardware. This adaptibility makes quantum autoencoders an incredibly powerful error correcting tool. <bookmark mark='D'/> Running with a simulated p=0.05 bit flip error on each qbit, we get the following optimizer graph. By simply training on the |0_L\u27e9, |1_L\u27e9, and |+_L\u27e9 inputs, the Quantum Autoencoder learns perfect single qbit bit flip error correction, while still recovering the input state with when no errors occur. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "We need to make a couple of minor modifications to our current training circut to support error correction.  Since we intend to change the data, we need to go back to training using  fidelity instead of the SWAP test. We also need to encode our singular input qbit into a logical codespace, represented by |0_L\u27e9 = |000\u27e9 and |1_L\u27e9 = |111\u27e9. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to arifically induce errors, as the autoencoder will simply train on the errors that occur the quantum hardware. This adaptibility makes quantum autoencoders an incredibly powerful error correcting tool.  Running with a simulated p=0.05 bit flip error on each qbit, we get the following optimizer graph. By simply training on the |0_L\u27e9, |1_L\u27e9, and |+_L\u27e9 inputs, the Quantum Autoencoder learns perfect single qbit bit flip error correction, while still recovering the input state with when no errors occur. ",
      "service": "gtts"
    },
    "original_audio": "we-need-to-make-a-couple-of-minor-modifications-to-dea51bc9.mp3",
    "word_boundaries": [
      {
        "audio_offset": 400000,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1800000,
        "text_offset": 3,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4200000,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "text_offset": 11,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7600000,
        "text_offset": 16,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9200000,
        "text_offset": 18,
        "word_length": 7,
        "text": " couple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12200000,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14600000,
        "text_offset": 28,
        "word_length": 6,
        "text": " minor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19600000,
        "text_offset": 34,
        "word_length": 14,
        "text": " modifications",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26600000,
        "text_offset": 48,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 51,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 55,
        "word_length": 8,
        "text": " current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35200000,
        "text_offset": 63,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39200000,
        "text_offset": 72,
        "word_length": 8,
        "text": " circuit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43800000,
        "text_offset": 80,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47600000,
        "text_offset": 83,
        "word_length": 8,
        "text": " support",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50800000,
        "text_offset": 91,
        "word_length": 7,
        "text": " error.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "text_offset": 98,
        "word_length": 12,
        "text": " Correction.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76600000,
        "text_offset": 110,
        "word_length": 6,
        "text": " Since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78000000,
        "text_offset": 116,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "text_offset": 119,
        "word_length": 7,
        "text": " intend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83200000,
        "text_offset": 126,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85600000,
        "text_offset": 129,
        "word_length": 7,
        "text": " change",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88600000,
        "text_offset": 136,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90800000,
        "text_offset": 140,
        "word_length": 6,
        "text": " data,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99000000,
        "text_offset": 146,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100600000,
        "text_offset": 149,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102800000,
        "text_offset": 154,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104800000,
        "text_offset": 157,
        "word_length": 3,
        "text": " go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106400000,
        "text_offset": 160,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108600000,
        "text_offset": 165,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110800000,
        "text_offset": 168,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 177,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118800000,
        "text_offset": 183,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124000000,
        "text_offset": 192,
        "word_length": 8,
        "text": " instead",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130000000,
        "text_offset": 200,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132600000,
        "text_offset": 203,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133800000,
        "text_offset": 207,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136600000,
        "text_offset": 212,
        "word_length": 5,
        "text": " test",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140600000,
        "text_offset": 217,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143200000,
        "text_offset": 220,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 225,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148600000,
        "text_offset": 230,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150600000,
        "text_offset": 233,
        "word_length": 7,
        "text": " encode",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154400000,
        "text_offset": 240,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166000000,
        "text_offset": 244,
        "word_length": 9,
        "text": " singular",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169400000,
        "text_offset": 253,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174800000,
        "text_offset": 259,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180400000,
        "text_offset": 265,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183800000,
        "text_offset": 270,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185600000,
        "text_offset": 272,
        "word_length": 8,
        "text": " logical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 280,
        "word_length": 5,
        "text": " code",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 285,
        "word_length": 7,
        "text": " space.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 208000000,
        "text_offset": 292,
        "word_length": 12,
        "text": " Represented",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213000000,
        "text_offset": 304,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216000000,
        "text_offset": 307,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221200000,
        "text_offset": 309,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228200000,
        "text_offset": 320,
        "word_length": 2,
        "text": " L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231600000,
        "text_offset": 322,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236000000,
        "text_offset": 329,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242800000,
        "text_offset": 331,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 335,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253200000,
        "text_offset": 337,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 260000000,
        "text_offset": 348,
        "word_length": 2,
        "text": " L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263600000,
        "text_offset": 350,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268600000,
        "text_offset": 357,
        "word_length": 5,
        "text": " 111.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 289800000,
        "text_offset": 362,
        "word_length": 9,
        "text": " Finally,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 298400000,
        "text_offset": 371,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299600000,
        "text_offset": 374,
        "word_length": 8,
        "text": " include",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 304800000,
        "text_offset": 382,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 384,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308600000,
        "text_offset": 390,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 312000000,
        "text_offset": 395,
        "word_length": 11,
        "text": " introduces",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317600000,
        "text_offset": 406,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322000000,
        "text_offset": 413,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 418,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 328000000,
        "text_offset": 422,
        "word_length": 10,
        "text": " training.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338399999,
        "text_offset": 432,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 347800000,
        "text_offset": 441,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 349799999,
        "text_offset": 444,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 351000000,
        "text_offset": 446,
        "word_length": 6,
        "text": " note,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357400000,
        "text_offset": 452,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359000000,
        "text_offset": 455,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360600000,
        "text_offset": 458,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 361800000,
        "text_offset": 462,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365600000,
        "text_offset": 471,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 368400000,
        "text_offset": 474,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 371000000,
        "text_offset": 479,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375000000,
        "text_offset": 487,
        "word_length": 9,
        "text": " hardware",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 380800000,
        "text_offset": 496,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384000000,
        "text_offset": 499,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386800000,
        "text_offset": 505,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 388400000,
        "text_offset": 510,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390200000,
        "text_offset": 513,
        "word_length": 13,
        "text": " horrifically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 396200000,
        "text_offset": 526,
        "word_length": 7,
        "text": " induce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 399799999,
        "text_offset": 533,
        "word_length": 8,
        "text": " errors.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 413600000,
        "text_offset": 541,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 418200000,
        "text_offset": 544,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 419600000,
        "text_offset": 548,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 427200000,
        "text_offset": 560,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 429799999,
        "text_offset": 565,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 434000000,
        "text_offset": 572,
        "word_length": 6,
        "text": " train",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 437800000,
        "text_offset": 578,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 439799999,
        "text_offset": 581,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441800000,
        "text_offset": 585,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445000000,
        "text_offset": 592,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 448400000,
        "text_offset": 597,
        "word_length": 6,
        "text": " occur",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 451400000,
        "text_offset": 603,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453600000,
        "text_offset": 607,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457400000,
        "text_offset": 615,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 469799999,
        "text_offset": 625,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 475400000,
        "text_offset": 630,
        "word_length": 13,
        "text": " adaptability",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 484400000,
        "text_offset": 643,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 488000000,
        "text_offset": 649,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 494200000,
        "text_offset": 657,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 504000000,
        "text_offset": 670,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 505600000,
        "text_offset": 673,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 509799999,
        "text_offset": 684,
        "word_length": 9,
        "text": " powerful",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 516599999,
        "text_offset": 693,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 520200000,
        "text_offset": 699,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 526000000,
        "text_offset": 710,
        "word_length": 6,
        "text": " tool.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 539599999,
        "text_offset": 716,
        "word_length": 8,
        "text": " Running",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 542600000,
        "text_offset": 724,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 545000000,
        "text_offset": 729,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 546000000,
        "text_offset": 731,
        "word_length": 10,
        "text": " simulated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551200000,
        "text_offset": 741,
        "word_length": 2,
        "text": " p",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556000000,
        "text_offset": 743,
        "word_length": 7,
        "text": " equals",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 560600000,
        "text_offset": 750,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 564600000,
        "text_offset": 752,
        "word_length": 3,
        "text": ".05",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572400000,
        "text_offset": 755,
        "word_length": 4,
        "text": " bit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 577800000,
        "text_offset": 759,
        "word_length": 5,
        "text": " flip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 581000000,
        "text_offset": 764,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 584400000,
        "text_offset": 770,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586800000,
        "text_offset": 773,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 591800000,
        "text_offset": 778,
        "word_length": 7,
        "text": " qubit.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600000000,
        "text_offset": 785,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 604000000,
        "text_offset": 788,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 606000000,
        "text_offset": 792,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608000000,
        "text_offset": 796,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 612600000,
        "text_offset": 806,
        "word_length": 10,
        "text": " optimizer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 620200000,
        "text_offset": 816,
        "word_length": 7,
        "text": " graph.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 631400000,
        "text_offset": 823,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 632400000,
        "text_offset": 826,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637000000,
        "text_offset": 833,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641600000,
        "text_offset": 842,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644000000,
        "text_offset": 845,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 645400000,
        "text_offset": 849,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649200000,
        "text_offset": 851,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 656200000,
        "text_offset": 862,
        "word_length": 3,
        "text": " L,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665200000,
        "text_offset": 865,
        "word_length": 2,
        "text": " 1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 668000000,
        "text_offset": 867,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674400000,
        "text_offset": 878,
        "word_length": 3,
        "text": " L,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681800000,
        "text_offset": 881,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 684000000,
        "text_offset": 885,
        "word_length": 5,
        "text": " plus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 686600000,
        "text_offset": 890,
        "word_length": 11,
        "text": " underscore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 694400000,
        "text_offset": 901,
        "word_length": 3,
        "text": " L.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 703199999,
        "text_offset": 904,
        "word_length": 8,
        "text": " Inputs.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 714200000,
        "text_offset": 912,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 715400000,
        "text_offset": 916,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 719000000,
        "text_offset": 924,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 728400000,
        "text_offset": 936,
        "word_length": 7,
        "text": " learns",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 731600000,
        "text_offset": 943,
        "word_length": 8,
        "text": " perfect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 736600000,
        "text_offset": 951,
        "word_length": 7,
        "text": " single",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 741600000,
        "text_offset": 958,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 746800000,
        "text_offset": 964,
        "word_length": 4,
        "text": " bit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 748800000,
        "text_offset": 968,
        "word_length": 5,
        "text": " flip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 751800000,
        "text_offset": 973,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 755000000,
        "text_offset": 979,
        "word_length": 12,
        "text": " correction,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 768200000,
        "text_offset": 991,
        "word_length": 6,
        "text": " while",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 769400000,
        "text_offset": 997,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 772800000,
        "text_offset": 1003,
        "word_length": 11,
        "text": " recovering",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 778600000,
        "text_offset": 1014,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 781800000,
        "text_offset": 1018,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 784599999,
        "text_offset": 1024,
        "word_length": 6,
        "text": " state",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 788600000,
        "text_offset": 1030,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 790600000,
        "text_offset": 1035,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 793000000,
        "text_offset": 1040,
        "word_length": 3,
        "text": " no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 795200000,
        "text_offset": 1043,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 798400000,
        "text_offset": 1050,
        "word_length": 7,
        "text": " occur.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We need to make a couple of minor modifications to our current training circuit to support error. Correction. Since we intend to change the data, we need to go back to training using fidelity instead of the swap test we also need to encode our singular input qubit into a logical code space. Represented by 0 underscore L equals 0 and 1 underscore L equals 111. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to horrifically induce errors. As the autoencoder will simply train on the errors that occur the quantum hardware. This adaptability makes quantum autoencoders an incredibly powerful error correcting tool. Running with a simulated p equals 0.05 bit flip error on each qubit. We get the following optimizer graph. By simply training on the 0 underscore L, 1 underscore L, and plus underscore L. Inputs. The quantum autoencoder learns perfect single qubit bit flip error correction, while still recovering the input state with when no errors occur.",
    "final_audio": "we-need-to-make-a-couple-of-minor-modifications-to-dea51bc9.mp3"
  },
  {
    "input_text": "As a recap, we created a quantum forward pass using parameterized rotation gates. Then we calculated a cost function using either the SWAP test or calculating the fidelity of states. Finally, we used COBYLA to optimize our parameters without knowing their derivative with respect to the cost function. With this quantum autoencoder, we were able to input qubits encoded into a logical codespace, and train the autoencoder to remove the errors and return the original state. We ran this all in qiskit simulation, but if this were running on a quantum computer, it could train on the real errors that happen in the qbits rather than our artificially incited ones. Please see \"Quantum Error Correction with Quantum Autoencoders\" for more details on the topic, but they have determined that this 3-1-3 autoencoder error correction is always more accurate than 3 qbit actively corrected encoding schemes when the noise inside of the error correcting network is low (this is because the increased number of gates in the autoencoder makes internal noise more significant).",
    "input_data": {
      "input_text": "As a recap, we created a quantum forward pass using parameterized rotation gates. Then we calculated a cost function using either the SWAP test or calculating the fidelity of states. Finally, we used COBYLA to optimize our parameters without knowing their derivative with respect to the cost function. With this quantum autoencoder, we were able to input qubits encoded into a logical codespace, and train the autoencoder to remove the errors and return the original state. We ran this all in qiskit simulation, but if this were running on a quantum computer, it could train on the real errors that happen in the qbits rather than our artificially incited ones. Please see \"Quantum Error Correction with Quantum Autoencoders\" for more details on the topic, but they have determined that this 3-1-3 autoencoder error correction is always more accurate than 3 qbit actively corrected encoding schemes when the noise inside of the error correcting network is low (this is because the increased number of gates in the autoencoder makes internal noise more significant).",
      "service": "gtts"
    },
    "original_audio": "as-a-recap-we-created-a-quantum-forward-pass-using-7e299383.mp3",
    "word_boundaries": [
      {
        "audio_offset": 600000,
        "text_offset": 0,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2200000,
        "text_offset": 3,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3600000,
        "text_offset": 5,
        "word_length": 7,
        "text": " recap,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "text_offset": 12,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14200000,
        "text_offset": 15,
        "word_length": 8,
        "text": " created",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19200000,
        "text_offset": 23,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21800000,
        "text_offset": 25,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 33,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "text_offset": 41,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33600000,
        "text_offset": 46,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38800000,
        "text_offset": 52,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48600000,
        "text_offset": 66,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53400000,
        "text_offset": 75,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65599999,
        "text_offset": 82,
        "word_length": 5,
        "text": " Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66600000,
        "text_offset": 87,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68800000,
        "text_offset": 90,
        "word_length": 11,
        "text": " calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74800000,
        "text_offset": 101,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78800000,
        "text_offset": 103,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80600000,
        "text_offset": 108,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "text_offset": 117,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 123,
        "word_length": 7,
        "text": " either",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "text_offset": 130,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95399999,
        "text_offset": 134,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98200000,
        "text_offset": 139,
        "word_length": 5,
        "text": " test",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101800000,
        "text_offset": 144,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104600000,
        "text_offset": 147,
        "word_length": 12,
        "text": " calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110399999,
        "text_offset": 159,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114200000,
        "text_offset": 163,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118600000,
        "text_offset": 172,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122800000,
        "text_offset": 175,
        "word_length": 8,
        "text": " states.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137200000,
        "text_offset": 183,
        "word_length": 9,
        "text": " Finally,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145600000,
        "text_offset": 192,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147200000,
        "text_offset": 195,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 200,
        "word_length": 7,
        "text": " COBYLA",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164800000,
        "text_offset": 207,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 167600000,
        "text_offset": 210,
        "word_length": 9,
        "text": " optimize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172399999,
        "text_offset": 219,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176200000,
        "text_offset": 223,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181000000,
        "text_offset": 234,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185600000,
        "text_offset": 242,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 189400000,
        "text_offset": 250,
        "word_length": 6,
        "text": " their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192200000,
        "text_offset": 256,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197200000,
        "text_offset": 267,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 201400000,
        "text_offset": 272,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204800000,
        "text_offset": 280,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207800000,
        "text_offset": 283,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209000000,
        "text_offset": 287,
        "word_length": 6,
        "text": " cost.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224200000,
        "text_offset": 293,
        "word_length": 10,
        "text": " Function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 232399999,
        "text_offset": 303,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233600000,
        "text_offset": 308,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 237600000,
        "text_offset": 313,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 240400000,
        "text_offset": 321,
        "word_length": 13,
        "text": " autoencoder,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254200000,
        "text_offset": 334,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255799999,
        "text_offset": 337,
        "word_length": 5,
        "text": " were",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257399999,
        "text_offset": 342,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 260200000,
        "text_offset": 347,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 262399999,
        "text_offset": 350,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 265799999,
        "text_offset": 356,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 272400000,
        "text_offset": 363,
        "word_length": 8,
        "text": " encoded",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 277600000,
        "text_offset": 371,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281200000,
        "text_offset": 376,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282800000,
        "text_offset": 378,
        "word_length": 8,
        "text": " logical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287400000,
        "text_offset": 386,
        "word_length": 5,
        "text": " code",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291200000,
        "text_offset": 391,
        "word_length": 7,
        "text": " space.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 302200000,
        "text_offset": 398,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 303600000,
        "text_offset": 402,
        "word_length": 6,
        "text": " train",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 307000000,
        "text_offset": 408,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 309600000,
        "text_offset": 412,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 424,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 319000000,
        "text_offset": 427,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 322000000,
        "text_offset": 434,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 325600000,
        "text_offset": 438,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 328600000,
        "text_offset": 445,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331800000,
        "text_offset": 449,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 335400000,
        "text_offset": 456,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338200000,
        "text_offset": 460,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342600000,
        "text_offset": 469,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 355400000,
        "text_offset": 476,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357000000,
        "text_offset": 479,
        "word_length": 4,
        "text": " ran",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359600000,
        "text_offset": 483,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 361800000,
        "text_offset": 488,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 364600000,
        "text_offset": 492,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367000000,
        "text_offset": 495,
        "word_length": 7,
        "text": " Kisket",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373300000,
        "text_offset": 502,
        "word_length": 12,
        "text": " simulation.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385400000,
        "text_offset": 514,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386599999,
        "text_offset": 518,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 388600000,
        "text_offset": 521,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390400000,
        "text_offset": 526,
        "word_length": 5,
        "text": " were",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 392400000,
        "text_offset": 531,
        "word_length": 8,
        "text": " running",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395400000,
        "text_offset": 539,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 397600000,
        "text_offset": 542,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 399800000,
        "text_offset": 544,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 402900000,
        "text_offset": 552,
        "word_length": 10,
        "text": " computer,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414600000,
        "text_offset": 562,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416000000,
        "text_offset": 565,
        "word_length": 6,
        "text": " could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 417400000,
        "text_offset": 571,
        "word_length": 6,
        "text": " train",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 420600000,
        "text_offset": 577,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422600000,
        "text_offset": 580,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 424000000,
        "text_offset": 584,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426800000,
        "text_offset": 589,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430600000,
        "text_offset": 596,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 433800000,
        "text_offset": 601,
        "word_length": 7,
        "text": " happen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 437800000,
        "text_offset": 608,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 439600000,
        "text_offset": 611,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 443100000,
        "text_offset": 615,
        "word_length": 6,
        "text": " QBITS",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453800000,
        "text_offset": 621,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 456200000,
        "text_offset": 628,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458400000,
        "text_offset": 633,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460200000,
        "text_offset": 637,
        "word_length": 13,
        "text": " artificially",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 468000000,
        "text_offset": 650,
        "word_length": 8,
        "text": " incited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 473200000,
        "text_offset": 658,
        "word_length": 6,
        "text": " ones.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487800000,
        "text_offset": 664,
        "word_length": 7,
        "text": " Please",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 489400000,
        "text_offset": 671,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 493200000,
        "text_offset": 675,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496800000,
        "text_offset": 683,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501400000,
        "text_offset": 689,
        "word_length": 11,
        "text": " correction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 507000000,
        "text_offset": 700,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 511400000,
        "text_offset": 705,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 515600000,
        "text_offset": 713,
        "word_length": 14,
        "text": " autoencoders,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 524799999,
        "text_offset": 727,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 526000000,
        "text_offset": 731,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 528400000,
        "text_offset": 736,
        "word_length": 8,
        "text": " details",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 532800000,
        "text_offset": 744,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 536000000,
        "text_offset": 747,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 538200000,
        "text_offset": 751,
        "word_length": 7,
        "text": " topic.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 548200000,
        "text_offset": 758,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551600000,
        "text_offset": 762,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 553400000,
        "text_offset": 767,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 557800000,
        "text_offset": 772,
        "word_length": 11,
        "text": " determined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 560600000,
        "text_offset": 783,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563200000,
        "text_offset": 788,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565200000,
        "text_offset": 793,
        "word_length": 2,
        "text": " 3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 568800000,
        "text_offset": 795,
        "word_length": 2,
        "text": "-1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 572000000,
        "text_offset": 797,
        "word_length": 2,
        "text": "-3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 574800000,
        "text_offset": 799,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583000000,
        "text_offset": 811,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586400000,
        "text_offset": 817,
        "word_length": 11,
        "text": " correction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 592200000,
        "text_offset": 828,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 594800000,
        "text_offset": 831,
        "word_length": 7,
        "text": " always",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 598400000,
        "text_offset": 838,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 601200000,
        "text_offset": 843,
        "word_length": 9,
        "text": " accurate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 605000000,
        "text_offset": 852,
        "word_length": 6,
        "text": " than.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 619400000,
        "text_offset": 858,
        "word_length": 6,
        "text": " Three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 621400000,
        "text_offset": 864,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 625600000,
        "text_offset": 870,
        "word_length": 9,
        "text": " actively",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 630800000,
        "text_offset": 879,
        "word_length": 10,
        "text": " corrected",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 639600000,
        "text_offset": 892,
        "word_length": 7,
        "text": " coding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642800000,
        "text_offset": 899,
        "word_length": 8,
        "text": " schemes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 647600000,
        "text_offset": 907,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 650600000,
        "text_offset": 912,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 652200000,
        "text_offset": 916,
        "word_length": 6,
        "text": " noise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654599999,
        "text_offset": 922,
        "word_length": 7,
        "text": " inside",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 659800000,
        "text_offset": 929,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 661600000,
        "text_offset": 932,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 663400000,
        "text_offset": 936,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 665800000,
        "text_offset": 942,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 671800000,
        "text_offset": 953,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 676200000,
        "text_offset": 961,
        "word_length": 4,
        "text": " is.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 690600000,
        "text_offset": 965,
        "word_length": 5,
        "text": " Low.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 698199999,
        "text_offset": 970,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 699800000,
        "text_offset": 975,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 702400000,
        "text_offset": 978,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 704800000,
        "text_offset": 986,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 707600000,
        "text_offset": 990,
        "word_length": 10,
        "text": " increased",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 712600000,
        "text_offset": 1000,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 716400000,
        "text_offset": 1007,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 718800000,
        "text_offset": 1010,
        "word_length": 6,
        "text": " gates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 720800000,
        "text_offset": 1016,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 723800000,
        "text_offset": 1019,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 725200000,
        "text_offset": 1023,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 732800000,
        "text_offset": 1035,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 735200000,
        "text_offset": 1041,
        "word_length": 9,
        "text": " internal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 740000000,
        "text_offset": 1050,
        "word_length": 6,
        "text": " noise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 744000000,
        "text_offset": 1056,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 751200000,
        "text_offset": 1061,
        "word_length": 13,
        "text": " significant.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " As a recap, we created a quantum forward pass using parameterized rotation gates. Then we calculated a cost function using either the swap test or calculating the fidelity of states. Finally, we used COBYLA to optimize our parameters without knowing their derivative with respect to the cost. Function. With this quantum autoencoder, we were able to input qubits encoded into a logical code space. And train the autoencoder to remove the errors and return the original state. We ran this all in Kisket simulation. But if this were running on a quantum computer, it could train on the real errors that happen in the QBITS rather than are artificially incited ones. Please see quantum error correction with quantum autoencoders, for more details on the topic. But they have determined that this 3-1-3 autoencoder error correction is always more accurate than. Three qubit actively corrected in coding schemes when the noise inside of the error correcting network is. Low. This is because the increased number of gates in the autoencoder makes internal noise more significant.",
    "final_audio": "as-a-recap-we-created-a-quantum-forward-pass-using-7e299383.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-daf02831.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6400000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8800000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17600000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21600000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26800000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36600000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders.",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-daf02831.mp3"
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-0a090061.mp3",
    "word_boundaries": [
      {
        "audio_offset": 10400000,
        "text_offset": 0,
        "word_length": 7,
        "text": " First,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18400000,
        "text_offset": 7,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 13,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 20,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 24,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "text_offset": 33,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 36,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36400000,
        "text_offset": 38,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38800000,
        "text_offset": 48,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 60,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 63,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 78,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62200000,
        "text_offset": 89,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199999,
        "text_offset": 93,
        "word_length": 8,
        "text": " turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68400000,
        "text_offset": 101,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87800000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110600000,
        "text_offset": 151,
        "word_length": 9,
        "text": " internal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113200000,
        "text_offset": 160,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 169,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125000000,
        "text_offset": 172,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127400000,
        "text_offset": 178,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 182,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133200000,
        "text_offset": 190,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135800000,
        "text_offset": 193,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139200000,
        "text_offset": 201,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141600000,
        "text_offset": 204,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 211,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150600000,
        "text_offset": 215,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 222,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172800000,
        "text_offset": 235,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 240,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178400000,
        "text_offset": 248,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 250,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183200000,
        "text_offset": 256,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186600000,
        "text_offset": 263,
        "word_length": 6,
        "text": " layer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 269,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 199400000,
        "text_offset": 276,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202399999,
        "text_offset": 280,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204400000,
        "text_offset": 287,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 294,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217000000,
        "text_offset": 300,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220799999,
        "text_offset": 307,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224800000,
        "text_offset": 311,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 227000000,
        "text_offset": 313,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230799999,
        "text_offset": 321,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 336,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244200000,
        "text_offset": 339,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246600000,
        "text_offset": 343,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268400000,
        "text_offset": 350,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269600000,
        "text_offset": 355,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271200000,
        "text_offset": 361,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 274400000,
        "text_offset": 365,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276000000,
        "text_offset": 369,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281000000,
        "text_offset": 378,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284000000,
        "text_offset": 382,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288600000,
        "text_offset": 390,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 293400000,
        "text_offset": 394,
        "word_length": 9,
        "text": " decoder,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 303400000,
        "text_offset": 403,
        "word_length": 8,
        "text": " leaving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306000000,
        "text_offset": 411,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308200000,
        "text_offset": 415,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 310600000,
        "text_offset": 422,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314200000,
        "text_offset": 428,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317600000,
        "text_offset": 431,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 319200000,
        "text_offset": 433,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 323000000,
        "text_offset": 444,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334400000,
        "text_offset": 459,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 335800000,
        "text_offset": 462,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 337400000,
        "text_offset": 466,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 340600000,
        "text_offset": 475,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365400000,
        "text_offset": 484,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375600000,
        "text_offset": 493,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384600000,
        "text_offset": 506,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386200000,
        "text_offset": 511,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 388800000,
        "text_offset": 514,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 389799999,
        "text_offset": 517,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393400000,
        "text_offset": 522,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395200000,
        "text_offset": 526,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 539,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 549,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422000000,
        "text_offset": 553,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435199999,
        "text_offset": 565,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 436200000,
        "text_offset": 568,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 577,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 581,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445200000,
        "text_offset": 587,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 447200000,
        "text_offset": 590,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450400000,
        "text_offset": 597,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 454200000,
        "text_offset": 602,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458600000,
        "text_offset": 609,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466599999,
        "text_offset": 614,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 470600000,
        "text_offset": 619,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 473600000,
        "text_offset": 625,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First, let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. The autoencoder is a subclass of deep internal networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder, leaving the latent space as a compressed representation of the original content. Further, autoencoders tend to be used for simultaneous denoising and compression by training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-0a090061.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-daf02831.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6400000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8800000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17600000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21600000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26800000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36600000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders.",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-daf02831.mp3"
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-0a090061.mp3",
    "word_boundaries": [
      {
        "audio_offset": 10400000,
        "text_offset": 0,
        "word_length": 7,
        "text": " First,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18400000,
        "text_offset": 7,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 13,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 20,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 24,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "text_offset": 33,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 36,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36400000,
        "text_offset": 38,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38800000,
        "text_offset": 48,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 60,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 63,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 78,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62200000,
        "text_offset": 89,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199999,
        "text_offset": 93,
        "word_length": 8,
        "text": " turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68400000,
        "text_offset": 101,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87800000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110600000,
        "text_offset": 151,
        "word_length": 9,
        "text": " internal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113200000,
        "text_offset": 160,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 169,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125000000,
        "text_offset": 172,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127400000,
        "text_offset": 178,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 182,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133200000,
        "text_offset": 190,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135800000,
        "text_offset": 193,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139200000,
        "text_offset": 201,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141600000,
        "text_offset": 204,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 211,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150600000,
        "text_offset": 215,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 222,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172800000,
        "text_offset": 235,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 240,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178400000,
        "text_offset": 248,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 250,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183200000,
        "text_offset": 256,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186600000,
        "text_offset": 263,
        "word_length": 6,
        "text": " layer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 269,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 199400000,
        "text_offset": 276,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202399999,
        "text_offset": 280,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204400000,
        "text_offset": 287,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 294,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217000000,
        "text_offset": 300,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220799999,
        "text_offset": 307,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224800000,
        "text_offset": 311,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 227000000,
        "text_offset": 313,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230799999,
        "text_offset": 321,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 336,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244200000,
        "text_offset": 339,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246600000,
        "text_offset": 343,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268400000,
        "text_offset": 350,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269600000,
        "text_offset": 355,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271200000,
        "text_offset": 361,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 274400000,
        "text_offset": 365,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276000000,
        "text_offset": 369,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281000000,
        "text_offset": 378,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284000000,
        "text_offset": 382,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288600000,
        "text_offset": 390,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 293400000,
        "text_offset": 394,
        "word_length": 9,
        "text": " decoder,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 303400000,
        "text_offset": 403,
        "word_length": 8,
        "text": " leaving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306000000,
        "text_offset": 411,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308200000,
        "text_offset": 415,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 310600000,
        "text_offset": 422,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314200000,
        "text_offset": 428,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317600000,
        "text_offset": 431,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 319200000,
        "text_offset": 433,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 323000000,
        "text_offset": 444,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334400000,
        "text_offset": 459,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 335800000,
        "text_offset": 462,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 337400000,
        "text_offset": 466,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 340600000,
        "text_offset": 475,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365400000,
        "text_offset": 484,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375600000,
        "text_offset": 493,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384600000,
        "text_offset": 506,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386200000,
        "text_offset": 511,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 388800000,
        "text_offset": 514,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 389799999,
        "text_offset": 517,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393400000,
        "text_offset": 522,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395200000,
        "text_offset": 526,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 539,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 549,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422000000,
        "text_offset": 553,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435199999,
        "text_offset": 565,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 436200000,
        "text_offset": 568,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 577,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 581,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445200000,
        "text_offset": 587,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 447200000,
        "text_offset": 590,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450400000,
        "text_offset": 597,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 454200000,
        "text_offset": 602,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458600000,
        "text_offset": 609,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466599999,
        "text_offset": 614,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 470600000,
        "text_offset": 619,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 473600000,
        "text_offset": 625,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First, let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. The autoencoder is a subclass of deep internal networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder, leaving the latent space as a compressed representation of the original content. Further, autoencoders tend to be used for simultaneous denoising and compression by training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-0a090061.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-494bc1e7.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9000000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10200000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22400000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34800000,
        "text_offset": 43,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 59,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 67,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599999,
        "text_offset": 72,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 75,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62400000,
        "text_offset": 81,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67400000,
        "text_offset": 88,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74600000,
        "text_offset": 92,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78000000,
        "text_offset": 98,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 110,
        "word_length": 8,
        "text": " Autonin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99600000,
        "text_offset": 118,
        "word_length": 7,
        "text": " coders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103800000,
        "text_offset": 125,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106400000,
        "text_offset": 129,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108600000,
        "text_offset": 135,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112000000,
        "text_offset": 140,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 143,
        "word_length": 5,
        "text": " once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118200000,
        "text_offset": 148,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125800000,
        "text_offset": 152,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130800000,
        "text_offset": 162,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133800000,
        "text_offset": 166,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135800000,
        "text_offset": 168,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 173,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "text_offset": 181,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149600000,
        "text_offset": 194,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 197,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178000000,
        "text_offset": 204,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179400000,
        "text_offset": 206,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 211,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181600000,
        "text_offset": 214,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186800000,
        "text_offset": 220,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192800000,
        "text_offset": 225,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197000000,
        "text_offset": 230,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 243,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 210400000,
        "text_offset": 246,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211400000,
        "text_offset": 250,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 261,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 225400000,
        "text_offset": 264,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228200000,
        "text_offset": 274,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231000000,
        "text_offset": 277,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234800000,
        "text_offset": 285,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242000000,
        "text_offset": 297,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 300,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 302,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253400000,
        "text_offset": 307,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255799999,
        "text_offset": 311,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257399999,
        "text_offset": 314,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259199999,
        "text_offset": 320,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263800000,
        "text_offset": 331,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268200000,
        "text_offset": 336,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 339,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271400000,
        "text_offset": 343,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 273400000,
        "text_offset": 350,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276200000,
        "text_offset": 356,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279000000,
        "text_offset": 360,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282600000,
        "text_offset": 368,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 302400000,
        "text_offset": 381,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 303600000,
        "text_offset": 387,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305800000,
        "text_offset": 391,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 309800000,
        "text_offset": 397,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314800000,
        "text_offset": 401,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 320000000,
        "text_offset": 410,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 324799999,
        "text_offset": 414,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327200000,
        "text_offset": 423,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331000000,
        "text_offset": 425,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 336500000,
        "text_offset": 432,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354600000,
        "text_offset": 445,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 355600000,
        "text_offset": 449,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358600000,
        "text_offset": 457,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 371000000,
        "text_offset": 463,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 372000000,
        "text_offset": 467,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375400000,
        "text_offset": 472,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386599999,
        "text_offset": 485,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390800000,
        "text_offset": 489,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 392200000,
        "text_offset": 493,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 408200000,
        "text_offset": 504,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 409200000,
        "text_offset": 507,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 515,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 519,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 419600000,
        "text_offset": 524,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421400000,
        "text_offset": 527,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 424200000,
        "text_offset": 533,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 429200000,
        "text_offset": 540,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430200000,
        "text_offset": 543,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 432000000,
        "text_offset": 548,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435000000,
        "text_offset": 550,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 437200000,
        "text_offset": 558,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 443200000,
        "text_offset": 566,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 455199999,
        "text_offset": 572,
        "word_length": 5,
        "text": " NERL",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 577,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 461000000,
        "text_offset": 586,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 465600000,
        "text_offset": 591,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 468600000,
        "text_offset": 594,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 472000000,
        "text_offset": 599,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 476599999,
        "text_offset": 607,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 611,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481200000,
        "text_offset": 615,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485500000,
        "text_offset": 623,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 493000000,
        "text_offset": 628,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496000000,
        "text_offset": 631,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497200000,
        "text_offset": 635,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 499400000,
        "text_offset": 643,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 509799999,
        "text_offset": 649,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 516400000,
        "text_offset": 652,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 517800000,
        "text_offset": 657,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519200000,
        "text_offset": 660,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 524600000,
        "text_offset": 669,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 527200000,
        "text_offset": 673,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 531800000,
        "text_offset": 679,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537400000,
        "text_offset": 682,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 540000000,
        "text_offset": 689,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 546200000,
        "text_offset": 704,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 553400000,
        "text_offset": 709,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 555600000,
        "text_offset": 717,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556800000,
        "text_offset": 721,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 560000000,
        "text_offset": 728,
        "word_length": 9,
        "text": " provide,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 573400000,
        "text_offset": 737,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 575800000,
        "text_offset": 743,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 747,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 579200000,
        "text_offset": 750,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583600000,
        "text_offset": 759,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588600000,
        "text_offset": 765,
        "word_length": 13,
        "text": " parametrized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 598400000,
        "text_offset": 778,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 605000000,
        "text_offset": 788,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611000000,
        "text_offset": 796,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 623400000,
        "text_offset": 803,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 629200000,
        "text_offset": 806,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 630400000,
        "text_offset": 811,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635200000,
        "text_offset": 820,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637400000,
        "text_offset": 823,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 638000000,
        "text_offset": 828,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641000000,
        "text_offset": 834,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 643000000,
        "text_offset": 837,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 643800000,
        "text_offset": 841,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649800000,
        "text_offset": 855,
        "word_length": 6,
        "text": " basis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 655600000,
        "text_offset": 861,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 662600000,
        "text_offset": 864,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 664800000,
        "text_offset": 867,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 666200000,
        "text_offset": 871,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 669000000,
        "text_offset": 878,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 671400000,
        "text_offset": 882,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 673000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 676000000,
        "text_offset": 892,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 679800000,
        "text_offset": 903,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 684500000,
        "text_offset": 906,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692000000,
        "text_offset": 920,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 694400000,
        "text_offset": 925,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 697400000,
        "text_offset": 934,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 717099999,
        "text_offset": 941,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 723600000,
        "text_offset": 944,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 727200000,
        "text_offset": 953,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 729800000,
        "text_offset": 957,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 733199999,
        "text_offset": 962,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 735200000,
        "text_offset": 965,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 735800000,
        "text_offset": 969,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 738199999,
        "text_offset": 976,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 748199999,
        "text_offset": 983,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 986,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 990,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754599999,
        "text_offset": 995,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 759200000,
        "text_offset": 999,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780000000,
        "text_offset": 1007,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 782600000,
        "text_offset": 1011,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 784400000,
        "text_offset": 1014,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 785600000,
        "text_offset": 1019,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 786800000,
        "text_offset": 1021,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 790200000,
        "text_offset": 1029,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 794000000,
        "text_offset": 1037,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801400000,
        "text_offset": 1043,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803600000,
        "text_offset": 1046,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 804800000,
        "text_offset": 1051,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 807000000,
        "text_offset": 1055,
        "word_length": 9,
        "text": " backward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 809800000,
        "text_offset": 1064,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825000000,
        "text_offset": 1070,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 826400000,
        "text_offset": 1073,
        "word_length": 8,
        "text": " finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 831400000,
        "text_offset": 1081,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 834200000,
        "text_offset": 1085,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 838199999,
        "text_offset": 1096,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 842000000,
        "text_offset": 1099,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 843199999,
        "text_offset": 1103,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 845600000,
        "text_offset": 1111,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 848400000,
        "text_offset": 1116,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851200000,
        "text_offset": 1124,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 855000000,
        "text_offset": 1127,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 856400000,
        "text_offset": 1131,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 858000000,
        "text_offset": 1136,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1146,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 879200000,
        "text_offset": 1150,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 881800000,
        "text_offset": 1155,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886800000,
        "text_offset": 1164,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 888400000,
        "text_offset": 1169,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 889200000,
        "text_offset": 1172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 891400000,
        "text_offset": 1176,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894599999,
        "text_offset": 1184,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 899599999,
        "text_offset": 1193,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 903800000,
        "text_offset": 1201,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 906600000,
        "text_offset": 1205,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 909200000,
        "text_offset": 1211,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 910800000,
        "text_offset": 1215,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 915000000,
        "text_offset": 1222,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 920000000,
        "text_offset": 1229,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 922600000,
        "text_offset": 1233,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 925000000,
        "text_offset": 1242,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 939000000,
        "text_offset": 1248,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 945000000,
        "text_offset": 1257,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 947000000,
        "text_offset": 1260,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1264,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951400000,
        "text_offset": 1273,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 954200000,
        "text_offset": 1277,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956400000,
        "text_offset": 1282,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959400000,
        "text_offset": 1287,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 963000000,
        "text_offset": 1292,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 968000000,
        "text_offset": 1303,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 971400000,
        "text_offset": 1306,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 976800000,
        "text_offset": 1314,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 983600000,
        "text_offset": 1317,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 985200000,
        "text_offset": 1322,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 987200000,
        "text_offset": 1326,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 989800000,
        "text_offset": 1333,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993000000,
        "text_offset": 1336,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1346,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1007200000,
        "text_offset": 1358,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1009800000,
        "text_offset": 1361,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1011200000,
        "text_offset": 1365,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1012400000,
        "text_offset": 1369,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014000000,
        "text_offset": 1373,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1019200000,
        "text_offset": 1381,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1384,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1023800000,
        "text_offset": 1388,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027400000,
        "text_offset": 1396,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1030000000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1034599999,
        "text_offset": 1405,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1037200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041200000,
        "text_offset": 1417,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1051200000,
        "text_offset": 1424,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058000000,
        "text_offset": 1427,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1059400000,
        "text_offset": 1432,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1067800000,
        "text_offset": 1442,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1070200000,
        "text_offset": 1445,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1071600000,
        "text_offset": 1449,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075600000,
        "text_offset": 1457,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1079400000,
        "text_offset": 1463,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1084000000,
        "text_offset": 1469,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1087600000,
        "text_offset": 1473,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1090000000,
        "text_offset": 1480,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1093400000,
        "text_offset": 1484,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096800000,
        "text_offset": 1491,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1100800000,
        "text_offset": 1497,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1104000000,
        "text_offset": 1500,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106200000,
        "text_offset": 1504,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1108200000,
        "text_offset": 1509,
        "word_length": 7,
        "text": " qubit,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120800000,
        "text_offset": 1516,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123600000,
        "text_offset": 1521,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1125600000,
        "text_offset": 1525,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1129600000,
        "text_offset": 1533,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1132600000,
        "text_offset": 1539,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1135400000,
        "text_offset": 1544,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136600000,
        "text_offset": 1547,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138400000,
        "text_offset": 1552,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140200000,
        "text_offset": 1555,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1144300000,
        "text_offset": 1565,
        "word_length": 12,
        "text": " reconstruct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150800000,
        "text_offset": 1577,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1153600000,
        "text_offset": 1581,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1156200000,
        "text_offset": 1589,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1174400000,
        "text_offset": 1596,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1179000000,
        "text_offset": 1607,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1183400000,
        "text_offset": 1610,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184600000,
        "text_offset": 1614,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1188200000,
        "text_offset": 1622,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1193800000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1195600000,
        "text_offset": 1635,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1198000000,
        "text_offset": 1640,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1202400000,
        "text_offset": 1649,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1205400000,
        "text_offset": 1652,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1658,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210800000,
        "text_offset": 1662,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212200000,
        "text_offset": 1667,
        "word_length": 6,
        "text": " test,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1220400000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1221800000,
        "text_offset": 1679,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1222800000,
        "text_offset": 1684,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1225400000,
        "text_offset": 1692,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1226800000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1228800000,
        "text_offset": 1700,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1233200000,
        "text_offset": 1706,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1235400000,
        "text_offset": 1709,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1237200000,
        "text_offset": 1713,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1245500000,
        "text_offset": 1720,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252000000,
        "text_offset": 1727,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1256400000,
        "text_offset": 1731,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1258200000,
        "text_offset": 1736,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1279000000,
        "text_offset": 1745,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1280200000,
        "text_offset": 1748,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1281200000,
        "text_offset": 1752,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1284000000,
        "text_offset": 1757,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1285400000,
        "text_offset": 1760,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287200000,
        "text_offset": 1764,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289800000,
        "text_offset": 1767,
        "word_length": 9,
        "text": " hardware",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294400000,
        "text_offset": 1776,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1299199999,
        "text_offset": 1783,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1301000000,
        "text_offset": 1788,
        "word_length": 11,
        "text": " simulation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1313200000,
        "text_offset": 1799,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1314600000,
        "text_offset": 1805,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1317800000,
        "text_offset": 1808,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1319199999,
        "text_offset": 1813,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1321000000,
        "text_offset": 1819,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1325000000,
        "text_offset": 1822,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1330600000,
        "text_offset": 1834,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334800000,
        "text_offset": 1841,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336399999,
        "text_offset": 1846,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1338600000,
        "text_offset": 1854,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340400000,
        "text_offset": 1858,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1355200000,
        "text_offset": 1865,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356399999,
        "text_offset": 1868,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1357400000,
        "text_offset": 1872,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1360200000,
        "text_offset": 1877,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1365000000,
        "text_offset": 1886,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1368200000,
        "text_offset": 1889,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1371399999,
        "text_offset": 1894,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1376200000,
        "text_offset": 1902,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1378200000,
        "text_offset": 1906,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381000000,
        "text_offset": 1918,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1384199999,
        "text_offset": 1924,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1386800000,
        "text_offset": 1927,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1388200000,
        "text_offset": 1935,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1392400000,
        "text_offset": 1940,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395600000,
        "text_offset": 1943,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1396600000,
        "text_offset": 1947,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1399600000,
        "text_offset": 1956,
        "word_length": 6,
        "text": " data,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1408400000,
        "text_offset": 1962,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1410600000,
        "text_offset": 1965,
        "word_length": 6,
        "text": " often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415000000,
        "text_offset": 1971,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1417600000,
        "text_offset": 1974,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1437000000,
        "text_offset": 1984,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1443600000,
        "text_offset": 1993,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445800000,
        "text_offset": 1999,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1452400000,
        "text_offset": 2007,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457000000,
        "text_offset": 2012,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1462000000,
        "text_offset": 2022,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1465800000,
        "text_offset": 2025,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1468800000,
        "text_offset": 2029,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1472000000,
        "text_offset": 2037,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2039,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1476200000,
        "text_offset": 2043,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2047,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1482800000,
        "text_offset": 2052,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1495400000,
        "text_offset": 2065,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1497200000,
        "text_offset": 2068,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1500400000,
        "text_offset": 2071,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504400000,
        "text_offset": 2077,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505800000,
        "text_offset": 2082,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1507400000,
        "text_offset": 2086,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1511800000,
        "text_offset": 2097,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1515200000,
        "text_offset": 2100,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516800000,
        "text_offset": 2104,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521800000,
        "text_offset": 2115,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1525400000,
        "text_offset": 2120,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529000000,
        "text_offset": 2128,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1532400000,
        "text_offset": 2131,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1533200000,
        "text_offset": 2135,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1535400000,
        "text_offset": 2140,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1551200000,
        "text_offset": 2150,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1559199999,
        "text_offset": 2159,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1564000000,
        "text_offset": 2162,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1565600000,
        "text_offset": 2166,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567600000,
        "text_offset": 2170,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569800000,
        "text_offset": 2172,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1574400000,
        "text_offset": 2183,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578800000,
        "text_offset": 2188,
        "word_length": 10,
        "text": " optimizer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1586399999,
        "text_offset": 2198,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1593000000,
        "text_offset": 2203,
        "word_length": 8,
        "text": " Kabila.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges are efficiently storing data in fewer qubits and error correcting. Autonin coders can solve both at once and therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder so I will try to leave references down on the bottom right for further exploration. There are three key concepts for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. NERL networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using parametrized and qubit unitary gates. In this example, we will focus on the computational basis so we can reduce the number of parameters by parametrizing with rotation gates. To decrease the size of our latent space, we can chop off qubits. Now we have a working forward pass. We need our backward pass, or finding the derivative of the weights with respect to the cost function. Our cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two qubits equal to the zero qubit, then the decoder block will be able to perfectly reconstruct the initial state. Therefore, we can greatly simplify the cost function by using the swap test, which will measure a lower value if the bottom qubits are more similar. It can also be run in hardware rather than simulation since it just works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure zero on the training data, as often as possible. However, these quantum cost functions do not provide a way for back propagation, so we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer like Kabila.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-494bc1e7.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits! <bookmark mark='A'/> Training goes incredibly smoothly on both Domain Wall and MNIST datasets. <bookmark mark='B'/> So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actually provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! <bookmark mark='C'/>",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!  Training goes incredibly smoothly on both Domain Wall and MNIST datasets.  So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actually provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-fec598c3.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9600000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11600000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15800000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21800000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29200000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37400000,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48400000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57400000,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59400000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64600000,
        "text_offset": 95,
        "word_length": 6,
        "text": " minst",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 101,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83400000,
        "text_offset": 109,
        "word_length": 9,
        "text": " Training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85200000,
        "text_offset": 118,
        "word_length": 5,
        "text": " goes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87600000,
        "text_offset": 123,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93400000,
        "text_offset": 134,
        "word_length": 9,
        "text": " smoothly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101400000,
        "text_offset": 146,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 151,
        "word_length": 7,
        "text": " domain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108600000,
        "text_offset": 158,
        "word_length": 5,
        "text": " wall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111600000,
        "text_offset": 163,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 167,
        "word_length": 6,
        "text": " minst",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 173,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 181,
        "word_length": 4,
        "text": " So,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139400000,
        "text_offset": 185,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144000000,
        "text_offset": 188,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145200000,
        "text_offset": 193,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 195,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150200000,
        "text_offset": 202,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154200000,
        "text_offset": 210,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 161000000,
        "text_offset": 222,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 230,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171400000,
        "text_offset": 233,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 238,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176200000,
        "text_offset": 241,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 243,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 250,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184600000,
        "text_offset": 260,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198000000,
        "text_offset": 273,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200400000,
        "text_offset": 277,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 280,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206600000,
        "text_offset": 289,
        "word_length": 9,
        "text": " provides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 210000000,
        "text_offset": 298,
        "word_length": 12,
        "text": " significant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216800000,
        "text_offset": 310,
        "word_length": 11,
        "text": " advantages",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224000000,
        "text_offset": 321,
        "word_length": 4,
        "text": " due",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228400000,
        "text_offset": 325,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230400000,
        "text_offset": 328,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231400000,
        "text_offset": 332,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236800000,
        "text_offset": 340,
        "word_length": 9,
        "text": " encoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252999999,
        "text_offset": 349,
        "word_length": 4,
        "text": " So,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255400000,
        "text_offset": 353,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256200000,
        "text_offset": 357,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257399999,
        "text_offset": 360,
        "word_length": 6,
        "text": " done?",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269600000,
        "text_offset": 366,
        "word_length": 4,
        "text": " No,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279800000,
        "text_offset": 370,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282200000,
        "text_offset": 373,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284800000,
        "text_offset": 379,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288200000,
        "text_offset": 384,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 292600000,
        "text_offset": 390,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299600000,
        "text_offset": 401,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 409,
        "word_length": 14,
        "text": " autoencoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on minst digits. Training goes incredibly smoothly on both domain wall and minst digits. So, we have a simple quantum autoencoder working as well as a simple classical autoencoder. And it actually provides significant advantages due to the unitary encoder. So, are we done? No, we still have error correcting quantum autoencoders.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-fec598c3.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-daf02831.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6400000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8800000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17600000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21600000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26800000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36600000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders.",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-daf02831.mp3"
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-0a090061.mp3",
    "word_boundaries": [
      {
        "audio_offset": 10400000,
        "text_offset": 0,
        "word_length": 7,
        "text": " First,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18400000,
        "text_offset": 7,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 13,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 20,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 24,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "text_offset": 33,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 36,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36400000,
        "text_offset": 38,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38800000,
        "text_offset": 48,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 60,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 63,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 78,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62200000,
        "text_offset": 89,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199999,
        "text_offset": 93,
        "word_length": 8,
        "text": " turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68400000,
        "text_offset": 101,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87800000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110600000,
        "text_offset": 151,
        "word_length": 9,
        "text": " internal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113200000,
        "text_offset": 160,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 169,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125000000,
        "text_offset": 172,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127400000,
        "text_offset": 178,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 182,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133200000,
        "text_offset": 190,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135800000,
        "text_offset": 193,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139200000,
        "text_offset": 201,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141600000,
        "text_offset": 204,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 211,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150600000,
        "text_offset": 215,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 222,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172800000,
        "text_offset": 235,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 240,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178400000,
        "text_offset": 248,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 250,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183200000,
        "text_offset": 256,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186600000,
        "text_offset": 263,
        "word_length": 6,
        "text": " layer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 269,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 199400000,
        "text_offset": 276,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202399999,
        "text_offset": 280,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204400000,
        "text_offset": 287,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 294,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217000000,
        "text_offset": 300,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220799999,
        "text_offset": 307,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224800000,
        "text_offset": 311,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 227000000,
        "text_offset": 313,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230799999,
        "text_offset": 321,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 336,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244200000,
        "text_offset": 339,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246600000,
        "text_offset": 343,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268400000,
        "text_offset": 350,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269600000,
        "text_offset": 355,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271200000,
        "text_offset": 361,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 274400000,
        "text_offset": 365,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276000000,
        "text_offset": 369,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281000000,
        "text_offset": 378,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284000000,
        "text_offset": 382,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288600000,
        "text_offset": 390,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 293400000,
        "text_offset": 394,
        "word_length": 9,
        "text": " decoder,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 303400000,
        "text_offset": 403,
        "word_length": 8,
        "text": " leaving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306000000,
        "text_offset": 411,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308200000,
        "text_offset": 415,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 310600000,
        "text_offset": 422,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314200000,
        "text_offset": 428,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317600000,
        "text_offset": 431,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 319200000,
        "text_offset": 433,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 323000000,
        "text_offset": 444,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334400000,
        "text_offset": 459,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 335800000,
        "text_offset": 462,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 337400000,
        "text_offset": 466,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 340600000,
        "text_offset": 475,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365400000,
        "text_offset": 484,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375600000,
        "text_offset": 493,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384600000,
        "text_offset": 506,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386200000,
        "text_offset": 511,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 388800000,
        "text_offset": 514,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 389799999,
        "text_offset": 517,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393400000,
        "text_offset": 522,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395200000,
        "text_offset": 526,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 539,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 549,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422000000,
        "text_offset": 553,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435199999,
        "text_offset": 565,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 436200000,
        "text_offset": 568,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 577,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 581,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445200000,
        "text_offset": 587,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 447200000,
        "text_offset": 590,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450400000,
        "text_offset": 597,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 454200000,
        "text_offset": 602,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458600000,
        "text_offset": 609,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466599999,
        "text_offset": 614,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 470600000,
        "text_offset": 619,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 473600000,
        "text_offset": 625,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First, let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. The autoencoder is a subclass of deep internal networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder, leaving the latent space as a compressed representation of the original content. Further, autoencoders tend to be used for simultaneous denoising and compression by training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-0a090061.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-494bc1e7.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9000000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10200000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22400000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34800000,
        "text_offset": 43,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 59,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 67,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599999,
        "text_offset": 72,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 75,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62400000,
        "text_offset": 81,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67400000,
        "text_offset": 88,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74600000,
        "text_offset": 92,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78000000,
        "text_offset": 98,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 110,
        "word_length": 8,
        "text": " Autonin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99600000,
        "text_offset": 118,
        "word_length": 7,
        "text": " coders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103800000,
        "text_offset": 125,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106400000,
        "text_offset": 129,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108600000,
        "text_offset": 135,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112000000,
        "text_offset": 140,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 143,
        "word_length": 5,
        "text": " once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118200000,
        "text_offset": 148,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125800000,
        "text_offset": 152,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130800000,
        "text_offset": 162,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133800000,
        "text_offset": 166,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135800000,
        "text_offset": 168,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 173,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "text_offset": 181,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149600000,
        "text_offset": 194,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 197,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178000000,
        "text_offset": 204,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179400000,
        "text_offset": 206,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 211,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181600000,
        "text_offset": 214,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186800000,
        "text_offset": 220,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192800000,
        "text_offset": 225,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197000000,
        "text_offset": 230,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 243,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 210400000,
        "text_offset": 246,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211400000,
        "text_offset": 250,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 261,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 225400000,
        "text_offset": 264,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228200000,
        "text_offset": 274,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231000000,
        "text_offset": 277,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234800000,
        "text_offset": 285,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242000000,
        "text_offset": 297,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 300,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 302,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253400000,
        "text_offset": 307,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255799999,
        "text_offset": 311,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257399999,
        "text_offset": 314,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259199999,
        "text_offset": 320,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263800000,
        "text_offset": 331,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268200000,
        "text_offset": 336,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 339,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271400000,
        "text_offset": 343,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 273400000,
        "text_offset": 350,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276200000,
        "text_offset": 356,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279000000,
        "text_offset": 360,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282600000,
        "text_offset": 368,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 302400000,
        "text_offset": 381,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 303600000,
        "text_offset": 387,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305800000,
        "text_offset": 391,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 309800000,
        "text_offset": 397,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314800000,
        "text_offset": 401,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 320000000,
        "text_offset": 410,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 324799999,
        "text_offset": 414,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327200000,
        "text_offset": 423,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331000000,
        "text_offset": 425,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 336500000,
        "text_offset": 432,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354600000,
        "text_offset": 445,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 355600000,
        "text_offset": 449,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358600000,
        "text_offset": 457,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 371000000,
        "text_offset": 463,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 372000000,
        "text_offset": 467,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375400000,
        "text_offset": 472,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386599999,
        "text_offset": 485,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390800000,
        "text_offset": 489,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 392200000,
        "text_offset": 493,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 408200000,
        "text_offset": 504,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 409200000,
        "text_offset": 507,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 515,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 519,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 419600000,
        "text_offset": 524,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421400000,
        "text_offset": 527,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 424200000,
        "text_offset": 533,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 429200000,
        "text_offset": 540,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430200000,
        "text_offset": 543,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 432000000,
        "text_offset": 548,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435000000,
        "text_offset": 550,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 437200000,
        "text_offset": 558,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 443200000,
        "text_offset": 566,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 455199999,
        "text_offset": 572,
        "word_length": 5,
        "text": " NERL",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 577,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 461000000,
        "text_offset": 586,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 465600000,
        "text_offset": 591,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 468600000,
        "text_offset": 594,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 472000000,
        "text_offset": 599,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 476599999,
        "text_offset": 607,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 611,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481200000,
        "text_offset": 615,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485500000,
        "text_offset": 623,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 493000000,
        "text_offset": 628,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496000000,
        "text_offset": 631,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497200000,
        "text_offset": 635,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 499400000,
        "text_offset": 643,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 509799999,
        "text_offset": 649,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 516400000,
        "text_offset": 652,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 517800000,
        "text_offset": 657,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519200000,
        "text_offset": 660,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 524600000,
        "text_offset": 669,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 527200000,
        "text_offset": 673,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 531800000,
        "text_offset": 679,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537400000,
        "text_offset": 682,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 540000000,
        "text_offset": 689,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 546200000,
        "text_offset": 704,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 553400000,
        "text_offset": 709,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 555600000,
        "text_offset": 717,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556800000,
        "text_offset": 721,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 560000000,
        "text_offset": 728,
        "word_length": 9,
        "text": " provide,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 573400000,
        "text_offset": 737,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 575800000,
        "text_offset": 743,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 747,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 579200000,
        "text_offset": 750,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583600000,
        "text_offset": 759,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588600000,
        "text_offset": 765,
        "word_length": 13,
        "text": " parametrized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 598400000,
        "text_offset": 778,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 605000000,
        "text_offset": 788,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611000000,
        "text_offset": 796,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 623400000,
        "text_offset": 803,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 629200000,
        "text_offset": 806,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 630400000,
        "text_offset": 811,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635200000,
        "text_offset": 820,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637400000,
        "text_offset": 823,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 638000000,
        "text_offset": 828,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641000000,
        "text_offset": 834,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 643000000,
        "text_offset": 837,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 643800000,
        "text_offset": 841,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649800000,
        "text_offset": 855,
        "word_length": 6,
        "text": " basis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 655600000,
        "text_offset": 861,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 662600000,
        "text_offset": 864,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 664800000,
        "text_offset": 867,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 666200000,
        "text_offset": 871,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 669000000,
        "text_offset": 878,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 671400000,
        "text_offset": 882,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 673000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 676000000,
        "text_offset": 892,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 679800000,
        "text_offset": 903,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 684500000,
        "text_offset": 906,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692000000,
        "text_offset": 920,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 694400000,
        "text_offset": 925,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 697400000,
        "text_offset": 934,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 717099999,
        "text_offset": 941,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 723600000,
        "text_offset": 944,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 727200000,
        "text_offset": 953,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 729800000,
        "text_offset": 957,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 733199999,
        "text_offset": 962,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 735200000,
        "text_offset": 965,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 735800000,
        "text_offset": 969,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 738199999,
        "text_offset": 976,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 748199999,
        "text_offset": 983,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 986,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 990,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754599999,
        "text_offset": 995,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 759200000,
        "text_offset": 999,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780000000,
        "text_offset": 1007,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 782600000,
        "text_offset": 1011,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 784400000,
        "text_offset": 1014,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 785600000,
        "text_offset": 1019,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 786800000,
        "text_offset": 1021,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 790200000,
        "text_offset": 1029,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 794000000,
        "text_offset": 1037,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801400000,
        "text_offset": 1043,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803600000,
        "text_offset": 1046,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 804800000,
        "text_offset": 1051,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 807000000,
        "text_offset": 1055,
        "word_length": 9,
        "text": " backward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 809800000,
        "text_offset": 1064,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825000000,
        "text_offset": 1070,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 826400000,
        "text_offset": 1073,
        "word_length": 8,
        "text": " finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 831400000,
        "text_offset": 1081,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 834200000,
        "text_offset": 1085,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 838199999,
        "text_offset": 1096,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 842000000,
        "text_offset": 1099,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 843199999,
        "text_offset": 1103,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 845600000,
        "text_offset": 1111,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 848400000,
        "text_offset": 1116,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851200000,
        "text_offset": 1124,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 855000000,
        "text_offset": 1127,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 856400000,
        "text_offset": 1131,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 858000000,
        "text_offset": 1136,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1146,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 879200000,
        "text_offset": 1150,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 881800000,
        "text_offset": 1155,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886800000,
        "text_offset": 1164,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 888400000,
        "text_offset": 1169,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 889200000,
        "text_offset": 1172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 891400000,
        "text_offset": 1176,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894599999,
        "text_offset": 1184,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 899599999,
        "text_offset": 1193,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 903800000,
        "text_offset": 1201,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 906600000,
        "text_offset": 1205,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 909200000,
        "text_offset": 1211,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 910800000,
        "text_offset": 1215,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 915000000,
        "text_offset": 1222,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 920000000,
        "text_offset": 1229,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 922600000,
        "text_offset": 1233,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 925000000,
        "text_offset": 1242,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 939000000,
        "text_offset": 1248,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 945000000,
        "text_offset": 1257,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 947000000,
        "text_offset": 1260,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1264,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951400000,
        "text_offset": 1273,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 954200000,
        "text_offset": 1277,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956400000,
        "text_offset": 1282,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959400000,
        "text_offset": 1287,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 963000000,
        "text_offset": 1292,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 968000000,
        "text_offset": 1303,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 971400000,
        "text_offset": 1306,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 976800000,
        "text_offset": 1314,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 983600000,
        "text_offset": 1317,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 985200000,
        "text_offset": 1322,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 987200000,
        "text_offset": 1326,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 989800000,
        "text_offset": 1333,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993000000,
        "text_offset": 1336,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1346,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1007200000,
        "text_offset": 1358,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1009800000,
        "text_offset": 1361,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1011200000,
        "text_offset": 1365,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1012400000,
        "text_offset": 1369,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014000000,
        "text_offset": 1373,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1019200000,
        "text_offset": 1381,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1384,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1023800000,
        "text_offset": 1388,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027400000,
        "text_offset": 1396,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1030000000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1034599999,
        "text_offset": 1405,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1037200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041200000,
        "text_offset": 1417,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1051200000,
        "text_offset": 1424,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058000000,
        "text_offset": 1427,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1059400000,
        "text_offset": 1432,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1067800000,
        "text_offset": 1442,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1070200000,
        "text_offset": 1445,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1071600000,
        "text_offset": 1449,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075600000,
        "text_offset": 1457,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1079400000,
        "text_offset": 1463,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1084000000,
        "text_offset": 1469,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1087600000,
        "text_offset": 1473,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1090000000,
        "text_offset": 1480,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1093400000,
        "text_offset": 1484,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096800000,
        "text_offset": 1491,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1100800000,
        "text_offset": 1497,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1104000000,
        "text_offset": 1500,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106200000,
        "text_offset": 1504,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1108200000,
        "text_offset": 1509,
        "word_length": 7,
        "text": " qubit,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120800000,
        "text_offset": 1516,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123600000,
        "text_offset": 1521,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1125600000,
        "text_offset": 1525,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1129600000,
        "text_offset": 1533,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1132600000,
        "text_offset": 1539,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1135400000,
        "text_offset": 1544,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136600000,
        "text_offset": 1547,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138400000,
        "text_offset": 1552,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140200000,
        "text_offset": 1555,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1144300000,
        "text_offset": 1565,
        "word_length": 12,
        "text": " reconstruct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150800000,
        "text_offset": 1577,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1153600000,
        "text_offset": 1581,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1156200000,
        "text_offset": 1589,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1174400000,
        "text_offset": 1596,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1179000000,
        "text_offset": 1607,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1183400000,
        "text_offset": 1610,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184600000,
        "text_offset": 1614,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1188200000,
        "text_offset": 1622,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1193800000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1195600000,
        "text_offset": 1635,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1198000000,
        "text_offset": 1640,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1202400000,
        "text_offset": 1649,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1205400000,
        "text_offset": 1652,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1658,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210800000,
        "text_offset": 1662,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212200000,
        "text_offset": 1667,
        "word_length": 6,
        "text": " test,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1220400000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1221800000,
        "text_offset": 1679,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1222800000,
        "text_offset": 1684,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1225400000,
        "text_offset": 1692,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1226800000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1228800000,
        "text_offset": 1700,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1233200000,
        "text_offset": 1706,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1235400000,
        "text_offset": 1709,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1237200000,
        "text_offset": 1713,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1245500000,
        "text_offset": 1720,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252000000,
        "text_offset": 1727,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1256400000,
        "text_offset": 1731,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1258200000,
        "text_offset": 1736,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1279000000,
        "text_offset": 1745,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1280200000,
        "text_offset": 1748,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1281200000,
        "text_offset": 1752,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1284000000,
        "text_offset": 1757,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1285400000,
        "text_offset": 1760,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287200000,
        "text_offset": 1764,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289800000,
        "text_offset": 1767,
        "word_length": 9,
        "text": " hardware",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294400000,
        "text_offset": 1776,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1299199999,
        "text_offset": 1783,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1301000000,
        "text_offset": 1788,
        "word_length": 11,
        "text": " simulation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1313200000,
        "text_offset": 1799,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1314600000,
        "text_offset": 1805,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1317800000,
        "text_offset": 1808,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1319199999,
        "text_offset": 1813,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1321000000,
        "text_offset": 1819,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1325000000,
        "text_offset": 1822,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1330600000,
        "text_offset": 1834,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334800000,
        "text_offset": 1841,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336399999,
        "text_offset": 1846,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1338600000,
        "text_offset": 1854,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340400000,
        "text_offset": 1858,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1355200000,
        "text_offset": 1865,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356399999,
        "text_offset": 1868,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1357400000,
        "text_offset": 1872,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1360200000,
        "text_offset": 1877,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1365000000,
        "text_offset": 1886,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1368200000,
        "text_offset": 1889,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1371399999,
        "text_offset": 1894,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1376200000,
        "text_offset": 1902,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1378200000,
        "text_offset": 1906,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381000000,
        "text_offset": 1918,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1384199999,
        "text_offset": 1924,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1386800000,
        "text_offset": 1927,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1388200000,
        "text_offset": 1935,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1392400000,
        "text_offset": 1940,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395600000,
        "text_offset": 1943,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1396600000,
        "text_offset": 1947,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1399600000,
        "text_offset": 1956,
        "word_length": 6,
        "text": " data,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1408400000,
        "text_offset": 1962,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1410600000,
        "text_offset": 1965,
        "word_length": 6,
        "text": " often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415000000,
        "text_offset": 1971,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1417600000,
        "text_offset": 1974,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1437000000,
        "text_offset": 1984,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1443600000,
        "text_offset": 1993,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445800000,
        "text_offset": 1999,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1452400000,
        "text_offset": 2007,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457000000,
        "text_offset": 2012,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1462000000,
        "text_offset": 2022,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1465800000,
        "text_offset": 2025,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1468800000,
        "text_offset": 2029,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1472000000,
        "text_offset": 2037,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2039,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1476200000,
        "text_offset": 2043,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2047,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1482800000,
        "text_offset": 2052,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1495400000,
        "text_offset": 2065,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1497200000,
        "text_offset": 2068,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1500400000,
        "text_offset": 2071,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504400000,
        "text_offset": 2077,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505800000,
        "text_offset": 2082,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1507400000,
        "text_offset": 2086,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1511800000,
        "text_offset": 2097,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1515200000,
        "text_offset": 2100,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516800000,
        "text_offset": 2104,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521800000,
        "text_offset": 2115,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1525400000,
        "text_offset": 2120,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529000000,
        "text_offset": 2128,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1532400000,
        "text_offset": 2131,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1533200000,
        "text_offset": 2135,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1535400000,
        "text_offset": 2140,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1551200000,
        "text_offset": 2150,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1559199999,
        "text_offset": 2159,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1564000000,
        "text_offset": 2162,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1565600000,
        "text_offset": 2166,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567600000,
        "text_offset": 2170,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569800000,
        "text_offset": 2172,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1574400000,
        "text_offset": 2183,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578800000,
        "text_offset": 2188,
        "word_length": 10,
        "text": " optimizer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1586399999,
        "text_offset": 2198,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1593000000,
        "text_offset": 2203,
        "word_length": 8,
        "text": " Kabila.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges are efficiently storing data in fewer qubits and error correcting. Autonin coders can solve both at once and therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder so I will try to leave references down on the bottom right for further exploration. There are three key concepts for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. NERL networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using parametrized and qubit unitary gates. In this example, we will focus on the computational basis so we can reduce the number of parameters by parametrizing with rotation gates. To decrease the size of our latent space, we can chop off qubits. Now we have a working forward pass. We need our backward pass, or finding the derivative of the weights with respect to the cost function. Our cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two qubits equal to the zero qubit, then the decoder block will be able to perfectly reconstruct the initial state. Therefore, we can greatly simplify the cost function by using the swap test, which will measure a lower value if the bottom qubits are more similar. It can also be run in hardware rather than simulation since it just works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure zero on the training data, as often as possible. However, these quantum cost functions do not provide a way for back propagation, so we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer like Kabila.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-494bc1e7.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits! <bookmark mark='A'/> Training goes incredibly smoothly on both Domain Wall and MNIST datasets. <bookmark mark='B'/> So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actually provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! <bookmark mark='C'/>",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!  Training goes incredibly smoothly on both Domain Wall and MNIST datasets.  So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actually provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-fec598c3.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9600000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11600000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15800000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21800000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29200000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37400000,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48400000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57400000,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59400000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64600000,
        "text_offset": 95,
        "word_length": 6,
        "text": " minst",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 101,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83400000,
        "text_offset": 109,
        "word_length": 9,
        "text": " Training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85200000,
        "text_offset": 118,
        "word_length": 5,
        "text": " goes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87600000,
        "text_offset": 123,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93400000,
        "text_offset": 134,
        "word_length": 9,
        "text": " smoothly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101400000,
        "text_offset": 146,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 151,
        "word_length": 7,
        "text": " domain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108600000,
        "text_offset": 158,
        "word_length": 5,
        "text": " wall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111600000,
        "text_offset": 163,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 167,
        "word_length": 6,
        "text": " minst",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 173,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 181,
        "word_length": 4,
        "text": " So,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139400000,
        "text_offset": 185,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144000000,
        "text_offset": 188,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145200000,
        "text_offset": 193,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 195,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150200000,
        "text_offset": 202,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154200000,
        "text_offset": 210,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 161000000,
        "text_offset": 222,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 230,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171400000,
        "text_offset": 233,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 238,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176200000,
        "text_offset": 241,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 243,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 250,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184600000,
        "text_offset": 260,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198000000,
        "text_offset": 273,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200400000,
        "text_offset": 277,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 280,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206600000,
        "text_offset": 289,
        "word_length": 9,
        "text": " provides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 210000000,
        "text_offset": 298,
        "word_length": 12,
        "text": " significant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216800000,
        "text_offset": 310,
        "word_length": 11,
        "text": " advantages",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224000000,
        "text_offset": 321,
        "word_length": 4,
        "text": " due",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228400000,
        "text_offset": 325,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230400000,
        "text_offset": 328,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231400000,
        "text_offset": 332,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236800000,
        "text_offset": 340,
        "word_length": 9,
        "text": " encoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252999999,
        "text_offset": 349,
        "word_length": 4,
        "text": " So,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255400000,
        "text_offset": 353,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256200000,
        "text_offset": 357,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257399999,
        "text_offset": 360,
        "word_length": 6,
        "text": " done?",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269600000,
        "text_offset": 366,
        "word_length": 4,
        "text": " No,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279800000,
        "text_offset": 370,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282200000,
        "text_offset": 373,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284800000,
        "text_offset": 379,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288200000,
        "text_offset": 384,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 292600000,
        "text_offset": 390,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299600000,
        "text_offset": 401,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 409,
        "word_length": 14,
        "text": " autoencoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on minst digits. Training goes incredibly smoothly on both domain wall and minst digits. So, we have a simple quantum autoencoder working as well as a simple classical autoencoder. And it actually provides significant advantages due to the unitary encoder. So, are we done? No, we still have error correcting quantum autoencoders.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-fec598c3.mp3"
  },
  {
    "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
    "input_data": {
      "input_text": "This is a 101 on Quantum Error Correcting Autoencoders.",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "this-is-a-101-on-quantum-error-correcting-daf02831.mp3",
    "word_boundaries": [
      {
        "audio_offset": 6400000,
        "text_offset": 0,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8800000,
        "text_offset": 5,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "text_offset": 8,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 10,
        "word_length": 4,
        "text": " 101",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17600000,
        "text_offset": 14,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21600000,
        "text_offset": 17,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26800000,
        "text_offset": 25,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 31,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36600000,
        "text_offset": 42,
        "word_length": 5,
        "text": " auto",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "text_offset": 47,
        "word_length": 10,
        "text": " encoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " This is a 101 on quantum error correcting auto encoders.",
    "final_audio": "this-is-a-101-on-quantum-error-correcting-daf02831.mp3"
  },
  {
    "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. <bookmark mark='A'/> The autoencoder is a subclass of deep neural networks in which the network is trained to output its input. <bookmark mark='B'/> Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input. <bookmark mark='C'/> This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content. <bookmark mark='D'/> Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "First let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum.  The autoencoder is a subclass of deep neural networks in which the network is trained to output its input.  Autoencoders tend to have a small hidden layer, called the latent space, which allows for a compact representation of the input.  This means you can seperate the encoder and decoder, leaving the latent space as a compressed representation of the original content.  Further, autoencoders can be used for simultaneous denoising and compression, by training the model to return good images even with noisy inputs. ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "first-let-s-review-the-concepts-of-a-classical-0a090061.mp3",
    "word_boundaries": [
      {
        "audio_offset": 10400000,
        "text_offset": 0,
        "word_length": 7,
        "text": " First,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18400000,
        "text_offset": 7,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "text_offset": 13,
        "word_length": 7,
        "text": " review",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23200000,
        "text_offset": 20,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 24,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "text_offset": 33,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33400000,
        "text_offset": 36,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36400000,
        "text_offset": 38,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38800000,
        "text_offset": 48,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "text_offset": 60,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49400000,
        "text_offset": 63,
        "word_length": 11,
        "text": " understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53600000,
        "text_offset": 74,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55199999,
        "text_offset": 78,
        "word_length": 11,
        "text": " motivation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62200000,
        "text_offset": 89,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65199999,
        "text_offset": 93,
        "word_length": 8,
        "text": " turning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68400000,
        "text_offset": 101,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 104,
        "word_length": 9,
        "text": " quantum.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86400000,
        "text_offset": 113,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87800000,
        "text_offset": 117,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94800000,
        "text_offset": 129,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97600000,
        "text_offset": 132,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98800000,
        "text_offset": 134,
        "word_length": 9,
        "text": " subclass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104400000,
        "text_offset": 143,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109200000,
        "text_offset": 146,
        "word_length": 5,
        "text": " deep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110600000,
        "text_offset": 151,
        "word_length": 9,
        "text": " internal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113200000,
        "text_offset": 160,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "text_offset": 169,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125000000,
        "text_offset": 172,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127400000,
        "text_offset": 178,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130200000,
        "text_offset": 182,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133200000,
        "text_offset": 190,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135800000,
        "text_offset": 193,
        "word_length": 8,
        "text": " trained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139200000,
        "text_offset": 201,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141600000,
        "text_offset": 204,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146200000,
        "text_offset": 211,
        "word_length": 4,
        "text": " its",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150600000,
        "text_offset": 215,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166600000,
        "text_offset": 222,
        "word_length": 13,
        "text": " Autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172800000,
        "text_offset": 235,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175200000,
        "text_offset": 240,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 243,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178400000,
        "text_offset": 248,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 250,
        "word_length": 6,
        "text": " small",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183200000,
        "text_offset": 256,
        "word_length": 7,
        "text": " hidden",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186600000,
        "text_offset": 263,
        "word_length": 6,
        "text": " layer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190400000,
        "text_offset": 269,
        "word_length": 7,
        "text": " called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 199400000,
        "text_offset": 276,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202399999,
        "text_offset": 280,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204400000,
        "text_offset": 287,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 294,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 217000000,
        "text_offset": 300,
        "word_length": 7,
        "text": " allows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 220799999,
        "text_offset": 307,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224800000,
        "text_offset": 311,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 227000000,
        "text_offset": 313,
        "word_length": 8,
        "text": " compact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230799999,
        "text_offset": 321,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 238200000,
        "text_offset": 336,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 244200000,
        "text_offset": 339,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 246600000,
        "text_offset": 343,
        "word_length": 7,
        "text": " input.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268400000,
        "text_offset": 350,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269600000,
        "text_offset": 355,
        "word_length": 6,
        "text": " means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271200000,
        "text_offset": 361,
        "word_length": 4,
        "text": " you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 274400000,
        "text_offset": 365,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276000000,
        "text_offset": 369,
        "word_length": 9,
        "text": " separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281000000,
        "text_offset": 378,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284000000,
        "text_offset": 382,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288600000,
        "text_offset": 390,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 293400000,
        "text_offset": 394,
        "word_length": 9,
        "text": " decoder,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 303400000,
        "text_offset": 403,
        "word_length": 8,
        "text": " leaving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306000000,
        "text_offset": 411,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308200000,
        "text_offset": 415,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 310600000,
        "text_offset": 422,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314200000,
        "text_offset": 428,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 317600000,
        "text_offset": 431,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 319200000,
        "text_offset": 433,
        "word_length": 11,
        "text": " compressed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 323000000,
        "text_offset": 444,
        "word_length": 15,
        "text": " representation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 334400000,
        "text_offset": 459,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 335800000,
        "text_offset": 462,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 337400000,
        "text_offset": 466,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 340600000,
        "text_offset": 475,
        "word_length": 9,
        "text": " content.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 365400000,
        "text_offset": 484,
        "word_length": 9,
        "text": " Further,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375600000,
        "text_offset": 493,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384600000,
        "text_offset": 506,
        "word_length": 5,
        "text": " tend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386200000,
        "text_offset": 511,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 388800000,
        "text_offset": 514,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 389799999,
        "text_offset": 517,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393400000,
        "text_offset": 522,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395200000,
        "text_offset": 526,
        "word_length": 13,
        "text": " simultaneous",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 405600000,
        "text_offset": 539,
        "word_length": 10,
        "text": " denoising",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 549,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422000000,
        "text_offset": 553,
        "word_length": 12,
        "text": " compression",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435199999,
        "text_offset": 565,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 436200000,
        "text_offset": 568,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 577,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442800000,
        "text_offset": 581,
        "word_length": 6,
        "text": " model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 445200000,
        "text_offset": 587,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 447200000,
        "text_offset": 590,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 450400000,
        "text_offset": 597,
        "word_length": 5,
        "text": " good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 454200000,
        "text_offset": 602,
        "word_length": 7,
        "text": " images",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 458600000,
        "text_offset": 609,
        "word_length": 5,
        "text": " even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 466599999,
        "text_offset": 614,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 470600000,
        "text_offset": 619,
        "word_length": 6,
        "text": " noisy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 473600000,
        "text_offset": 625,
        "word_length": 8,
        "text": " inputs.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " First, let's review the concepts of a classical autoencoder to understand the motivation for turning it quantum. The autoencoder is a subclass of deep internal networks in which the network is trained to output its input. Autoencoders tend to have a small hidden layer called the latent space, which allows for a compact representation of the input. This means you can separate the encoder and decoder, leaving the latent space as a compressed representation of the original content. Further, autoencoders tend to be used for simultaneous denoising and compression by training the model to return good images even with noisy inputs.",
    "final_audio": "first-let-s-review-the-concepts-of-a-classical-0a090061.mp3"
  },
  {
    "input_text": "In quantum computing, two major challenges are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt. <bookmark mark='A'/> I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration. <bookmark mark='B'/> There are three key steps for training a usable autoencoder.<bookmark mark='C'/> The forward pass. <bookmark mark='D'/> The backpropagation. <bookmark mark='D'/> And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate. <bookmark mark='E'/> In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates. <bookmark mark='F'/> To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function). <bookmark mark='G'/> Our cost function will be the average fidelity between the input and output across the training data. <bookmark mark='H'/> However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state. <bookmark mark='I'/> Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function. <bookmark mark='J'/> Instead, we can use a derivative free optimizer, like COBYLA. <bookmark mark='K'/>",
    "input_data": {
      "input_text": "In quantum computing, two major challenges are efficiently storing data in fewer qubits, and error correcting. Autoencoders can solve both at once, and therefore are a very natural architecture to adapt.  I will be brief with many explanations in the adaptation of classical to quantum autoencoder, so I will try to leave references down on the bottom right for further exploration.  There are three key steps for training a usable autoencoder. The forward pass.  The backpropagation.  And the optimizer. We already run into an issue trying to make a quantum forward pass: Neural networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using a parameterized n-qubit unitary gate.  In this example, we will focus on the computational basis, so we can reduce the number of parameters by parameterizing with rotation gates.  To decrease the size of our latent space, we can chop off qbits. Now we have a working forward pass, we need our backwards pass (finding the derivative of the weights with respect to a cost function).  Our cost function will be the average fidelity between the input and output across the training data.  However, we can leverage the fact that RealAmplitudes is unitary to half the number of nessesary parameters: we can use the inverse of the encoder block as our decoder block. In this senario, if the encoder block makes the bottom two qbits equal to the |0>, then the decoder block will be able to perfectly reconstruct the initial state.  Therefore, we can greatly simplify the cost function by using the SWAP test, which will measure a lower value if the bottom qbits are more similar. It can also be run in hardware, rather than simulation, since it works on measurment rather than knowing the state. So the cost function is just getting the measurment block to measure 0 on the training data as often as possible. However, these quantum cost functions do not provide a way for backpropigation, so we don't know the derivative of the parameters with respect to the cost function.  Instead, we can use a derivative free optimizer, like COBYLA. ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "in-quantum-computing-two-major-challenges-are-494bc1e7.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9000000,
        "text_offset": 0,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10200000,
        "text_offset": 3,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13400000,
        "text_offset": 11,
        "word_length": 11,
        "text": " computing,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22400000,
        "text_offset": 22,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "text_offset": 26,
        "word_length": 6,
        "text": " major",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29400000,
        "text_offset": 32,
        "word_length": 11,
        "text": " challenges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34800000,
        "text_offset": 43,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40599999,
        "text_offset": 47,
        "word_length": 12,
        "text": " efficiently",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47200000,
        "text_offset": 59,
        "word_length": 8,
        "text": " storing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51600000,
        "text_offset": 67,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599999,
        "text_offset": 72,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61200000,
        "text_offset": 75,
        "word_length": 6,
        "text": " fewer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62400000,
        "text_offset": 81,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67400000,
        "text_offset": 88,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74600000,
        "text_offset": 92,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78000000,
        "text_offset": 98,
        "word_length": 12,
        "text": " correcting.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "text_offset": 110,
        "word_length": 8,
        "text": " Autonin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99600000,
        "text_offset": 118,
        "word_length": 7,
        "text": " coders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103800000,
        "text_offset": 125,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106400000,
        "text_offset": 129,
        "word_length": 6,
        "text": " solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108600000,
        "text_offset": 135,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112000000,
        "text_offset": 140,
        "word_length": 3,
        "text": " at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114400000,
        "text_offset": 143,
        "word_length": 5,
        "text": " once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118200000,
        "text_offset": 148,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125800000,
        "text_offset": 152,
        "word_length": 10,
        "text": " therefore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130800000,
        "text_offset": 162,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133800000,
        "text_offset": 166,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135800000,
        "text_offset": 168,
        "word_length": 5,
        "text": " very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138200000,
        "text_offset": 173,
        "word_length": 8,
        "text": " natural",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "text_offset": 181,
        "word_length": 13,
        "text": " architecture",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149600000,
        "text_offset": 194,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153000000,
        "text_offset": 197,
        "word_length": 7,
        "text": " adapt.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178000000,
        "text_offset": 204,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179400000,
        "text_offset": 206,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180200000,
        "text_offset": 211,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181600000,
        "text_offset": 214,
        "word_length": 6,
        "text": " brief",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186800000,
        "text_offset": 220,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192800000,
        "text_offset": 225,
        "word_length": 5,
        "text": " many",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197000000,
        "text_offset": 230,
        "word_length": 13,
        "text": " explanations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 205799999,
        "text_offset": 243,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 210400000,
        "text_offset": 246,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211400000,
        "text_offset": 250,
        "word_length": 11,
        "text": " adaptation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 215799999,
        "text_offset": 261,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 225400000,
        "text_offset": 264,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228200000,
        "text_offset": 274,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231000000,
        "text_offset": 277,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234800000,
        "text_offset": 285,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 242000000,
        "text_offset": 297,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 250000000,
        "text_offset": 300,
        "word_length": 2,
        "text": " I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252399999,
        "text_offset": 302,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 253400000,
        "text_offset": 307,
        "word_length": 4,
        "text": " try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255799999,
        "text_offset": 311,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257399999,
        "text_offset": 314,
        "word_length": 6,
        "text": " leave",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 259199999,
        "text_offset": 320,
        "word_length": 11,
        "text": " references",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263800000,
        "text_offset": 331,
        "word_length": 5,
        "text": " down",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 268200000,
        "text_offset": 336,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270400000,
        "text_offset": 339,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 271400000,
        "text_offset": 343,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 273400000,
        "text_offset": 350,
        "word_length": 6,
        "text": " right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 276200000,
        "text_offset": 356,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279000000,
        "text_offset": 360,
        "word_length": 8,
        "text": " further",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282600000,
        "text_offset": 368,
        "word_length": 13,
        "text": " exploration.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 302400000,
        "text_offset": 381,
        "word_length": 6,
        "text": " There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 303600000,
        "text_offset": 387,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305800000,
        "text_offset": 391,
        "word_length": 6,
        "text": " three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 309800000,
        "text_offset": 397,
        "word_length": 4,
        "text": " key",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314800000,
        "text_offset": 401,
        "word_length": 9,
        "text": " concepts",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 320000000,
        "text_offset": 410,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 324799999,
        "text_offset": 414,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 327200000,
        "text_offset": 423,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 331000000,
        "text_offset": 425,
        "word_length": 7,
        "text": " usable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 336500000,
        "text_offset": 432,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354600000,
        "text_offset": 445,
        "word_length": 4,
        "text": " The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 355600000,
        "text_offset": 449,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 358600000,
        "text_offset": 457,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 371000000,
        "text_offset": 463,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 372000000,
        "text_offset": 467,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 375400000,
        "text_offset": 472,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 386599999,
        "text_offset": 485,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 390800000,
        "text_offset": 489,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 392200000,
        "text_offset": 493,
        "word_length": 11,
        "text": " optimizer.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 408200000,
        "text_offset": 504,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 409200000,
        "text_offset": 507,
        "word_length": 8,
        "text": " already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414000000,
        "text_offset": 515,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416800000,
        "text_offset": 519,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 419600000,
        "text_offset": 524,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421400000,
        "text_offset": 527,
        "word_length": 6,
        "text": " issue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 424200000,
        "text_offset": 533,
        "word_length": 7,
        "text": " trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 429200000,
        "text_offset": 540,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430200000,
        "text_offset": 543,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 432000000,
        "text_offset": 548,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435000000,
        "text_offset": 550,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 437200000,
        "text_offset": 558,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 443200000,
        "text_offset": 566,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 455199999,
        "text_offset": 572,
        "word_length": 5,
        "text": " NERL",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457600000,
        "text_offset": 577,
        "word_length": 9,
        "text": " networks",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 461000000,
        "text_offset": 586,
        "word_length": 5,
        "text": " rely",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 465600000,
        "text_offset": 591,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 468600000,
        "text_offset": 594,
        "word_length": 5,
        "text": " data",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 472000000,
        "text_offset": 599,
        "word_length": 8,
        "text": " cloning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 476599999,
        "text_offset": 607,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 479600000,
        "text_offset": 611,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481200000,
        "text_offset": 615,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 485500000,
        "text_offset": 623,
        "word_length": 5,
        "text": " part",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 493000000,
        "text_offset": 628,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 496000000,
        "text_offset": 631,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497200000,
        "text_offset": 635,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 499400000,
        "text_offset": 643,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 509799999,
        "text_offset": 649,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 516400000,
        "text_offset": 652,
        "word_length": 5,
        "text": " want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 517800000,
        "text_offset": 657,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 519200000,
        "text_offset": 660,
        "word_length": 9,
        "text": " recreate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 524600000,
        "text_offset": 669,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 527200000,
        "text_offset": 673,
        "word_length": 6,
        "text": " style",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 531800000,
        "text_offset": 679,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 537400000,
        "text_offset": 682,
        "word_length": 7,
        "text": " linear",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 540000000,
        "text_offset": 689,
        "word_length": 15,
        "text": " transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 546200000,
        "text_offset": 704,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 553400000,
        "text_offset": 709,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 555600000,
        "text_offset": 717,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 556800000,
        "text_offset": 721,
        "word_length": 7,
        "text": " biases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 560000000,
        "text_offset": 728,
        "word_length": 9,
        "text": " provide,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 573400000,
        "text_offset": 737,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 575800000,
        "text_offset": 743,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 578000000,
        "text_offset": 747,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 579200000,
        "text_offset": 750,
        "word_length": 9,
        "text": " achieved",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 583600000,
        "text_offset": 759,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588600000,
        "text_offset": 765,
        "word_length": 13,
        "text": " parametrized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 598400000,
        "text_offset": 778,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600800000,
        "text_offset": 782,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 605000000,
        "text_offset": 788,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 611000000,
        "text_offset": 796,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 623400000,
        "text_offset": 803,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 629200000,
        "text_offset": 806,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 630400000,
        "text_offset": 811,
        "word_length": 9,
        "text": " example,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635200000,
        "text_offset": 820,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 637400000,
        "text_offset": 823,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 638000000,
        "text_offset": 828,
        "word_length": 6,
        "text": " focus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 641000000,
        "text_offset": 834,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 643000000,
        "text_offset": 837,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 643800000,
        "text_offset": 841,
        "word_length": 14,
        "text": " computational",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 649800000,
        "text_offset": 855,
        "word_length": 6,
        "text": " basis",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 655600000,
        "text_offset": 861,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 662600000,
        "text_offset": 864,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 664800000,
        "text_offset": 867,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 666200000,
        "text_offset": 871,
        "word_length": 7,
        "text": " reduce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 669000000,
        "text_offset": 878,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 671400000,
        "text_offset": 882,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 673000000,
        "text_offset": 889,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 676000000,
        "text_offset": 892,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 679800000,
        "text_offset": 903,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 684500000,
        "text_offset": 906,
        "word_length": 14,
        "text": " parametrizing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692000000,
        "text_offset": 920,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 694400000,
        "text_offset": 925,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 697400000,
        "text_offset": 934,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 717099999,
        "text_offset": 941,
        "word_length": 3,
        "text": " To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 723600000,
        "text_offset": 944,
        "word_length": 9,
        "text": " decrease",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 727200000,
        "text_offset": 953,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 729800000,
        "text_offset": 957,
        "word_length": 5,
        "text": " size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 733199999,
        "text_offset": 962,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 735200000,
        "text_offset": 965,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 735800000,
        "text_offset": 969,
        "word_length": 7,
        "text": " latent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 738199999,
        "text_offset": 976,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 748199999,
        "text_offset": 983,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 750200000,
        "text_offset": 986,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 752000000,
        "text_offset": 990,
        "word_length": 5,
        "text": " chop",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 754599999,
        "text_offset": 995,
        "word_length": 4,
        "text": " off",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 759200000,
        "text_offset": 999,
        "word_length": 8,
        "text": " qubits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 780000000,
        "text_offset": 1007,
        "word_length": 4,
        "text": " Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 782600000,
        "text_offset": 1011,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 784400000,
        "text_offset": 1014,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 785600000,
        "text_offset": 1019,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 786800000,
        "text_offset": 1021,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 790200000,
        "text_offset": 1029,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 794000000,
        "text_offset": 1037,
        "word_length": 6,
        "text": " pass.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 801400000,
        "text_offset": 1043,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 803600000,
        "text_offset": 1046,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 804800000,
        "text_offset": 1051,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 807000000,
        "text_offset": 1055,
        "word_length": 9,
        "text": " backward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 809800000,
        "text_offset": 1064,
        "word_length": 6,
        "text": " pass,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 825000000,
        "text_offset": 1070,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 826400000,
        "text_offset": 1073,
        "word_length": 8,
        "text": " finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 831400000,
        "text_offset": 1081,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 834200000,
        "text_offset": 1085,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 838199999,
        "text_offset": 1096,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 842000000,
        "text_offset": 1099,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 843199999,
        "text_offset": 1103,
        "word_length": 8,
        "text": " weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 845600000,
        "text_offset": 1111,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 848400000,
        "text_offset": 1116,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 851200000,
        "text_offset": 1124,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 855000000,
        "text_offset": 1127,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 856400000,
        "text_offset": 1131,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 858000000,
        "text_offset": 1136,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 877800000,
        "text_offset": 1146,
        "word_length": 4,
        "text": " Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 879200000,
        "text_offset": 1150,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 881800000,
        "text_offset": 1155,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 886800000,
        "text_offset": 1164,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 888400000,
        "text_offset": 1169,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 889200000,
        "text_offset": 1172,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 891400000,
        "text_offset": 1176,
        "word_length": 8,
        "text": " average",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 894599999,
        "text_offset": 1184,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 899599999,
        "text_offset": 1193,
        "word_length": 8,
        "text": " between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 903800000,
        "text_offset": 1201,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 906600000,
        "text_offset": 1205,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 909200000,
        "text_offset": 1211,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 910800000,
        "text_offset": 1215,
        "word_length": 7,
        "text": " output",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 915000000,
        "text_offset": 1222,
        "word_length": 7,
        "text": " across",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 920000000,
        "text_offset": 1229,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 922600000,
        "text_offset": 1233,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 925000000,
        "text_offset": 1242,
        "word_length": 6,
        "text": " data.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 939000000,
        "text_offset": 1248,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 945000000,
        "text_offset": 1257,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 947000000,
        "text_offset": 1260,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 948199999,
        "text_offset": 1264,
        "word_length": 9,
        "text": " leverage",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 951400000,
        "text_offset": 1273,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 954200000,
        "text_offset": 1277,
        "word_length": 5,
        "text": " fact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 956400000,
        "text_offset": 1282,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 959400000,
        "text_offset": 1287,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 963000000,
        "text_offset": 1292,
        "word_length": 11,
        "text": " amplitudes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 968000000,
        "text_offset": 1303,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 971400000,
        "text_offset": 1306,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 976800000,
        "text_offset": 1314,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 983600000,
        "text_offset": 1317,
        "word_length": 5,
        "text": " half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 985200000,
        "text_offset": 1322,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 987200000,
        "text_offset": 1326,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 989800000,
        "text_offset": 1333,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 993000000,
        "text_offset": 1336,
        "word_length": 10,
        "text": " necessary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 995400000,
        "text_offset": 1346,
        "word_length": 12,
        "text": " parameters.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1007200000,
        "text_offset": 1358,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1009800000,
        "text_offset": 1361,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1011200000,
        "text_offset": 1365,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1012400000,
        "text_offset": 1369,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1014000000,
        "text_offset": 1373,
        "word_length": 8,
        "text": " inverse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1019200000,
        "text_offset": 1381,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1022600000,
        "text_offset": 1384,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1023800000,
        "text_offset": 1388,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1027400000,
        "text_offset": 1396,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1030000000,
        "text_offset": 1402,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1034599999,
        "text_offset": 1405,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1037200000,
        "text_offset": 1409,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1041200000,
        "text_offset": 1417,
        "word_length": 7,
        "text": " block.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1051200000,
        "text_offset": 1424,
        "word_length": 3,
        "text": " In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1058000000,
        "text_offset": 1427,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1059400000,
        "text_offset": 1432,
        "word_length": 10,
        "text": " scenario,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1067800000,
        "text_offset": 1442,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1070200000,
        "text_offset": 1445,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1071600000,
        "text_offset": 1449,
        "word_length": 8,
        "text": " encoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1075600000,
        "text_offset": 1457,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1079400000,
        "text_offset": 1463,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1084000000,
        "text_offset": 1469,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1087600000,
        "text_offset": 1473,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1090000000,
        "text_offset": 1480,
        "word_length": 4,
        "text": " two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1093400000,
        "text_offset": 1484,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1096800000,
        "text_offset": 1491,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1100800000,
        "text_offset": 1497,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1104000000,
        "text_offset": 1500,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1106200000,
        "text_offset": 1504,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1108200000,
        "text_offset": 1509,
        "word_length": 7,
        "text": " qubit,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1120800000,
        "text_offset": 1516,
        "word_length": 5,
        "text": " then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1123600000,
        "text_offset": 1521,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1125600000,
        "text_offset": 1525,
        "word_length": 8,
        "text": " decoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1129600000,
        "text_offset": 1533,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1132600000,
        "text_offset": 1539,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1135400000,
        "text_offset": 1544,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1136600000,
        "text_offset": 1547,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1138400000,
        "text_offset": 1552,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1140200000,
        "text_offset": 1555,
        "word_length": 10,
        "text": " perfectly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1144300000,
        "text_offset": 1565,
        "word_length": 12,
        "text": " reconstruct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1150800000,
        "text_offset": 1577,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1153600000,
        "text_offset": 1581,
        "word_length": 8,
        "text": " initial",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1156200000,
        "text_offset": 1589,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1174400000,
        "text_offset": 1596,
        "word_length": 11,
        "text": " Therefore,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1179000000,
        "text_offset": 1607,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1183400000,
        "text_offset": 1610,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1184600000,
        "text_offset": 1614,
        "word_length": 8,
        "text": " greatly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1188200000,
        "text_offset": 1622,
        "word_length": 9,
        "text": " simplify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1193800000,
        "text_offset": 1631,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1195600000,
        "text_offset": 1635,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1198000000,
        "text_offset": 1640,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1202400000,
        "text_offset": 1649,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1205400000,
        "text_offset": 1652,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1207600000,
        "text_offset": 1658,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1210800000,
        "text_offset": 1662,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1212200000,
        "text_offset": 1667,
        "word_length": 6,
        "text": " test,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1220400000,
        "text_offset": 1673,
        "word_length": 6,
        "text": " which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1221800000,
        "text_offset": 1679,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1222800000,
        "text_offset": 1684,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1225400000,
        "text_offset": 1692,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1226800000,
        "text_offset": 1694,
        "word_length": 6,
        "text": " lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1228800000,
        "text_offset": 1700,
        "word_length": 6,
        "text": " value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1233200000,
        "text_offset": 1706,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1235400000,
        "text_offset": 1709,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1237200000,
        "text_offset": 1713,
        "word_length": 7,
        "text": " bottom",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1245500000,
        "text_offset": 1720,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1252000000,
        "text_offset": 1727,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1256400000,
        "text_offset": 1731,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1258200000,
        "text_offset": 1736,
        "word_length": 9,
        "text": " similar.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1279000000,
        "text_offset": 1745,
        "word_length": 3,
        "text": " It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1280200000,
        "text_offset": 1748,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1281200000,
        "text_offset": 1752,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1284000000,
        "text_offset": 1757,
        "word_length": 3,
        "text": " be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1285400000,
        "text_offset": 1760,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1287200000,
        "text_offset": 1764,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1289800000,
        "text_offset": 1767,
        "word_length": 9,
        "text": " hardware",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1294400000,
        "text_offset": 1776,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1299199999,
        "text_offset": 1783,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1301000000,
        "text_offset": 1788,
        "word_length": 11,
        "text": " simulation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1313200000,
        "text_offset": 1799,
        "word_length": 6,
        "text": " since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1314600000,
        "text_offset": 1805,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1317800000,
        "text_offset": 1808,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1319199999,
        "text_offset": 1813,
        "word_length": 6,
        "text": " works",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1321000000,
        "text_offset": 1819,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1325000000,
        "text_offset": 1822,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1330600000,
        "text_offset": 1834,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1334800000,
        "text_offset": 1841,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1336399999,
        "text_offset": 1846,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1338600000,
        "text_offset": 1854,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1340400000,
        "text_offset": 1858,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1355200000,
        "text_offset": 1865,
        "word_length": 3,
        "text": " So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1356399999,
        "text_offset": 1868,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1357400000,
        "text_offset": 1872,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1360200000,
        "text_offset": 1877,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1365000000,
        "text_offset": 1886,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1368200000,
        "text_offset": 1889,
        "word_length": 5,
        "text": " just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1371399999,
        "text_offset": 1894,
        "word_length": 8,
        "text": " getting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1376200000,
        "text_offset": 1902,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1378200000,
        "text_offset": 1906,
        "word_length": 12,
        "text": " measurement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1381000000,
        "text_offset": 1918,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1384199999,
        "text_offset": 1924,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1386800000,
        "text_offset": 1927,
        "word_length": 8,
        "text": " measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1388200000,
        "text_offset": 1935,
        "word_length": 5,
        "text": " zero",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1392400000,
        "text_offset": 1940,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1395600000,
        "text_offset": 1943,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1396600000,
        "text_offset": 1947,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1399600000,
        "text_offset": 1956,
        "word_length": 6,
        "text": " data,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1408400000,
        "text_offset": 1962,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1410600000,
        "text_offset": 1965,
        "word_length": 6,
        "text": " often",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1415000000,
        "text_offset": 1971,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1417600000,
        "text_offset": 1974,
        "word_length": 10,
        "text": " possible.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1437000000,
        "text_offset": 1984,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1443600000,
        "text_offset": 1993,
        "word_length": 6,
        "text": " these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1445800000,
        "text_offset": 1999,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1452400000,
        "text_offset": 2007,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1457000000,
        "text_offset": 2012,
        "word_length": 10,
        "text": " functions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1462000000,
        "text_offset": 2022,
        "word_length": 3,
        "text": " do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1465800000,
        "text_offset": 2025,
        "word_length": 4,
        "text": " not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1468800000,
        "text_offset": 2029,
        "word_length": 8,
        "text": " provide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1472000000,
        "text_offset": 2037,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1474000000,
        "text_offset": 2039,
        "word_length": 4,
        "text": " way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1476200000,
        "text_offset": 2043,
        "word_length": 4,
        "text": " for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1479400000,
        "text_offset": 2047,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1482800000,
        "text_offset": 2052,
        "word_length": 13,
        "text": " propagation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1495400000,
        "text_offset": 2065,
        "word_length": 3,
        "text": " so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1497200000,
        "text_offset": 2068,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1500400000,
        "text_offset": 2071,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1504400000,
        "text_offset": 2077,
        "word_length": 5,
        "text": " know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1505800000,
        "text_offset": 2082,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1507400000,
        "text_offset": 2086,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1511800000,
        "text_offset": 2097,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1515200000,
        "text_offset": 2100,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1516800000,
        "text_offset": 2104,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1521800000,
        "text_offset": 2115,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1525400000,
        "text_offset": 2120,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1529000000,
        "text_offset": 2128,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1532400000,
        "text_offset": 2131,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1533200000,
        "text_offset": 2135,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1535400000,
        "text_offset": 2140,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1551200000,
        "text_offset": 2150,
        "word_length": 9,
        "text": " Instead,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1559199999,
        "text_offset": 2159,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1564000000,
        "text_offset": 2162,
        "word_length": 4,
        "text": " can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1565600000,
        "text_offset": 2166,
        "word_length": 4,
        "text": " use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1567600000,
        "text_offset": 2170,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1569800000,
        "text_offset": 2172,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1574400000,
        "text_offset": 2183,
        "word_length": 5,
        "text": " free",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1578800000,
        "text_offset": 2188,
        "word_length": 10,
        "text": " optimizer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1586399999,
        "text_offset": 2198,
        "word_length": 5,
        "text": " like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1593000000,
        "text_offset": 2203,
        "word_length": 8,
        "text": " Kabila.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " In quantum computing, two major challenges are efficiently storing data in fewer qubits and error correcting. Autonin coders can solve both at once and therefore are a very natural architecture to adapt. I will be brief with many explanations in the adaptation of classical to quantum autoencoder so I will try to leave references down on the bottom right for further exploration. There are three key concepts for training a usable autoencoder. The forward pass, the back propagation, and the optimizer. We already run into an issue trying to make a quantum forward pass. NERL networks rely on data cloning for the weights part of the forward pass. We want to recreate the style of linear transformation that weights and biases provide, which can be achieved using parametrized and qubit unitary gates. In this example, we will focus on the computational basis so we can reduce the number of parameters by parametrizing with rotation gates. To decrease the size of our latent space, we can chop off qubits. Now we have a working forward pass. We need our backward pass, or finding the derivative of the weights with respect to the cost function. Our cost function will be the average fidelity between the input and output across the training data. However, we can leverage the fact that real amplitudes is unitary to half the number of necessary parameters. We can use the inverse of the encoder block as our decoder block. In this scenario, if the encoder block makes the bottom two qubits equal to the zero qubit, then the decoder block will be able to perfectly reconstruct the initial state. Therefore, we can greatly simplify the cost function by using the swap test, which will measure a lower value if the bottom qubits are more similar. It can also be run in hardware rather than simulation since it just works on measurement rather than knowing the state. So the cost function is just getting the measurement block to measure zero on the training data, as often as possible. However, these quantum cost functions do not provide a way for back propagation, so we don't know the derivative of the parameters with respect to the cost function. Instead, we can use a derivative free optimizer like Kabila.",
    "final_audio": "in-quantum-computing-two-major-challenges-are-494bc1e7.mp3"
  },
  {
    "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits! <bookmark mark='A'/> Training goes incredibly smoothly on both Domain Wall and MNIST datasets. <bookmark mark='B'/> So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actually provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! <bookmark mark='C'/>",
    "input_data": {
      "input_text": "With our Quantum Autoencoder set up with a forward pass, and optimization step, let's run it on MNIST digits!  Training goes incredibly smoothly on both Domain Wall and MNIST datasets.  So we have a simple quantum autoencoder working as well as a simple classical autoencoder, and it actually provides significant advantages due to the unitary encoder. So are we done? NOOOOO, we still have error correcting quantum autoencoders!! ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-fec598c3.mp3",
    "word_boundaries": [
      {
        "audio_offset": 8199999,
        "text_offset": 0,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9600000,
        "text_offset": 5,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11600000,
        "text_offset": 9,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15800000,
        "text_offset": 17,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21800000,
        "text_offset": 29,
        "word_length": 4,
        "text": " set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "text_offset": 33,
        "word_length": 3,
        "text": " up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "text_offset": 36,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29200000,
        "text_offset": 41,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30800000,
        "text_offset": 43,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32799999,
        "text_offset": 51,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37400000,
        "text_offset": 56,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43400000,
        "text_offset": 60,
        "word_length": 13,
        "text": " optimization",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48400000,
        "text_offset": 73,
        "word_length": 6,
        "text": " step,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57400000,
        "text_offset": 79,
        "word_length": 6,
        "text": " let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59400000,
        "text_offset": 85,
        "word_length": 4,
        "text": " run",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "text_offset": 89,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63000000,
        "text_offset": 92,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64600000,
        "text_offset": 95,
        "word_length": 6,
        "text": " minst",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69200000,
        "text_offset": 101,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83400000,
        "text_offset": 109,
        "word_length": 9,
        "text": " Training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85200000,
        "text_offset": 118,
        "word_length": 5,
        "text": " goes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87600000,
        "text_offset": 123,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93400000,
        "text_offset": 134,
        "word_length": 9,
        "text": " smoothly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "text_offset": 143,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101400000,
        "text_offset": 146,
        "word_length": 5,
        "text": " both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "text_offset": 151,
        "word_length": 7,
        "text": " domain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108600000,
        "text_offset": 158,
        "word_length": 5,
        "text": " wall",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111600000,
        "text_offset": 163,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 167,
        "word_length": 6,
        "text": " minst",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 173,
        "word_length": 8,
        "text": " digits.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133600000,
        "text_offset": 181,
        "word_length": 4,
        "text": " So,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139400000,
        "text_offset": 185,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144000000,
        "text_offset": 188,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145200000,
        "text_offset": 193,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146400000,
        "text_offset": 195,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150200000,
        "text_offset": 202,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154200000,
        "text_offset": 210,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 161000000,
        "text_offset": 222,
        "word_length": 8,
        "text": " working",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 230,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171400000,
        "text_offset": 233,
        "word_length": 5,
        "text": " well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172600000,
        "text_offset": 238,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176200000,
        "text_offset": 241,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177000000,
        "text_offset": 243,
        "word_length": 7,
        "text": " simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 179600000,
        "text_offset": 250,
        "word_length": 10,
        "text": " classical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184600000,
        "text_offset": 260,
        "word_length": 13,
        "text": " autoencoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198000000,
        "text_offset": 273,
        "word_length": 4,
        "text": " And",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 200400000,
        "text_offset": 277,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203400000,
        "text_offset": 280,
        "word_length": 9,
        "text": " actually",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206600000,
        "text_offset": 289,
        "word_length": 9,
        "text": " provides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 210000000,
        "text_offset": 298,
        "word_length": 12,
        "text": " significant",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 216800000,
        "text_offset": 310,
        "word_length": 11,
        "text": " advantages",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 224000000,
        "text_offset": 321,
        "word_length": 4,
        "text": " due",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228400000,
        "text_offset": 325,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230400000,
        "text_offset": 328,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231400000,
        "text_offset": 332,
        "word_length": 8,
        "text": " unitary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 236800000,
        "text_offset": 340,
        "word_length": 9,
        "text": " encoder.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252999999,
        "text_offset": 349,
        "word_length": 4,
        "text": " So,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255400000,
        "text_offset": 353,
        "word_length": 4,
        "text": " are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 256200000,
        "text_offset": 357,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 257399999,
        "text_offset": 360,
        "word_length": 6,
        "text": " done?",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 269600000,
        "text_offset": 366,
        "word_length": 4,
        "text": " No,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 279800000,
        "text_offset": 370,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282200000,
        "text_offset": 373,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284800000,
        "text_offset": 379,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288200000,
        "text_offset": 384,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 292600000,
        "text_offset": 390,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299600000,
        "text_offset": 401,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306200000,
        "text_offset": 409,
        "word_length": 14,
        "text": " autoencoders.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " With our quantum autoencoder set up with a forward pass and optimization step, let's run it on minst digits. Training goes incredibly smoothly on both domain wall and minst digits. So, we have a simple quantum autoencoder working as well as a simple classical autoencoder. And it actually provides significant advantages due to the unitary encoder. So, are we done? No, we still have error correcting quantum autoencoders.",
    "final_audio": "with-our-quantum-autoencoder-set-up-with-a-forward-fec598c3.mp3"
  },
  {
    "input_text": "We need to make a couple of minor modifications to our current training circut to support error correction. <bookmark mark='A'/> Since we intend to change the data, we need to go back to training using <bookmark mark='B'/> fidelity instead of the SWAP test. <bookmark mark='C'/>We also need to encode our singular input qbit into a logical codespace, represented by |0_L\u27e9 = |000\u27e9 and |1_L\u27e9 = |111\u27e9. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to arifically induce errors, as the autoencoder will simply train on the errors that occur the quantum hardware. This adaptibility makes quantum autoencoders an incredibly powerful error correcting tool. <bookmark mark='D'/> Running with a simulated p=0.05 bit flip error on each qbit, we get the following optimizer graph. By simply training on the |0_L\u27e9, |1_L\u27e9, and |+_L\u27e9 inputs, the Quantum Autoencoder learns perfect single qbit bit flip error correction, while still recovering the input state when no errors occur. <bookmark mark='E'/>",
    "input_data": {
      "input_text": "We need to make a couple of minor modifications to our current training circut to support error correction.  Since we intend to change the data, we need to go back to training using  fidelity instead of the SWAP test. We also need to encode our singular input qbit into a logical codespace, represented by |0_L\u27e9 = |000\u27e9 and |1_L\u27e9 = |111\u27e9. Finally, we include a block that introduces errors into the training. However, as a note, if we are training on real quantum hardware we don't need to arifically induce errors, as the autoencoder will simply train on the errors that occur the quantum hardware. This adaptibility makes quantum autoencoders an incredibly powerful error correcting tool.  Running with a simulated p=0.05 bit flip error on each qbit, we get the following optimizer graph. By simply training on the |0_L\u27e9, |1_L\u27e9, and |+_L\u27e9 inputs, the Quantum Autoencoder learns perfect single qbit bit flip error correction, while still recovering the input state when no errors occur. ",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "we-need-to-make-a-couple-of-minor-modifications-to-562df477.mp3",
    "word_boundaries": [
      {
        "audio_offset": 5800000,
        "text_offset": 0,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12400000,
        "text_offset": 3,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14200000,
        "text_offset": 8,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "text_offset": 11,
        "word_length": 5,
        "text": " make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16000000,
        "text_offset": 16,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17600000,
        "text_offset": 18,
        "word_length": 7,
        "text": " couple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "text_offset": 25,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26200000,
        "text_offset": 28,
        "word_length": 6,
        "text": " minor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "text_offset": 34,
        "word_length": 14,
        "text": " modifications",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35800000,
        "text_offset": 48,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41200000,
        "text_offset": 51,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42200000,
        "text_offset": 55,
        "word_length": 8,
        "text": " current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45800000,
        "text_offset": 63,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49200000,
        "text_offset": 72,
        "word_length": 8,
        "text": " circuit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52400000,
        "text_offset": 80,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55599999,
        "text_offset": 83,
        "word_length": 8,
        "text": " support",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58800000,
        "text_offset": 91,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61400000,
        "text_offset": 97,
        "word_length": 12,
        "text": " correction.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73200000,
        "text_offset": 109,
        "word_length": 6,
        "text": " Since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79600000,
        "text_offset": 115,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80600000,
        "text_offset": 118,
        "word_length": 7,
        "text": " intend",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83600000,
        "text_offset": 125,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85399999,
        "text_offset": 128,
        "word_length": 7,
        "text": " change",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "text_offset": 135,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91600000,
        "text_offset": 139,
        "word_length": 6,
        "text": " data,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100399999,
        "text_offset": 145,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102400000,
        "text_offset": 148,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104200000,
        "text_offset": 153,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105000000,
        "text_offset": 156,
        "word_length": 3,
        "text": " go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106400000,
        "text_offset": 159,
        "word_length": 5,
        "text": " back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108200000,
        "text_offset": 164,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110800000,
        "text_offset": 167,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113600000,
        "text_offset": 176,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "text_offset": 182,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122700000,
        "text_offset": 191,
        "word_length": 8,
        "text": " instead",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129200000,
        "text_offset": 199,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131199999,
        "text_offset": 202,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132200000,
        "text_offset": 206,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134600000,
        "text_offset": 211,
        "word_length": 6,
        "text": " test.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 147200000,
        "text_offset": 217,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153600000,
        "text_offset": 220,
        "word_length": 5,
        "text": " also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156600000,
        "text_offset": 225,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158600000,
        "text_offset": 230,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160000000,
        "text_offset": 233,
        "word_length": 7,
        "text": " encode",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164200000,
        "text_offset": 240,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166200000,
        "text_offset": 244,
        "word_length": 9,
        "text": " singular",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171800000,
        "text_offset": 253,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176200000,
        "text_offset": 259,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180600000,
        "text_offset": 265,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 186600000,
        "text_offset": 270,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190799999,
        "text_offset": 272,
        "word_length": 8,
        "text": " logical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194400000,
        "text_offset": 280,
        "word_length": 5,
        "text": " code",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197800000,
        "text_offset": 285,
        "word_length": 7,
        "text": " space,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206800000,
        "text_offset": 292,
        "word_length": 12,
        "text": " represented",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213600000,
        "text_offset": 304,
        "word_length": 3,
        "text": " by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 214800000,
        "text_offset": 307,
        "word_length": 3,
        "text": " 0L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 221800000,
        "text_offset": 310,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 225200000,
        "text_offset": 313,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 227800000,
        "text_offset": 319,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 230000000,
        "text_offset": 322,
        "word_length": 3,
        "text": " 0,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 233200000,
        "text_offset": 325,
        "word_length": 3,
        "text": " 0,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 235600000,
        "text_offset": 328,
        "word_length": 3,
        "text": " 0,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 237399999,
        "text_offset": 331,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 243200000,
        "text_offset": 335,
        "word_length": 3,
        "text": " 1L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 249800000,
        "text_offset": 338,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 252600000,
        "text_offset": 341,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 254600000,
        "text_offset": 347,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255799999,
        "text_offset": 350,
        "word_length": 5,
        "text": " 111.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 273200000,
        "text_offset": 355,
        "word_length": 9,
        "text": " Finally,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 284400000,
        "text_offset": 364,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287400000,
        "text_offset": 367,
        "word_length": 8,
        "text": " include",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 291000000,
        "text_offset": 375,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 293200000,
        "text_offset": 377,
        "word_length": 6,
        "text": " block",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 295200000,
        "text_offset": 383,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 300600000,
        "text_offset": 388,
        "word_length": 11,
        "text": " introduces",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 306000000,
        "text_offset": 399,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 311000000,
        "text_offset": 406,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314800000,
        "text_offset": 411,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 415,
        "word_length": 10,
        "text": " training.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 329600000,
        "text_offset": 425,
        "word_length": 9,
        "text": " However,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 340800000,
        "text_offset": 434,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 344000000,
        "text_offset": 437,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 345000000,
        "text_offset": 439,
        "word_length": 6,
        "text": " note,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 353399999,
        "text_offset": 445,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 354799999,
        "text_offset": 448,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 356000000,
        "text_offset": 451,
        "word_length": 5,
        "text": " were",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 357000000,
        "text_offset": 456,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 360400000,
        "text_offset": 465,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 363400000,
        "text_offset": 468,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 367400000,
        "text_offset": 473,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 373200000,
        "text_offset": 481,
        "word_length": 10,
        "text": " hardware,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 380400000,
        "text_offset": 491,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 381599999,
        "text_offset": 494,
        "word_length": 6,
        "text": " don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383400000,
        "text_offset": 500,
        "word_length": 5,
        "text": " need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384600000,
        "text_offset": 505,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 385400000,
        "text_offset": 508,
        "word_length": 13,
        "text": " artificially",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 392600000,
        "text_offset": 521,
        "word_length": 7,
        "text": " induce",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 395600000,
        "text_offset": 528,
        "word_length": 8,
        "text": " errors,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 403600000,
        "text_offset": 536,
        "word_length": 3,
        "text": " as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 407600000,
        "text_offset": 539,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 409600000,
        "text_offset": 543,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 414200000,
        "text_offset": 555,
        "word_length": 5,
        "text": " will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 416000000,
        "text_offset": 560,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 418600000,
        "text_offset": 567,
        "word_length": 6,
        "text": " train",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422400000,
        "text_offset": 573,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 424600000,
        "text_offset": 576,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 426000000,
        "text_offset": 580,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430400000,
        "text_offset": 587,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 434000000,
        "text_offset": 592,
        "word_length": 6,
        "text": " occur",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 438600000,
        "text_offset": 598,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 441000000,
        "text_offset": 601,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 442000000,
        "text_offset": 605,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 444200000,
        "text_offset": 613,
        "word_length": 10,
        "text": " hardware.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 460400000,
        "text_offset": 623,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 463800000,
        "text_offset": 628,
        "word_length": 13,
        "text": " adaptability",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 470800000,
        "text_offset": 641,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 475200000,
        "text_offset": 647,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 480800000,
        "text_offset": 655,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 488600000,
        "text_offset": 668,
        "word_length": 3,
        "text": " an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 490199999,
        "text_offset": 671,
        "word_length": 11,
        "text": " incredibly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 495600000,
        "text_offset": 682,
        "word_length": 9,
        "text": " powerful",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 502200000,
        "text_offset": 691,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 504799999,
        "text_offset": 697,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 509000000,
        "text_offset": 708,
        "word_length": 6,
        "text": " tool.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 524200000,
        "text_offset": 714,
        "word_length": 8,
        "text": " Running",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 532200000,
        "text_offset": 722,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 535200000,
        "text_offset": 727,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 536200000,
        "text_offset": 729,
        "word_length": 10,
        "text": " simulated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 541200000,
        "text_offset": 739,
        "word_length": 2,
        "text": " p",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 546000000,
        "text_offset": 741,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 548000000,
        "text_offset": 744,
        "word_length": 6,
        "text": " equal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 549800000,
        "text_offset": 750,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551600000,
        "text_offset": 753,
        "word_length": 2,
        "text": " 0",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 554400000,
        "text_offset": 755,
        "word_length": 3,
        "text": ".05",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 561000000,
        "text_offset": 758,
        "word_length": 4,
        "text": "-bit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 565200000,
        "text_offset": 762,
        "word_length": 5,
        "text": " flip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 567600000,
        "text_offset": 767,
        "word_length": 7,
        "text": " error,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 570800000,
        "text_offset": 774,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 573200000,
        "text_offset": 777,
        "word_length": 5,
        "text": " each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 576400000,
        "text_offset": 782,
        "word_length": 7,
        "text": " qubit,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586000000,
        "text_offset": 789,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 587200000,
        "text_offset": 792,
        "word_length": 4,
        "text": " get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 588600000,
        "text_offset": 796,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 590600000,
        "text_offset": 800,
        "word_length": 10,
        "text": " following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 594200000,
        "text_offset": 810,
        "word_length": 10,
        "text": " optimizer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 600400000,
        "text_offset": 820,
        "word_length": 7,
        "text": " graph.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 622400000,
        "text_offset": 827,
        "word_length": 3,
        "text": " By",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 623600000,
        "text_offset": 830,
        "word_length": 7,
        "text": " simply",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 626400000,
        "text_offset": 837,
        "word_length": 9,
        "text": " training",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 630200000,
        "text_offset": 846,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 633600000,
        "text_offset": 849,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 635200000,
        "text_offset": 853,
        "word_length": 4,
        "text": " 0L,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 644800000,
        "text_offset": 857,
        "word_length": 4,
        "text": " 1L,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 653600000,
        "text_offset": 861,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 654200000,
        "text_offset": 865,
        "word_length": 5,
        "text": " plus",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 657000000,
        "text_offset": 870,
        "word_length": 2,
        "text": " L",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 659400000,
        "text_offset": 872,
        "word_length": 8,
        "text": " inputs,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670800000,
        "text_offset": 880,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 672000000,
        "text_offset": 884,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674599999,
        "text_offset": 892,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681200000,
        "text_offset": 904,
        "word_length": 7,
        "text": " learns",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 686600000,
        "text_offset": 911,
        "word_length": 8,
        "text": " perfect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692200000,
        "text_offset": 919,
        "word_length": 7,
        "text": " single",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 697800000,
        "text_offset": 926,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 703400000,
        "text_offset": 932,
        "word_length": 4,
        "text": " bit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 706000000,
        "text_offset": 936,
        "word_length": 5,
        "text": " flip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 708800000,
        "text_offset": 941,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 711400000,
        "text_offset": 947,
        "word_length": 11,
        "text": " correction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 715800000,
        "text_offset": 958,
        "word_length": 6,
        "text": " while",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 723199999,
        "text_offset": 964,
        "word_length": 6,
        "text": " still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 725800000,
        "text_offset": 970,
        "word_length": 11,
        "text": " recovering",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 730400000,
        "text_offset": 981,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 732800000,
        "text_offset": 985,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 735000000,
        "text_offset": 991,
        "word_length": 6,
        "text": " state",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 738000000,
        "text_offset": 997,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 741600000,
        "text_offset": 1002,
        "word_length": 3,
        "text": " no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 745600000,
        "text_offset": 1005,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 748400000,
        "text_offset": 1012,
        "word_length": 7,
        "text": " occur.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " We need to make a couple of minor modifications to our current training circuit to support error correction. Since we intend to change the data, we need to go back to training using fidelity instead of the swap test. We also need to encode our singular input qubit into a logical code space, represented by 0L is equal to 0, 0, 0, and 1L is equal to 111. Finally, we include a block that introduces errors into the training. However, as a note, if we were training on real quantum hardware, we don't need to artificially induce errors, as the autoencoder will simply train on the errors that occur in the quantum hardware. This adaptability makes quantum autoencoders an incredibly powerful error correcting tool. Running with a simulated p is equal to 0.05-bit flip error, on each qubit, we get the following optimizer graph. By simply training on the 0L, 1L, and plus L inputs, the quantum autoencoder learns perfect single qubit bit flip error correction while still recovering the input state when no errors occur.",
    "final_audio": "we-need-to-make-a-couple-of-minor-modifications-to-562df477.mp3"
  },
  {
    "input_text": "As a recap, we created a quantum forward pass using parameterized rotation gates. Then we calculated a cost function using either the SWAP test or calculating the fidelity of states. Finally, we used COBYLA to optimize our parameters without knowing their derivative with respect to the cost function. With this quantum autoencoder, we were able to input qubits encoded into a logical codespace, and train the autoencoder to remove the errors and return the original state. We ran this all in qiskit simulation, but if this were running on a quantum computer, it could train on the real errors that happen in the qbits rather than our artificially incited ones. Please see \"Quantum Error Correction with Quantum Autoencoders\" for more details on the topic, but they have determined that this 3-1-3 autoencoder error correction is always more accurate than 3 qbit actively corrected encoding schemes when the noise inside of the error correcting network is low (this is because the increased number of gates in the autoencoder makes internal noise more significant).",
    "input_data": {
      "input_text": "As a recap, we created a quantum forward pass using parameterized rotation gates. Then we calculated a cost function using either the SWAP test or calculating the fidelity of states. Finally, we used COBYLA to optimize our parameters without knowing their derivative with respect to the cost function. With this quantum autoencoder, we were able to input qubits encoded into a logical codespace, and train the autoencoder to remove the errors and return the original state. We ran this all in qiskit simulation, but if this were running on a quantum computer, it could train on the real errors that happen in the qbits rather than our artificially incited ones. Please see \"Quantum Error Correction with Quantum Autoencoders\" for more details on the topic, but they have determined that this 3-1-3 autoencoder error correction is always more accurate than 3 qbit actively corrected encoding schemes when the noise inside of the error correcting network is low (this is because the increased number of gates in the autoencoder makes internal noise more significant).",
      "config": {
        "format": 8,
        "channels": 1,
        "rate": 44100,
        "chunk": 512
      },
      "service": "recorder"
    },
    "original_audio": "as-a-recap-we-created-a-quantum-forward-pass-using-eaba557a.mp3",
    "word_boundaries": [
      {
        "audio_offset": 9800000,
        "text_offset": 0,
        "word_length": 3,
        "text": " As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11399999,
        "text_offset": 3,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12600000,
        "text_offset": 5,
        "word_length": 7,
        "text": " recap,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19400000,
        "text_offset": 12,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20400000,
        "text_offset": 15,
        "word_length": 8,
        "text": " created",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24800000,
        "text_offset": 23,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27400000,
        "text_offset": 25,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30200000,
        "text_offset": 33,
        "word_length": 8,
        "text": " forward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34400000,
        "text_offset": 41,
        "word_length": 5,
        "text": " pass",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36800000,
        "text_offset": 46,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44400000,
        "text_offset": 52,
        "word_length": 14,
        "text": " parameterized",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51800000,
        "text_offset": 66,
        "word_length": 9,
        "text": " rotation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55800000,
        "text_offset": 75,
        "word_length": 7,
        "text": " gates.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69800000,
        "text_offset": 82,
        "word_length": 6,
        "text": " Then,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74200000,
        "text_offset": 88,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75800000,
        "text_offset": 91,
        "word_length": 11,
        "text": " calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79600000,
        "text_offset": 102,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82600000,
        "text_offset": 104,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84200000,
        "text_offset": 109,
        "word_length": 9,
        "text": " function",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90399999,
        "text_offset": 118,
        "word_length": 6,
        "text": " using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92400000,
        "text_offset": 124,
        "word_length": 7,
        "text": " either",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "text_offset": 131,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100600000,
        "text_offset": 135,
        "word_length": 5,
        "text": " swap",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103200000,
        "text_offset": 140,
        "word_length": 5,
        "text": " test",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "text_offset": 145,
        "word_length": 3,
        "text": " or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "text_offset": 148,
        "word_length": 12,
        "text": " calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121600000,
        "text_offset": 160,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124800000,
        "text_offset": 164,
        "word_length": 9,
        "text": " fidelity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127000000,
        "text_offset": 173,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129000000,
        "text_offset": 176,
        "word_length": 8,
        "text": " states.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143600000,
        "text_offset": 184,
        "word_length": 9,
        "text": " Finally,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154800000,
        "text_offset": 193,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156400000,
        "text_offset": 196,
        "word_length": 5,
        "text": " used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162200000,
        "text_offset": 201,
        "word_length": 8,
        "text": " CobyLat",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168600000,
        "text_offset": 209,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170400000,
        "text_offset": 212,
        "word_length": 9,
        "text": " optimize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174400000,
        "text_offset": 221,
        "word_length": 4,
        "text": " our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177600000,
        "text_offset": 225,
        "word_length": 11,
        "text": " parameters",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181200000,
        "text_offset": 236,
        "word_length": 8,
        "text": " without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 188200000,
        "text_offset": 244,
        "word_length": 8,
        "text": " knowing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194200000,
        "text_offset": 252,
        "word_length": 6,
        "text": " their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 198000000,
        "text_offset": 258,
        "word_length": 11,
        "text": " derivative",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 202399999,
        "text_offset": 269,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204800000,
        "text_offset": 274,
        "word_length": 8,
        "text": " respect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 207399999,
        "text_offset": 282,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209800000,
        "text_offset": 285,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 211200000,
        "text_offset": 289,
        "word_length": 5,
        "text": " cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212399999,
        "text_offset": 294,
        "word_length": 10,
        "text": " function.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 228400000,
        "text_offset": 304,
        "word_length": 5,
        "text": " With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 229400000,
        "text_offset": 309,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 231400000,
        "text_offset": 314,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 234400000,
        "text_offset": 322,
        "word_length": 13,
        "text": " autoencoder,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247399999,
        "text_offset": 335,
        "word_length": 3,
        "text": " we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 247399999,
        "text_offset": 338,
        "word_length": 5,
        "text": " were",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 248200000,
        "text_offset": 343,
        "word_length": 5,
        "text": " able",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 251200000,
        "text_offset": 348,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 255600000,
        "text_offset": 351,
        "word_length": 6,
        "text": " input",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 263299999,
        "text_offset": 357,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 270800000,
        "text_offset": 364,
        "word_length": 8,
        "text": " encoded",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 277800000,
        "text_offset": 372,
        "word_length": 5,
        "text": " into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 281000000,
        "text_offset": 377,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 282200000,
        "text_offset": 379,
        "word_length": 8,
        "text": " logical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 287400000,
        "text_offset": 387,
        "word_length": 5,
        "text": " code",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 288800000,
        "text_offset": 392,
        "word_length": 6,
        "text": " space",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 299600000,
        "text_offset": 398,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 301200000,
        "text_offset": 402,
        "word_length": 6,
        "text": " train",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 305800000,
        "text_offset": 408,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 308600000,
        "text_offset": 412,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 314400000,
        "text_offset": 424,
        "word_length": 3,
        "text": " to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 316600000,
        "text_offset": 427,
        "word_length": 7,
        "text": " remove",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 319200000,
        "text_offset": 434,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 323000000,
        "text_offset": 438,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 326000000,
        "text_offset": 445,
        "word_length": 4,
        "text": " and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 332800000,
        "text_offset": 449,
        "word_length": 7,
        "text": " return",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 336200000,
        "text_offset": 456,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 338000000,
        "text_offset": 460,
        "word_length": 9,
        "text": " original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 342800000,
        "text_offset": 469,
        "word_length": 7,
        "text": " state.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 352100000,
        "text_offset": 476,
        "word_length": 3,
        "text": " We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 359600000,
        "text_offset": 479,
        "word_length": 4,
        "text": " ran",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 361800000,
        "text_offset": 483,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 363600000,
        "text_offset": 488,
        "word_length": 4,
        "text": " all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 366599999,
        "text_offset": 492,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 368600000,
        "text_offset": 495,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 370000000,
        "text_offset": 497,
        "word_length": 7,
        "text": " kiskit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 372800000,
        "text_offset": 504,
        "word_length": 12,
        "text": " simulation,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 383799999,
        "text_offset": 516,
        "word_length": 4,
        "text": " but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 384799999,
        "text_offset": 520,
        "word_length": 3,
        "text": " if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 387200000,
        "text_offset": 523,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 388600000,
        "text_offset": 528,
        "word_length": 5,
        "text": " were",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 389799999,
        "text_offset": 533,
        "word_length": 8,
        "text": " running",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 391800000,
        "text_offset": 541,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 393600000,
        "text_offset": 544,
        "word_length": 2,
        "text": " a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 394799999,
        "text_offset": 546,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 398400000,
        "text_offset": 554,
        "word_length": 10,
        "text": " computer,",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 410600000,
        "text_offset": 564,
        "word_length": 3,
        "text": " it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 412000000,
        "text_offset": 567,
        "word_length": 6,
        "text": " could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 415200000,
        "text_offset": 573,
        "word_length": 6,
        "text": " train",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 419000000,
        "text_offset": 579,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 421200000,
        "text_offset": 582,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 422200000,
        "text_offset": 586,
        "word_length": 5,
        "text": " real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 425000000,
        "text_offset": 591,
        "word_length": 7,
        "text": " errors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 429400000,
        "text_offset": 598,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 430600000,
        "text_offset": 603,
        "word_length": 7,
        "text": " happen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 434400000,
        "text_offset": 610,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 435800000,
        "text_offset": 613,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 436599999,
        "text_offset": 617,
        "word_length": 7,
        "text": " qubits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 440600000,
        "text_offset": 624,
        "word_length": 7,
        "text": " rather",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 444200000,
        "text_offset": 631,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 446400000,
        "text_offset": 636,
        "word_length": 13,
        "text": " artificially",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 453400000,
        "text_offset": 649,
        "word_length": 8,
        "text": " induced",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 457000000,
        "text_offset": 657,
        "word_length": 6,
        "text": " ones.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 474599999,
        "text_offset": 663,
        "word_length": 7,
        "text": " Please",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 477200000,
        "text_offset": 670,
        "word_length": 4,
        "text": " see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 481400000,
        "text_offset": 674,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 487000000,
        "text_offset": 682,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 488600000,
        "text_offset": 688,
        "word_length": 11,
        "text": " correction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 493200000,
        "text_offset": 699,
        "word_length": 5,
        "text": " with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 497400000,
        "text_offset": 704,
        "word_length": 8,
        "text": " quantum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 501200000,
        "text_offset": 712,
        "word_length": 13,
        "text": " autoencoders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 508000000,
        "text_offset": 725,
        "word_length": 5,
        "text": " from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 510000000,
        "text_offset": 730,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 511000000,
        "text_offset": 735,
        "word_length": 8,
        "text": " details",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 514400000,
        "text_offset": 743,
        "word_length": 3,
        "text": " on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 517200000,
        "text_offset": 746,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 517800000,
        "text_offset": 750,
        "word_length": 7,
        "text": " topic.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 529000000,
        "text_offset": 757,
        "word_length": 4,
        "text": " But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 530600000,
        "text_offset": 761,
        "word_length": 5,
        "text": " they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 538000000,
        "text_offset": 766,
        "word_length": 5,
        "text": " have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 546200000,
        "text_offset": 771,
        "word_length": 11,
        "text": " determined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 551200000,
        "text_offset": 782,
        "word_length": 5,
        "text": " that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 554800000,
        "text_offset": 787,
        "word_length": 5,
        "text": " this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 563000000,
        "text_offset": 792,
        "word_length": 4,
        "text": " 313",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 573800000,
        "text_offset": 796,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 586000000,
        "text_offset": 808,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 587400000,
        "text_offset": 814,
        "word_length": 11,
        "text": " correction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 591800000,
        "text_offset": 825,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 598200000,
        "text_offset": 828,
        "word_length": 7,
        "text": " always",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 605000000,
        "text_offset": 835,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 608200000,
        "text_offset": 840,
        "word_length": 9,
        "text": " accurate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 618800000,
        "text_offset": 849,
        "word_length": 5,
        "text": " than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 620200000,
        "text_offset": 854,
        "word_length": 2,
        "text": " 3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 623800000,
        "text_offset": 856,
        "word_length": 6,
        "text": " qubit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 628400000,
        "text_offset": 862,
        "word_length": 9,
        "text": " actively",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 633200000,
        "text_offset": 871,
        "word_length": 10,
        "text": " corrected",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 638800000,
        "text_offset": 881,
        "word_length": 9,
        "text": " encoding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 642400000,
        "text_offset": 890,
        "word_length": 8,
        "text": " schemes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 652400000,
        "text_offset": 898,
        "word_length": 5,
        "text": " when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 653800000,
        "text_offset": 903,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 655600000,
        "text_offset": 907,
        "word_length": 6,
        "text": " noise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 658800000,
        "text_offset": 913,
        "word_length": 7,
        "text": " inside",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 663800000,
        "text_offset": 920,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 666200000,
        "text_offset": 923,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 667400000,
        "text_offset": 927,
        "word_length": 6,
        "text": " error",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 670200000,
        "text_offset": 933,
        "word_length": 11,
        "text": " correcting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 674599999,
        "text_offset": 944,
        "word_length": 8,
        "text": " network",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 677800000,
        "text_offset": 952,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 681799999,
        "text_offset": 955,
        "word_length": 5,
        "text": " low.",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 692200000,
        "text_offset": 960,
        "word_length": 5,
        "text": " This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 693800000,
        "text_offset": 965,
        "word_length": 3,
        "text": " is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 695399999,
        "text_offset": 968,
        "word_length": 8,
        "text": " because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 697800000,
        "text_offset": 976,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 701000000,
        "text_offset": 980,
        "word_length": 10,
        "text": " increased",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 705400000,
        "text_offset": 990,
        "word_length": 7,
        "text": " number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 710000000,
        "text_offset": 997,
        "word_length": 3,
        "text": " of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 713000000,
        "text_offset": 1000,
        "word_length": 6,
        "text": " gates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 714200000,
        "text_offset": 1006,
        "word_length": 3,
        "text": " in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 718199999,
        "text_offset": 1009,
        "word_length": 4,
        "text": " the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 719599999,
        "text_offset": 1013,
        "word_length": 12,
        "text": " autoencoder",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 724800000,
        "text_offset": 1025,
        "word_length": 6,
        "text": " makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 728600000,
        "text_offset": 1031,
        "word_length": 9,
        "text": " internal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 733199999,
        "text_offset": 1040,
        "word_length": 6,
        "text": " noise",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 736800000,
        "text_offset": 1046,
        "word_length": 5,
        "text": " more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 739800000,
        "text_offset": 1051,
        "word_length": 13,
        "text": " significant.",
        "boundary_type": "Word"
      }
    ],
    "transcribed_text": " As a recap, we created a quantum forward pass using parameterized rotation gates. Then, we calculated a cost function using either the swap test or calculating the fidelity of states. Finally, we used CobyLat to optimize our parameters without knowing their derivative with respect to the cost function. With this quantum autoencoder, we were able to input qubits encoded into a logical code space and train the autoencoder to remove the errors and return the original state. We ran this all in a kiskit simulation, but if this were running on a quantum computer, it could train on the real errors that happen in the qubits rather than artificially induced ones. Please see quantum error correction with quantum autoencoders from more details on the topic. But they have determined that this 313 autoencoder error correction is always more accurate than 3 qubit actively corrected encoding schemes when the noise inside of the error correcting network is low. This is because the increased number of gates in the autoencoder makes internal noise more significant.",
    "final_audio": "as-a-recap-we-created-a-quantum-forward-pass-using-eaba557a.mp3"
  }
]